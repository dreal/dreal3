(set-logic QF_NRA_ODE)
(declare-fun w () Real)
(declare-fun v () Real)
(declare-fun u () Real)
(declare-fun tau () Real)
(declare-fun s () Real)
(declare-fun w_0_0 () Real)
(declare-fun w_0_t () Real)
(declare-fun w_1_0 () Real)
(declare-fun w_1_t () Real)
(declare-fun w_2_0 () Real)
(declare-fun w_2_t () Real)
(declare-fun w_3_0 () Real)
(declare-fun w_3_t () Real)
(declare-fun v_0_0 () Real)
(declare-fun v_0_t () Real)
(declare-fun v_1_0 () Real)
(declare-fun v_1_t () Real)
(declare-fun v_2_0 () Real)
(declare-fun v_2_t () Real)
(declare-fun v_3_0 () Real)
(declare-fun v_3_t () Real)
(declare-fun u_0_0 () Real)
(declare-fun u_0_t () Real)
(declare-fun u_1_0 () Real)
(declare-fun u_1_t () Real)
(declare-fun u_2_0 () Real)
(declare-fun u_2_t () Real)
(declare-fun u_3_0 () Real)
(declare-fun u_3_t () Real)
(declare-fun tau_0_0 () Real)
(declare-fun tau_0_t () Real)
(declare-fun tau_1_0 () Real)
(declare-fun tau_1_t () Real)
(declare-fun tau_2_0 () Real)
(declare-fun tau_2_t () Real)
(declare-fun tau_3_0 () Real)
(declare-fun tau_3_t () Real)
(declare-fun s_0_0 () Real)
(declare-fun s_0_t () Real)
(declare-fun s_1_0 () Real)
(declare-fun s_1_t () Real)
(declare-fun s_2_0 () Real)
(declare-fun s_2_t () Real)
(declare-fun s_3_0 () Real)
(declare-fun s_3_t () Real)
(declare-fun time_0 () Real)
(declare-fun time_1 () Real)
(declare-fun time_2 () Real)
(declare-fun time_3 () Real)
(declare-fun mode_0 () Real)
(declare-fun mode_1 () Real)
(declare-fun mode_2 () Real)
(declare-fun mode_3 () Real)
(define-ode flow_1 ((= d/dt[s] (/ (- (/ 1 (+ 1 (exp (* (* -2 2.0994) (- u 0.9087))))) s) 2.7342)) (= d/dt[tau] 1) (= d/dt[u] (- (- 1 0) (+ (/ u 400) 0))) (= d/dt[v] (/ (- 1 v) 60)) (= d/dt[w] (/ (- (- 1 (/ u 0.07)) w) (+ 60 (* (- 15 60) (/ 1 (+ 1 (exp (* (* -2 65) (- u 0.03)))))))))))
(define-ode flow_2 ((= d/dt[s] (/ (- (/ 1 (+ 1 (exp (* (* -2 2.0994) (- u 0.9087))))) s) 2.7342)) (= d/dt[tau] 1) (= d/dt[u] (- (- 1 0) (+ (/ u 6) 0))) (= d/dt[v] (/ (- 0 v) 1150)) (= d/dt[w] (/ (- 0.94 w) (+ 60 (* (- 15 60) (/ 1 (+ 1 (exp (* (* -2 65) (- u 0.03)))))))))))
(define-ode flow_3 ((= d/dt[s] (/ (- (/ 1 (+ 1 (exp (* (* -2 2.0994) (- u 0.9087))))) s) 16)) (= d/dt[tau] 1) (= d/dt[u] (- (- 1 0) (+ (/ 1 (+ 30.0181 (* (- 0.9957 30.0181) (/ 1 (+ 1 (exp (* (* -2 2.0458) (- u 0.65)))))))) (- 0 (/ (* w s) 1.8875))))) (= d/dt[v] (/ (- 0 v) 1150)) (= d/dt[w] (/ (- 0 w) 200))))
(define-ode flow_4 ((= d/dt[s] (/ (- (/ 1 (+ 1 (exp (* (* -2 2.0994) (- u 0.9087))))) s) 16)) (= d/dt[tau] 1) (= d/dt[u] (- (- 1 (- 0 (/ (* (* v (- u 0.3)) (- 1.55 u)) 0.11))) (+ (/ 1 (+ 30.0181 (* (- 0.9957 30.0181) (/ 1 (+ 1 (exp (* (* -2 2.0458) (- u 0.65)))))))) (- 0 (/ (* w s) 1.8875))))) (= d/dt[v] (/ (- 0 v) 1.4506)) (= d/dt[w] (/ (- 0 w) 200))))
(assert (<= 0 w_0_0))
(assert (<= w_0_0 1.5))
(assert (<= 0 w_0_t))
(assert (<= w_0_t 1.5))
(assert (<= 0 w_1_0))
(assert (<= w_1_0 1.5))
(assert (<= 0 w_1_t))
(assert (<= w_1_t 1.5))
(assert (<= 0 w_2_0))
(assert (<= w_2_0 1.5))
(assert (<= 0 w_2_t))
(assert (<= w_2_t 1.5))
(assert (<= 0 w_3_0))
(assert (<= w_3_0 1.5))
(assert (<= 0 w_3_t))
(assert (<= w_3_t 1.5))
(assert (<= 0 v_0_0))
(assert (<= v_0_0 1.2))
(assert (<= 0 v_0_t))
(assert (<= v_0_t 1.2))
(assert (<= 0 v_1_0))
(assert (<= v_1_0 1.2))
(assert (<= 0 v_1_t))
(assert (<= v_1_t 1.2))
(assert (<= 0 v_2_0))
(assert (<= v_2_0 1.2))
(assert (<= 0 v_2_t))
(assert (<= v_2_t 1.2))
(assert (<= 0 v_3_0))
(assert (<= v_3_0 1.2))
(assert (<= 0 v_3_t))
(assert (<= v_3_t 1.2))
(assert (<= 0 u_0_0))
(assert (<= u_0_0 1.8))
(assert (<= 0 u_0_t))
(assert (<= u_0_t 1.8))
(assert (<= 0 u_1_0))
(assert (<= u_1_0 1.8))
(assert (<= 0 u_1_t))
(assert (<= u_1_t 1.8))
(assert (<= 0 u_2_0))
(assert (<= u_2_0 1.8))
(assert (<= 0 u_2_t))
(assert (<= u_2_t 1.8))
(assert (<= 0 u_3_0))
(assert (<= u_3_0 1.8))
(assert (<= 0 u_3_t))
(assert (<= u_3_t 1.8))
(assert (<= 0 tau_0_0))
(assert (<= tau_0_0 1))
(assert (<= 0 tau_0_t))
(assert (<= tau_0_t 1))
(assert (<= 0 tau_1_0))
(assert (<= tau_1_0 1))
(assert (<= 0 tau_1_t))
(assert (<= tau_1_t 1))
(assert (<= 0 tau_2_0))
(assert (<= tau_2_0 1))
(assert (<= 0 tau_2_t))
(assert (<= tau_2_t 1))
(assert (<= 0 tau_3_0))
(assert (<= tau_3_0 1))
(assert (<= 0 tau_3_t))
(assert (<= tau_3_t 1))
(assert (<= 0 s_0_0))
(assert (<= s_0_0 1))
(assert (<= 0 s_0_t))
(assert (<= s_0_t 1))
(assert (<= 0 s_1_0))
(assert (<= s_1_0 1))
(assert (<= 0 s_1_t))
(assert (<= s_1_t 1))
(assert (<= 0 s_2_0))
(assert (<= s_2_0 1))
(assert (<= 0 s_2_t))
(assert (<= s_2_t 1))
(assert (<= 0 s_3_0))
(assert (<= s_3_0 1))
(assert (<= 0 s_3_t))
(assert (<= s_3_t 1))
(assert (<= 0 time_0 [0.000000]))
(assert (<= time_0 1 [0.000000]))
(assert (<= 0 time_1 [0.000000]))
(assert (<= time_1 1 [0.000000]))
(assert (<= 0 time_2 [0.000000]))
(assert (<= time_2 1 [0.000000]))
(assert (<= 0 time_3 [0.000000]))
(assert (<= time_3 1 [0.000000]))
(assert (<= 1 mode_0))
(assert (<= mode_0 4))
(assert (<= 1 mode_1))
(assert (<= mode_1 4))
(assert (<= 1 mode_2))
(assert (<= mode_2 4))
(assert (<= 1 mode_3))
(assert (<= mode_3 4))
(assert (and (and (= tau_0_0 0) (<= u_0_0 0.1) (>= u_0_0 0) (<= v_0_0 1) (>= v_0_0 0.9) (<= w_0_0 1) (>= w_0_0 0.9) (<= s_0_0 0.1) (>= s_0_0 0)) (= mode_0 1) (= [s_0_t tau_0_t u_0_t v_0_t w_0_t] (integral 0. time_0 [s_0_0 tau_0_0 u_0_0 v_0_0 w_0_0] flow_1)) (= mode_0 1) (forall_t 1 [0 time_0] (>= u_0_t 0)) (>= u_0_t 0) (>= u_0_0 0) (forall_t 1 [0 time_0] (<= u_0_t 0.006)) (<= u_0_t 0.006) (<= u_0_0 0.006) (forall_t 1 [0 time_0] (>= v_0_t 0)) (>= v_0_t 0) (>= v_0_0 0) (forall_t 1 [0 time_0] (>= w_0_t 0)) (>= w_0_t 0) (>= w_0_0 0) (forall_t 1 [0 time_0] (>= s_0_t 0)) (>= s_0_t 0) (>= s_0_0 0) (forall_t 1 [0 time_0] (>= tau_0_t 0)) (>= tau_0_t 0) (>= tau_0_0 0) (= mode_1 2) (>= u_0_t 0.006) (= s_1_0 s_0_t) (= w_1_0 w_0_t) (= v_1_0 v_0_t) (= u_1_0 u_0_t) (= tau_1_0 tau_0_t) (= [s_1_t tau_1_t u_1_t v_1_t w_1_t] (integral 0. time_1 [s_1_0 tau_1_0 u_1_0 v_1_0 w_1_0] flow_2)) (= mode_1 2) (forall_t 2 [0 time_1] (>= u_1_t 0.006)) (>= u_1_t 0.006) (>= u_1_0 0.006) (forall_t 2 [0 time_1] (<= u_1_t 0.013)) (<= u_1_t 0.013) (<= u_1_0 0.013) (forall_t 2 [0 time_1] (>= v_1_t 0)) (>= v_1_t 0) (>= v_1_0 0) (forall_t 2 [0 time_1] (>= w_1_t 0)) (>= w_1_t 0) (>= w_1_0 0) (forall_t 2 [0 time_1] (>= s_1_t 0)) (>= s_1_t 0) (>= s_1_0 0) (forall_t 2 [0 time_1] (>= tau_1_t 0)) (>= tau_1_t 0) (>= tau_1_0 0) (= mode_2 3) (>= u_1_t 0.013) (= s_2_0 s_1_t) (= w_2_0 w_1_t) (= v_2_0 v_1_t) (= u_2_0 u_1_t) (= tau_2_0 tau_1_t) (= [s_2_t tau_2_t u_2_t v_2_t w_2_t] (integral 0. time_2 [s_2_0 tau_2_0 u_2_0 v_2_0 w_2_0] flow_3)) (= mode_2 3) (forall_t 3 [0 time_2] (>= u_2_t 0.013)) (>= u_2_t 0.013) (>= u_2_0 0.013) (forall_t 3 [0 time_2] (<= u_2_t 0.3)) (<= u_2_t 0.3) (<= u_2_0 0.3) (forall_t 3 [0 time_2] (>= v_2_t 0)) (>= v_2_t 0) (>= v_2_0 0) (forall_t 3 [0 time_2] (>= w_2_t 0)) (>= w_2_t 0) (>= w_2_0 0) (forall_t 3 [0 time_2] (>= s_2_t 0)) (>= s_2_t 0) (>= s_2_0 0) (forall_t 3 [0 time_2] (>= tau_2_t 0)) (>= tau_2_t 0) (>= tau_2_0 0) (= mode_3 4) (>= u_2_t 0.3) (= s_3_0 s_2_t) (= w_3_0 w_2_t) (= v_3_0 v_2_t) (= u_3_0 u_2_t) (= tau_3_0 tau_2_t) (= [s_3_t tau_3_t u_3_t v_3_t w_3_t] (integral 0. time_3 [s_3_0 tau_3_0 u_3_0 v_3_0 w_3_0] flow_4)) (= mode_3 4) (forall_t 4 [0 time_3] (>= u_3_t 0.3)) (>= u_3_t 0.3) (>= u_3_0 0.3) (forall_t 4 [0 time_3] (<= u_3_t 2)) (<= u_3_t 2) (<= u_3_0 2) (forall_t 4 [0 time_3] (>= v_3_t 0)) (>= v_3_t 0) (>= v_3_0 0) (forall_t 4 [0 time_3] (>= w_3_t 0)) (>= w_3_t 0) (>= w_3_0 0) (forall_t 4 [0 time_3] (>= s_3_t 0)) (>= s_3_t 0) (>= s_3_0 0) (forall_t 4 [0 time_3] (>= tau_3_t 0)) (>= tau_3_t 0) (>= tau_3_0 0) (= mode_3 4) (>= s_3_t 0) (>= w_3_t 0) (>= v_3_t 0) (>= u_3_t 1.5) (> tau_3_t 0)))
(check-sat)
(exit)
