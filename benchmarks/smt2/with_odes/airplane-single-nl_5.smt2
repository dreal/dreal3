(set-logic QF_NRA_ODE)
(declare-fun beta () Real)
(declare-fun gAIL () Real)
(declare-fun gDir () Real)
(declare-fun gRDR () Real)
(declare-fun p () Real)
(declare-fun phi () Real)
(declare-fun psi () Real)
(declare-fun r () Real)
(declare-fun tau () Real)
(declare-fun xAIL () Real)
(declare-fun xRDR () Real)
(declare-fun beta_0_0 () Real)
(declare-fun beta_0_t () Real)
(declare-fun beta_1_0 () Real)
(declare-fun beta_1_t () Real)
(declare-fun beta_2_0 () Real)
(declare-fun beta_2_t () Real)
(declare-fun beta_3_0 () Real)
(declare-fun beta_3_t () Real)
(declare-fun beta_4_0 () Real)
(declare-fun beta_4_t () Real)
(declare-fun beta_5_0 () Real)
(declare-fun beta_5_t () Real)
(declare-fun gAIL_0_0 () Real)
(declare-fun gAIL_0_t () Real)
(declare-fun gAIL_1_0 () Real)
(declare-fun gAIL_1_t () Real)
(declare-fun gAIL_2_0 () Real)
(declare-fun gAIL_2_t () Real)
(declare-fun gAIL_3_0 () Real)
(declare-fun gAIL_3_t () Real)
(declare-fun gAIL_4_0 () Real)
(declare-fun gAIL_4_t () Real)
(declare-fun gAIL_5_0 () Real)
(declare-fun gAIL_5_t () Real)
(declare-fun gDir_0_0 () Real)
(declare-fun gDir_0_t () Real)
(declare-fun gDir_1_0 () Real)
(declare-fun gDir_1_t () Real)
(declare-fun gDir_2_0 () Real)
(declare-fun gDir_2_t () Real)
(declare-fun gDir_3_0 () Real)
(declare-fun gDir_3_t () Real)
(declare-fun gDir_4_0 () Real)
(declare-fun gDir_4_t () Real)
(declare-fun gDir_5_0 () Real)
(declare-fun gDir_5_t () Real)
(declare-fun gRDR_0_0 () Real)
(declare-fun gRDR_0_t () Real)
(declare-fun gRDR_1_0 () Real)
(declare-fun gRDR_1_t () Real)
(declare-fun gRDR_2_0 () Real)
(declare-fun gRDR_2_t () Real)
(declare-fun gRDR_3_0 () Real)
(declare-fun gRDR_3_t () Real)
(declare-fun gRDR_4_0 () Real)
(declare-fun gRDR_4_t () Real)
(declare-fun gRDR_5_0 () Real)
(declare-fun gRDR_5_t () Real)
(declare-fun p_0_0 () Real)
(declare-fun p_0_t () Real)
(declare-fun p_1_0 () Real)
(declare-fun p_1_t () Real)
(declare-fun p_2_0 () Real)
(declare-fun p_2_t () Real)
(declare-fun p_3_0 () Real)
(declare-fun p_3_t () Real)
(declare-fun p_4_0 () Real)
(declare-fun p_4_t () Real)
(declare-fun p_5_0 () Real)
(declare-fun p_5_t () Real)
(declare-fun phi_0_0 () Real)
(declare-fun phi_0_t () Real)
(declare-fun phi_1_0 () Real)
(declare-fun phi_1_t () Real)
(declare-fun phi_2_0 () Real)
(declare-fun phi_2_t () Real)
(declare-fun phi_3_0 () Real)
(declare-fun phi_3_t () Real)
(declare-fun phi_4_0 () Real)
(declare-fun phi_4_t () Real)
(declare-fun phi_5_0 () Real)
(declare-fun phi_5_t () Real)
(declare-fun psi_0_0 () Real)
(declare-fun psi_0_t () Real)
(declare-fun psi_1_0 () Real)
(declare-fun psi_1_t () Real)
(declare-fun psi_2_0 () Real)
(declare-fun psi_2_t () Real)
(declare-fun psi_3_0 () Real)
(declare-fun psi_3_t () Real)
(declare-fun psi_4_0 () Real)
(declare-fun psi_4_t () Real)
(declare-fun psi_5_0 () Real)
(declare-fun psi_5_t () Real)
(declare-fun r_0_0 () Real)
(declare-fun r_0_t () Real)
(declare-fun r_1_0 () Real)
(declare-fun r_1_t () Real)
(declare-fun r_2_0 () Real)
(declare-fun r_2_t () Real)
(declare-fun r_3_0 () Real)
(declare-fun r_3_t () Real)
(declare-fun r_4_0 () Real)
(declare-fun r_4_t () Real)
(declare-fun r_5_0 () Real)
(declare-fun r_5_t () Real)
(declare-fun tau_0_0 () Real)
(declare-fun tau_0_t () Real)
(declare-fun tau_1_0 () Real)
(declare-fun tau_1_t () Real)
(declare-fun tau_2_0 () Real)
(declare-fun tau_2_t () Real)
(declare-fun tau_3_0 () Real)
(declare-fun tau_3_t () Real)
(declare-fun tau_4_0 () Real)
(declare-fun tau_4_t () Real)
(declare-fun tau_5_0 () Real)
(declare-fun tau_5_t () Real)
(declare-fun xAIL_0_0 () Real)
(declare-fun xAIL_0_t () Real)
(declare-fun xAIL_1_0 () Real)
(declare-fun xAIL_1_t () Real)
(declare-fun xAIL_2_0 () Real)
(declare-fun xAIL_2_t () Real)
(declare-fun xAIL_3_0 () Real)
(declare-fun xAIL_3_t () Real)
(declare-fun xAIL_4_0 () Real)
(declare-fun xAIL_4_t () Real)
(declare-fun xAIL_5_0 () Real)
(declare-fun xAIL_5_t () Real)
(declare-fun xRDR_0_0 () Real)
(declare-fun xRDR_0_t () Real)
(declare-fun xRDR_1_0 () Real)
(declare-fun xRDR_1_t () Real)
(declare-fun xRDR_2_0 () Real)
(declare-fun xRDR_2_t () Real)
(declare-fun xRDR_3_0 () Real)
(declare-fun xRDR_3_t () Real)
(declare-fun xRDR_4_0 () Real)
(declare-fun xRDR_4_t () Real)
(declare-fun xRDR_5_0 () Real)
(declare-fun xRDR_5_t () Real)
(declare-fun time_0 () Real)
(declare-fun time_1 () Real)
(declare-fun time_2 () Real)
(declare-fun time_3 () Real)
(declare-fun time_4 () Real)
(declare-fun time_5 () Real)
(declare-fun mode_1_0 () Real)
(declare-fun mode_1_1 () Real)
(declare-fun mode_1_2 () Real)
(declare-fun mode_1_3 () Real)
(declare-fun mode_1_4 () Real)
(declare-fun mode_1_5 () Real)
(declare-fun gamma_singleton0_1 () Real)
(declare-fun gamma_singleton0_2 () Real)
(declare-fun gamma_singleton0_3 () Real)
(declare-fun gamma_singleton0_4 () Real)
(declare-fun gamma_singleton0_1_0_0 () Real)
(declare-fun gamma_singleton0_2_0_0 () Real)
(declare-fun gamma_singleton0_3_0_0 () Real)
(declare-fun gamma_singleton0_4_0_0 () Real)
(declare-fun gamma_singleton0_1_1_0 () Real)
(declare-fun gamma_singleton0_2_1_0 () Real)
(declare-fun gamma_singleton0_3_1_0 () Real)
(declare-fun gamma_singleton0_4_1_0 () Real)
(declare-fun gamma_singleton0_1_2_0 () Real)
(declare-fun gamma_singleton0_2_2_0 () Real)
(declare-fun gamma_singleton0_3_2_0 () Real)
(declare-fun gamma_singleton0_4_2_0 () Real)
(declare-fun gamma_singleton0_1_3_0 () Real)
(declare-fun gamma_singleton0_2_3_0 () Real)
(declare-fun gamma_singleton0_3_3_0 () Real)
(declare-fun gamma_singleton0_4_3_0 () Real)
(declare-fun gamma_singleton0_1_4_0 () Real)
(declare-fun gamma_singleton0_2_4_0 () Real)
(declare-fun gamma_singleton0_3_4_0 () Real)
(declare-fun gamma_singleton0_4_4_0 () Real)
(declare-fun gamma_singleton0_1_5_0 () Real)
(declare-fun gamma_singleton0_2_5_0 () Real)
(declare-fun gamma_singleton0_3_5_0 () Real)
(declare-fun gamma_singleton0_4_5_0 () Real)
(define-ode flow_0 ((= d/dt[beta] (+ (* (+ (- (/ (* (* 13.97 300) (+ (+ (* (/ (* -0.02 180) 3.14159) beta) (/ (* 0.021 xAIL) 20)) (/ (* 0.086 xRDR) 30))) (* 20500 111.64)) r) (* (* (/ 111.64 9.80555) (cos beta)) (sin phi))) gamma_singleton0_1) (* (+ (- (/ (* (* 13.97 300) (+ (+ (* (/ (* -0.02 180) 3.14159) beta) (/ (* 0.021 xAIL) 20)) (/ (* 0.086 xRDR) 30))) (* 20500 111.64)) r) (* (* (/ 111.64 9.80555) (cos beta)) (sin phi))) gamma_singleton0_2) (* (+ (- (/ (* (* 13.97 300) (+ (+ (* (/ (* -0.02 180) 3.14159) beta) (/ (* 0.021 xAIL) 20)) (/ (* 0.086 xRDR) 30))) (* 20500 111.64)) r) (* (* (/ 111.64 9.80555) (cos beta)) (sin phi))) gamma_singleton0_3) (* (+ (- (/ (* (* 13.97 300) (+ (+ (* (/ (* -0.02 180) 3.14159) beta) (/ (* 0.021 xAIL) 20)) (/ (* 0.086 xRDR) 30))) (* 20500 111.64)) r) (* (* (/ 111.64 9.80555) (cos beta)) (sin phi))) gamma_singleton0_4))) (= d/dt[gAIL] (+ (* 0 gamma_singleton0_1) (* 0 gamma_singleton0_2) (* 0 gamma_singleton0_3) (* 0 gamma_singleton0_4))) (= d/dt[gDir] (+ (* 0 gamma_singleton0_1) (* 0 gamma_singleton0_2) (* 0 gamma_singleton0_3) (* 0 gamma_singleton0_4))) (= d/dt[gRDR] (+ (* 0 gamma_singleton0_1) (* 0 gamma_singleton0_2) (* 0 gamma_singleton0_3) (* 0 gamma_singleton0_4))) (= d/dt[p] (+ (* (+ (* (* (+ (* -0.77 r) (* 0.02755 p)) r) (tan phi)) (* (* (* 13.97 30) 300) (+ (* 0.0001055 (+ (+ (* (/ (* -0.0008 180) 3.14159) beta) (/ (* 0.05 xAIL) 20)) (/ (* 0.013 xRDR) 30))) (* 1.642e-06 (+ (+ (* (/ (* 0.02 180) 3.14159) beta) (/ (* -0.01 xAIL) 20)) (/ (* -0.04 xRDR) 30)))))) gamma_singleton0_1) (* (+ (* (* (+ (* -0.77 r) (* 0.02755 p)) r) (tan phi)) (* (* (* 13.97 30) 300) (+ (* 0.0001055 (+ (+ (* (/ (* -0.0008 180) 3.14159) beta) (/ (* 0.05 xAIL) 20)) (/ (* 0.013 xRDR) 30))) (* 1.642e-06 (+ (+ (* (/ (* 0.02 180) 3.14159) beta) (/ (* -0.01 xAIL) 20)) (/ (* -0.04 xRDR) 30)))))) gamma_singleton0_2) (* (+ (* (* (+ (* -0.77 r) (* 0.02755 p)) r) (tan phi)) (* (* (* 13.97 30) 300) (+ (* 0.0001055 (+ (+ (* (/ (* -0.0008 180) 3.14159) beta) (/ (* 0.05 xAIL) 20)) (/ (* 0.013 xRDR) 30))) (* 1.642e-06 (+ (+ (* (/ (* 0.02 180) 3.14159) beta) (/ (* -0.01 xAIL) 20)) (/ (* -0.04 xRDR) 30)))))) gamma_singleton0_3) (* (+ (* (* (+ (* -0.77 r) (* 0.02755 p)) r) (tan phi)) (* (* (* 13.97 30) 300) (+ (* 0.0001055 (+ (+ (* (/ (* -0.0008 180) 3.14159) beta) (/ (* 0.05 xAIL) 20)) (/ (* 0.013 xRDR) 30))) (* 1.642e-06 (+ (+ (* (/ (* 0.02 180) 3.14159) beta) (/ (* -0.01 xAIL) 20)) (/ (* -0.04 xRDR) 30)))))) gamma_singleton0_4))) (= d/dt[phi] (+ (* p gamma_singleton0_1) (* p gamma_singleton0_2) (* p gamma_singleton0_3) (* p gamma_singleton0_4))) (= d/dt[psi] (+ (* (* (/ 9.80555 111.64) (tan phi)) gamma_singleton0_1) (* (* (/ 9.80555 111.64) (tan phi)) gamma_singleton0_2) (* (* (/ 9.80555 111.64) (tan phi)) gamma_singleton0_3) (* (* (/ 9.80555 111.64) (tan phi)) gamma_singleton0_4))) (= d/dt[r] (+ (* (+ (* (* (- (* -0.7336 p) (* 0.02755 r)) r) (tan phi)) (* (* (* 13.97 30) 300) (+ (* 1.642e-06 (+ (+ (* (/ (* -0.0008 180) 3.14159) beta) (/ (* 0.05 xAIL) 20)) (/ (* 0.013 xRDR) 30))) (* 1.587e-05 (+ (+ (* (/ (* 0.02 180) 3.14159) beta) (/ (* -0.01 xAIL) 20)) (/ (* -0.04 xRDR) 30)))))) gamma_singleton0_1) (* (+ (* (* (- (* -0.7336 p) (* 0.02755 r)) r) (tan phi)) (* (* (* 13.97 30) 300) (+ (* 1.642e-06 (+ (+ (* (/ (* -0.0008 180) 3.14159) beta) (/ (* 0.05 xAIL) 20)) (/ (* 0.013 xRDR) 30))) (* 1.587e-05 (+ (+ (* (/ (* 0.02 180) 3.14159) beta) (/ (* -0.01 xAIL) 20)) (/ (* -0.04 xRDR) 30)))))) gamma_singleton0_2) (* (+ (* (* (- (* -0.7336 p) (* 0.02755 r)) r) (tan phi)) (* (* (* 13.97 30) 300) (+ (* 1.642e-06 (+ (+ (* (/ (* -0.0008 180) 3.14159) beta) (/ (* 0.05 xAIL) 20)) (/ (* 0.013 xRDR) 30))) (* 1.587e-05 (+ (+ (* (/ (* 0.02 180) 3.14159) beta) (/ (* -0.01 xAIL) 20)) (/ (* -0.04 xRDR) 30)))))) gamma_singleton0_3) (* (+ (* (* (- (* -0.7336 p) (* 0.02755 r)) r) (tan phi)) (* (* (* 13.97 30) 300) (+ (* 1.642e-06 (+ (+ (* (/ (* -0.0008 180) 3.14159) beta) (/ (* 0.05 xAIL) 20)) (/ (* 0.013 xRDR) 30))) (* 1.587e-05 (+ (+ (* (/ (* 0.02 180) 3.14159) beta) (/ (* -0.01 xAIL) 20)) (/ (* -0.04 xRDR) 30)))))) gamma_singleton0_4))) (= d/dt[tau] (+ (* 1 gamma_singleton0_1) (* 1 gamma_singleton0_2) (* 1 gamma_singleton0_3) (* 1 gamma_singleton0_4))) (= d/dt[xAIL] (+ (* 0.25 gamma_singleton0_1) (* 0.25 gamma_singleton0_2) (* -0.25 gamma_singleton0_3) (* -0.25 gamma_singleton0_4))) (= d/dt[xRDR] (+ (* 0.5 gamma_singleton0_1) (* -0.5 gamma_singleton0_2) (* 0.5 gamma_singleton0_3) (* -0.5 gamma_singleton0_4))) (= d/dt[gamma_singleton0_1] 0) (= d/dt[gamma_singleton0_2] 0) (= d/dt[gamma_singleton0_3] 0) (= d/dt[gamma_singleton0_4] 0)))
(define-ode flow_1 ((= d/dt[beta] (+ (* (+ (- (/ (* (* 13.97 300) (+ (+ (* (/ (* -0.02 180) 3.14159) beta) (/ (* 0.021 xAIL) 20)) (/ (* 0.086 xRDR) 30))) (* 20500 111.64)) r) (* (* (/ 111.64 9.80555) (cos beta)) (sin phi))) gamma_singleton0_1) (* (+ (- (/ (* (* 13.97 300) (+ (+ (* (/ (* -0.02 180) 3.14159) beta) (/ (* 0.021 xAIL) 20)) (/ (* 0.086 xRDR) 30))) (* 20500 111.64)) r) (* (* (/ 111.64 9.80555) (cos beta)) (sin phi))) gamma_singleton0_2) (* (+ (- (/ (* (* 13.97 300) (+ (+ (* (/ (* -0.02 180) 3.14159) beta) (/ (* 0.021 xAIL) 20)) (/ (* 0.086 xRDR) 30))) (* 20500 111.64)) r) (* (* (/ 111.64 9.80555) (cos beta)) (sin phi))) gamma_singleton0_3) (* (+ (- (/ (* (* 13.97 300) (+ (+ (* (/ (* -0.02 180) 3.14159) beta) (/ (* 0.021 xAIL) 20)) (/ (* 0.086 xRDR) 30))) (* 20500 111.64)) r) (* (* (/ 111.64 9.80555) (cos beta)) (sin phi))) gamma_singleton0_4))) (= d/dt[gAIL] (+ (* 0 gamma_singleton0_1) (* 0 gamma_singleton0_2) (* 0 gamma_singleton0_3) (* 0 gamma_singleton0_4))) (= d/dt[gDir] (+ (* 0 gamma_singleton0_1) (* 0 gamma_singleton0_2) (* 0 gamma_singleton0_3) (* 0 gamma_singleton0_4))) (= d/dt[gRDR] (+ (* 0 gamma_singleton0_1) (* 0 gamma_singleton0_2) (* 0 gamma_singleton0_3) (* 0 gamma_singleton0_4))) (= d/dt[p] (+ (* (+ (* (* (+ (* -0.77 r) (* 0.02755 p)) r) (tan phi)) (* (* (* 13.97 30) 300) (+ (* 0.0001055 (+ (+ (* (/ (* -0.0008 180) 3.14159) beta) (/ (* 0.05 xAIL) 20)) (/ (* 0.013 xRDR) 30))) (* 1.642e-06 (+ (+ (* (/ (* 0.02 180) 3.14159) beta) (/ (* -0.01 xAIL) 20)) (/ (* -0.04 xRDR) 30)))))) gamma_singleton0_1) (* (+ (* (* (+ (* -0.77 r) (* 0.02755 p)) r) (tan phi)) (* (* (* 13.97 30) 300) (+ (* 0.0001055 (+ (+ (* (/ (* -0.0008 180) 3.14159) beta) (/ (* 0.05 xAIL) 20)) (/ (* 0.013 xRDR) 30))) (* 1.642e-06 (+ (+ (* (/ (* 0.02 180) 3.14159) beta) (/ (* -0.01 xAIL) 20)) (/ (* -0.04 xRDR) 30)))))) gamma_singleton0_2) (* (+ (* (* (+ (* -0.77 r) (* 0.02755 p)) r) (tan phi)) (* (* (* 13.97 30) 300) (+ (* 0.0001055 (+ (+ (* (/ (* -0.0008 180) 3.14159) beta) (/ (* 0.05 xAIL) 20)) (/ (* 0.013 xRDR) 30))) (* 1.642e-06 (+ (+ (* (/ (* 0.02 180) 3.14159) beta) (/ (* -0.01 xAIL) 20)) (/ (* -0.04 xRDR) 30)))))) gamma_singleton0_3) (* (+ (* (* (+ (* -0.77 r) (* 0.02755 p)) r) (tan phi)) (* (* (* 13.97 30) 300) (+ (* 0.0001055 (+ (+ (* (/ (* -0.0008 180) 3.14159) beta) (/ (* 0.05 xAIL) 20)) (/ (* 0.013 xRDR) 30))) (* 1.642e-06 (+ (+ (* (/ (* 0.02 180) 3.14159) beta) (/ (* -0.01 xAIL) 20)) (/ (* -0.04 xRDR) 30)))))) gamma_singleton0_4))) (= d/dt[phi] (+ (* p gamma_singleton0_1) (* p gamma_singleton0_2) (* p gamma_singleton0_3) (* p gamma_singleton0_4))) (= d/dt[psi] (+ (* (* (/ 9.80555 111.64) (tan phi)) gamma_singleton0_1) (* (* (/ 9.80555 111.64) (tan phi)) gamma_singleton0_2) (* (* (/ 9.80555 111.64) (tan phi)) gamma_singleton0_3) (* (* (/ 9.80555 111.64) (tan phi)) gamma_singleton0_4))) (= d/dt[r] (+ (* (+ (* (* (- (* -0.7336 p) (* 0.02755 r)) r) (tan phi)) (* (* (* 13.97 30) 300) (+ (* 1.642e-06 (+ (+ (* (/ (* -0.0008 180) 3.14159) beta) (/ (* 0.05 xAIL) 20)) (/ (* 0.013 xRDR) 30))) (* 1.587e-05 (+ (+ (* (/ (* 0.02 180) 3.14159) beta) (/ (* -0.01 xAIL) 20)) (/ (* -0.04 xRDR) 30)))))) gamma_singleton0_1) (* (+ (* (* (- (* -0.7336 p) (* 0.02755 r)) r) (tan phi)) (* (* (* 13.97 30) 300) (+ (* 1.642e-06 (+ (+ (* (/ (* -0.0008 180) 3.14159) beta) (/ (* 0.05 xAIL) 20)) (/ (* 0.013 xRDR) 30))) (* 1.587e-05 (+ (+ (* (/ (* 0.02 180) 3.14159) beta) (/ (* -0.01 xAIL) 20)) (/ (* -0.04 xRDR) 30)))))) gamma_singleton0_2) (* (+ (* (* (- (* -0.7336 p) (* 0.02755 r)) r) (tan phi)) (* (* (* 13.97 30) 300) (+ (* 1.642e-06 (+ (+ (* (/ (* -0.0008 180) 3.14159) beta) (/ (* 0.05 xAIL) 20)) (/ (* 0.013 xRDR) 30))) (* 1.587e-05 (+ (+ (* (/ (* 0.02 180) 3.14159) beta) (/ (* -0.01 xAIL) 20)) (/ (* -0.04 xRDR) 30)))))) gamma_singleton0_3) (* (+ (* (* (- (* -0.7336 p) (* 0.02755 r)) r) (tan phi)) (* (* (* 13.97 30) 300) (+ (* 1.642e-06 (+ (+ (* (/ (* -0.0008 180) 3.14159) beta) (/ (* 0.05 xAIL) 20)) (/ (* 0.013 xRDR) 30))) (* 1.587e-05 (+ (+ (* (/ (* 0.02 180) 3.14159) beta) (/ (* -0.01 xAIL) 20)) (/ (* -0.04 xRDR) 30)))))) gamma_singleton0_4))) (= d/dt[tau] (+ (* 1 gamma_singleton0_1) (* 1 gamma_singleton0_2) (* 1 gamma_singleton0_3) (* 1 gamma_singleton0_4))) (= d/dt[xAIL] (+ (* 0.25 gamma_singleton0_1) (* 0.25 gamma_singleton0_2) (* -0.25 gamma_singleton0_3) (* -0.25 gamma_singleton0_4))) (= d/dt[xRDR] (+ (* 0.5 gamma_singleton0_1) (* -0.5 gamma_singleton0_2) (* 0.5 gamma_singleton0_3) (* -0.5 gamma_singleton0_4))) (= d/dt[gamma_singleton0_1] 0) (= d/dt[gamma_singleton0_2] 0) (= d/dt[gamma_singleton0_3] 0) (= d/dt[gamma_singleton0_4] 0)))
(define-ode flow_2 ((= d/dt[beta] (+ (* (+ (- (/ (* (* 13.97 300) (+ (+ (* (/ (* -0.02 180) 3.14159) beta) (/ (* 0.021 xAIL) 20)) (/ (* 0.086 xRDR) 30))) (* 20500 111.64)) r) (* (* (/ 111.64 9.80555) (cos beta)) (sin phi))) gamma_singleton0_1) (* (+ (- (/ (* (* 13.97 300) (+ (+ (* (/ (* -0.02 180) 3.14159) beta) (/ (* 0.021 xAIL) 20)) (/ (* 0.086 xRDR) 30))) (* 20500 111.64)) r) (* (* (/ 111.64 9.80555) (cos beta)) (sin phi))) gamma_singleton0_2) (* (+ (- (/ (* (* 13.97 300) (+ (+ (* (/ (* -0.02 180) 3.14159) beta) (/ (* 0.021 xAIL) 20)) (/ (* 0.086 xRDR) 30))) (* 20500 111.64)) r) (* (* (/ 111.64 9.80555) (cos beta)) (sin phi))) gamma_singleton0_3) (* (+ (- (/ (* (* 13.97 300) (+ (+ (* (/ (* -0.02 180) 3.14159) beta) (/ (* 0.021 xAIL) 20)) (/ (* 0.086 xRDR) 30))) (* 20500 111.64)) r) (* (* (/ 111.64 9.80555) (cos beta)) (sin phi))) gamma_singleton0_4))) (= d/dt[gAIL] (+ (* 0 gamma_singleton0_1) (* 0 gamma_singleton0_2) (* 0 gamma_singleton0_3) (* 0 gamma_singleton0_4))) (= d/dt[gDir] (+ (* 0 gamma_singleton0_1) (* 0 gamma_singleton0_2) (* 0 gamma_singleton0_3) (* 0 gamma_singleton0_4))) (= d/dt[gRDR] (+ (* 0 gamma_singleton0_1) (* 0 gamma_singleton0_2) (* 0 gamma_singleton0_3) (* 0 gamma_singleton0_4))) (= d/dt[p] (+ (* (+ (* (* (+ (* -0.77 r) (* 0.02755 p)) r) (tan phi)) (* (* (* 13.97 30) 300) (+ (* 0.0001055 (+ (+ (* (/ (* -0.0008 180) 3.14159) beta) (/ (* 0.05 xAIL) 20)) (/ (* 0.013 xRDR) 30))) (* 1.642e-06 (+ (+ (* (/ (* 0.02 180) 3.14159) beta) (/ (* -0.01 xAIL) 20)) (/ (* -0.04 xRDR) 30)))))) gamma_singleton0_1) (* (+ (* (* (+ (* -0.77 r) (* 0.02755 p)) r) (tan phi)) (* (* (* 13.97 30) 300) (+ (* 0.0001055 (+ (+ (* (/ (* -0.0008 180) 3.14159) beta) (/ (* 0.05 xAIL) 20)) (/ (* 0.013 xRDR) 30))) (* 1.642e-06 (+ (+ (* (/ (* 0.02 180) 3.14159) beta) (/ (* -0.01 xAIL) 20)) (/ (* -0.04 xRDR) 30)))))) gamma_singleton0_2) (* (+ (* (* (+ (* -0.77 r) (* 0.02755 p)) r) (tan phi)) (* (* (* 13.97 30) 300) (+ (* 0.0001055 (+ (+ (* (/ (* -0.0008 180) 3.14159) beta) (/ (* 0.05 xAIL) 20)) (/ (* 0.013 xRDR) 30))) (* 1.642e-06 (+ (+ (* (/ (* 0.02 180) 3.14159) beta) (/ (* -0.01 xAIL) 20)) (/ (* -0.04 xRDR) 30)))))) gamma_singleton0_3) (* (+ (* (* (+ (* -0.77 r) (* 0.02755 p)) r) (tan phi)) (* (* (* 13.97 30) 300) (+ (* 0.0001055 (+ (+ (* (/ (* -0.0008 180) 3.14159) beta) (/ (* 0.05 xAIL) 20)) (/ (* 0.013 xRDR) 30))) (* 1.642e-06 (+ (+ (* (/ (* 0.02 180) 3.14159) beta) (/ (* -0.01 xAIL) 20)) (/ (* -0.04 xRDR) 30)))))) gamma_singleton0_4))) (= d/dt[phi] (+ (* p gamma_singleton0_1) (* p gamma_singleton0_2) (* p gamma_singleton0_3) (* p gamma_singleton0_4))) (= d/dt[psi] (+ (* (* (/ 9.80555 111.64) (tan phi)) gamma_singleton0_1) (* (* (/ 9.80555 111.64) (tan phi)) gamma_singleton0_2) (* (* (/ 9.80555 111.64) (tan phi)) gamma_singleton0_3) (* (* (/ 9.80555 111.64) (tan phi)) gamma_singleton0_4))) (= d/dt[r] (+ (* (+ (* (* (- (* -0.7336 p) (* 0.02755 r)) r) (tan phi)) (* (* (* 13.97 30) 300) (+ (* 1.642e-06 (+ (+ (* (/ (* -0.0008 180) 3.14159) beta) (/ (* 0.05 xAIL) 20)) (/ (* 0.013 xRDR) 30))) (* 1.587e-05 (+ (+ (* (/ (* 0.02 180) 3.14159) beta) (/ (* -0.01 xAIL) 20)) (/ (* -0.04 xRDR) 30)))))) gamma_singleton0_1) (* (+ (* (* (- (* -0.7336 p) (* 0.02755 r)) r) (tan phi)) (* (* (* 13.97 30) 300) (+ (* 1.642e-06 (+ (+ (* (/ (* -0.0008 180) 3.14159) beta) (/ (* 0.05 xAIL) 20)) (/ (* 0.013 xRDR) 30))) (* 1.587e-05 (+ (+ (* (/ (* 0.02 180) 3.14159) beta) (/ (* -0.01 xAIL) 20)) (/ (* -0.04 xRDR) 30)))))) gamma_singleton0_2) (* (+ (* (* (- (* -0.7336 p) (* 0.02755 r)) r) (tan phi)) (* (* (* 13.97 30) 300) (+ (* 1.642e-06 (+ (+ (* (/ (* -0.0008 180) 3.14159) beta) (/ (* 0.05 xAIL) 20)) (/ (* 0.013 xRDR) 30))) (* 1.587e-05 (+ (+ (* (/ (* 0.02 180) 3.14159) beta) (/ (* -0.01 xAIL) 20)) (/ (* -0.04 xRDR) 30)))))) gamma_singleton0_3) (* (+ (* (* (- (* -0.7336 p) (* 0.02755 r)) r) (tan phi)) (* (* (* 13.97 30) 300) (+ (* 1.642e-06 (+ (+ (* (/ (* -0.0008 180) 3.14159) beta) (/ (* 0.05 xAIL) 20)) (/ (* 0.013 xRDR) 30))) (* 1.587e-05 (+ (+ (* (/ (* 0.02 180) 3.14159) beta) (/ (* -0.01 xAIL) 20)) (/ (* -0.04 xRDR) 30)))))) gamma_singleton0_4))) (= d/dt[tau] (+ (* 1 gamma_singleton0_1) (* 1 gamma_singleton0_2) (* 1 gamma_singleton0_3) (* 1 gamma_singleton0_4))) (= d/dt[xAIL] (+ (* 0.25 gamma_singleton0_1) (* 0.25 gamma_singleton0_2) (* -0.25 gamma_singleton0_3) (* -0.25 gamma_singleton0_4))) (= d/dt[xRDR] (+ (* 0.5 gamma_singleton0_1) (* -0.5 gamma_singleton0_2) (* 0.5 gamma_singleton0_3) (* -0.5 gamma_singleton0_4))) (= d/dt[gamma_singleton0_1] 0) (= d/dt[gamma_singleton0_2] 0) (= d/dt[gamma_singleton0_3] 0) (= d/dt[gamma_singleton0_4] 0)))
(define-ode flow_3 ((= d/dt[beta] (+ (* (+ (- (/ (* (* 13.97 300) (+ (+ (* (/ (* -0.02 180) 3.14159) beta) (/ (* 0.021 xAIL) 20)) (/ (* 0.086 xRDR) 30))) (* 20500 111.64)) r) (* (* (/ 111.64 9.80555) (cos beta)) (sin phi))) gamma_singleton0_1) (* (+ (- (/ (* (* 13.97 300) (+ (+ (* (/ (* -0.02 180) 3.14159) beta) (/ (* 0.021 xAIL) 20)) (/ (* 0.086 xRDR) 30))) (* 20500 111.64)) r) (* (* (/ 111.64 9.80555) (cos beta)) (sin phi))) gamma_singleton0_2) (* (+ (- (/ (* (* 13.97 300) (+ (+ (* (/ (* -0.02 180) 3.14159) beta) (/ (* 0.021 xAIL) 20)) (/ (* 0.086 xRDR) 30))) (* 20500 111.64)) r) (* (* (/ 111.64 9.80555) (cos beta)) (sin phi))) gamma_singleton0_3) (* (+ (- (/ (* (* 13.97 300) (+ (+ (* (/ (* -0.02 180) 3.14159) beta) (/ (* 0.021 xAIL) 20)) (/ (* 0.086 xRDR) 30))) (* 20500 111.64)) r) (* (* (/ 111.64 9.80555) (cos beta)) (sin phi))) gamma_singleton0_4))) (= d/dt[gAIL] (+ (* 0 gamma_singleton0_1) (* 0 gamma_singleton0_2) (* 0 gamma_singleton0_3) (* 0 gamma_singleton0_4))) (= d/dt[gDir] (+ (* 0 gamma_singleton0_1) (* 0 gamma_singleton0_2) (* 0 gamma_singleton0_3) (* 0 gamma_singleton0_4))) (= d/dt[gRDR] (+ (* 0 gamma_singleton0_1) (* 0 gamma_singleton0_2) (* 0 gamma_singleton0_3) (* 0 gamma_singleton0_4))) (= d/dt[p] (+ (* (+ (* (* (+ (* -0.77 r) (* 0.02755 p)) r) (tan phi)) (* (* (* 13.97 30) 300) (+ (* 0.0001055 (+ (+ (* (/ (* -0.0008 180) 3.14159) beta) (/ (* 0.05 xAIL) 20)) (/ (* 0.013 xRDR) 30))) (* 1.642e-06 (+ (+ (* (/ (* 0.02 180) 3.14159) beta) (/ (* -0.01 xAIL) 20)) (/ (* -0.04 xRDR) 30)))))) gamma_singleton0_1) (* (+ (* (* (+ (* -0.77 r) (* 0.02755 p)) r) (tan phi)) (* (* (* 13.97 30) 300) (+ (* 0.0001055 (+ (+ (* (/ (* -0.0008 180) 3.14159) beta) (/ (* 0.05 xAIL) 20)) (/ (* 0.013 xRDR) 30))) (* 1.642e-06 (+ (+ (* (/ (* 0.02 180) 3.14159) beta) (/ (* -0.01 xAIL) 20)) (/ (* -0.04 xRDR) 30)))))) gamma_singleton0_2) (* (+ (* (* (+ (* -0.77 r) (* 0.02755 p)) r) (tan phi)) (* (* (* 13.97 30) 300) (+ (* 0.0001055 (+ (+ (* (/ (* -0.0008 180) 3.14159) beta) (/ (* 0.05 xAIL) 20)) (/ (* 0.013 xRDR) 30))) (* 1.642e-06 (+ (+ (* (/ (* 0.02 180) 3.14159) beta) (/ (* -0.01 xAIL) 20)) (/ (* -0.04 xRDR) 30)))))) gamma_singleton0_3) (* (+ (* (* (+ (* -0.77 r) (* 0.02755 p)) r) (tan phi)) (* (* (* 13.97 30) 300) (+ (* 0.0001055 (+ (+ (* (/ (* -0.0008 180) 3.14159) beta) (/ (* 0.05 xAIL) 20)) (/ (* 0.013 xRDR) 30))) (* 1.642e-06 (+ (+ (* (/ (* 0.02 180) 3.14159) beta) (/ (* -0.01 xAIL) 20)) (/ (* -0.04 xRDR) 30)))))) gamma_singleton0_4))) (= d/dt[phi] (+ (* p gamma_singleton0_1) (* p gamma_singleton0_2) (* p gamma_singleton0_3) (* p gamma_singleton0_4))) (= d/dt[psi] (+ (* (* (/ 9.80555 111.64) (tan phi)) gamma_singleton0_1) (* (* (/ 9.80555 111.64) (tan phi)) gamma_singleton0_2) (* (* (/ 9.80555 111.64) (tan phi)) gamma_singleton0_3) (* (* (/ 9.80555 111.64) (tan phi)) gamma_singleton0_4))) (= d/dt[r] (+ (* (+ (* (* (- (* -0.7336 p) (* 0.02755 r)) r) (tan phi)) (* (* (* 13.97 30) 300) (+ (* 1.642e-06 (+ (+ (* (/ (* -0.0008 180) 3.14159) beta) (/ (* 0.05 xAIL) 20)) (/ (* 0.013 xRDR) 30))) (* 1.587e-05 (+ (+ (* (/ (* 0.02 180) 3.14159) beta) (/ (* -0.01 xAIL) 20)) (/ (* -0.04 xRDR) 30)))))) gamma_singleton0_1) (* (+ (* (* (- (* -0.7336 p) (* 0.02755 r)) r) (tan phi)) (* (* (* 13.97 30) 300) (+ (* 1.642e-06 (+ (+ (* (/ (* -0.0008 180) 3.14159) beta) (/ (* 0.05 xAIL) 20)) (/ (* 0.013 xRDR) 30))) (* 1.587e-05 (+ (+ (* (/ (* 0.02 180) 3.14159) beta) (/ (* -0.01 xAIL) 20)) (/ (* -0.04 xRDR) 30)))))) gamma_singleton0_2) (* (+ (* (* (- (* -0.7336 p) (* 0.02755 r)) r) (tan phi)) (* (* (* 13.97 30) 300) (+ (* 1.642e-06 (+ (+ (* (/ (* -0.0008 180) 3.14159) beta) (/ (* 0.05 xAIL) 20)) (/ (* 0.013 xRDR) 30))) (* 1.587e-05 (+ (+ (* (/ (* 0.02 180) 3.14159) beta) (/ (* -0.01 xAIL) 20)) (/ (* -0.04 xRDR) 30)))))) gamma_singleton0_3) (* (+ (* (* (- (* -0.7336 p) (* 0.02755 r)) r) (tan phi)) (* (* (* 13.97 30) 300) (+ (* 1.642e-06 (+ (+ (* (/ (* -0.0008 180) 3.14159) beta) (/ (* 0.05 xAIL) 20)) (/ (* 0.013 xRDR) 30))) (* 1.587e-05 (+ (+ (* (/ (* 0.02 180) 3.14159) beta) (/ (* -0.01 xAIL) 20)) (/ (* -0.04 xRDR) 30)))))) gamma_singleton0_4))) (= d/dt[tau] (+ (* 1 gamma_singleton0_1) (* 1 gamma_singleton0_2) (* 1 gamma_singleton0_3) (* 1 gamma_singleton0_4))) (= d/dt[xAIL] (+ (* 0.25 gamma_singleton0_1) (* 0.25 gamma_singleton0_2) (* -0.25 gamma_singleton0_3) (* -0.25 gamma_singleton0_4))) (= d/dt[xRDR] (+ (* 0.5 gamma_singleton0_1) (* -0.5 gamma_singleton0_2) (* 0.5 gamma_singleton0_3) (* -0.5 gamma_singleton0_4))) (= d/dt[gamma_singleton0_1] 0) (= d/dt[gamma_singleton0_2] 0) (= d/dt[gamma_singleton0_3] 0) (= d/dt[gamma_singleton0_4] 0)))
(define-ode flow_4 ((= d/dt[beta] (+ (* (+ (- (/ (* (* 13.97 300) (+ (+ (* (/ (* -0.02 180) 3.14159) beta) (/ (* 0.021 xAIL) 20)) (/ (* 0.086 xRDR) 30))) (* 20500 111.64)) r) (* (* (/ 111.64 9.80555) (cos beta)) (sin phi))) gamma_singleton0_1) (* (+ (- (/ (* (* 13.97 300) (+ (+ (* (/ (* -0.02 180) 3.14159) beta) (/ (* 0.021 xAIL) 20)) (/ (* 0.086 xRDR) 30))) (* 20500 111.64)) r) (* (* (/ 111.64 9.80555) (cos beta)) (sin phi))) gamma_singleton0_2) (* (+ (- (/ (* (* 13.97 300) (+ (+ (* (/ (* -0.02 180) 3.14159) beta) (/ (* 0.021 xAIL) 20)) (/ (* 0.086 xRDR) 30))) (* 20500 111.64)) r) (* (* (/ 111.64 9.80555) (cos beta)) (sin phi))) gamma_singleton0_3) (* (+ (- (/ (* (* 13.97 300) (+ (+ (* (/ (* -0.02 180) 3.14159) beta) (/ (* 0.021 xAIL) 20)) (/ (* 0.086 xRDR) 30))) (* 20500 111.64)) r) (* (* (/ 111.64 9.80555) (cos beta)) (sin phi))) gamma_singleton0_4))) (= d/dt[gAIL] (+ (* 0 gamma_singleton0_1) (* 0 gamma_singleton0_2) (* 0 gamma_singleton0_3) (* 0 gamma_singleton0_4))) (= d/dt[gDir] (+ (* 0 gamma_singleton0_1) (* 0 gamma_singleton0_2) (* 0 gamma_singleton0_3) (* 0 gamma_singleton0_4))) (= d/dt[gRDR] (+ (* 0 gamma_singleton0_1) (* 0 gamma_singleton0_2) (* 0 gamma_singleton0_3) (* 0 gamma_singleton0_4))) (= d/dt[p] (+ (* (+ (* (* (+ (* -0.77 r) (* 0.02755 p)) r) (tan phi)) (* (* (* 13.97 30) 300) (+ (* 0.0001055 (+ (+ (* (/ (* -0.0008 180) 3.14159) beta) (/ (* 0.05 xAIL) 20)) (/ (* 0.013 xRDR) 30))) (* 1.642e-06 (+ (+ (* (/ (* 0.02 180) 3.14159) beta) (/ (* -0.01 xAIL) 20)) (/ (* -0.04 xRDR) 30)))))) gamma_singleton0_1) (* (+ (* (* (+ (* -0.77 r) (* 0.02755 p)) r) (tan phi)) (* (* (* 13.97 30) 300) (+ (* 0.0001055 (+ (+ (* (/ (* -0.0008 180) 3.14159) beta) (/ (* 0.05 xAIL) 20)) (/ (* 0.013 xRDR) 30))) (* 1.642e-06 (+ (+ (* (/ (* 0.02 180) 3.14159) beta) (/ (* -0.01 xAIL) 20)) (/ (* -0.04 xRDR) 30)))))) gamma_singleton0_2) (* (+ (* (* (+ (* -0.77 r) (* 0.02755 p)) r) (tan phi)) (* (* (* 13.97 30) 300) (+ (* 0.0001055 (+ (+ (* (/ (* -0.0008 180) 3.14159) beta) (/ (* 0.05 xAIL) 20)) (/ (* 0.013 xRDR) 30))) (* 1.642e-06 (+ (+ (* (/ (* 0.02 180) 3.14159) beta) (/ (* -0.01 xAIL) 20)) (/ (* -0.04 xRDR) 30)))))) gamma_singleton0_3) (* (+ (* (* (+ (* -0.77 r) (* 0.02755 p)) r) (tan phi)) (* (* (* 13.97 30) 300) (+ (* 0.0001055 (+ (+ (* (/ (* -0.0008 180) 3.14159) beta) (/ (* 0.05 xAIL) 20)) (/ (* 0.013 xRDR) 30))) (* 1.642e-06 (+ (+ (* (/ (* 0.02 180) 3.14159) beta) (/ (* -0.01 xAIL) 20)) (/ (* -0.04 xRDR) 30)))))) gamma_singleton0_4))) (= d/dt[phi] (+ (* p gamma_singleton0_1) (* p gamma_singleton0_2) (* p gamma_singleton0_3) (* p gamma_singleton0_4))) (= d/dt[psi] (+ (* (* (/ 9.80555 111.64) (tan phi)) gamma_singleton0_1) (* (* (/ 9.80555 111.64) (tan phi)) gamma_singleton0_2) (* (* (/ 9.80555 111.64) (tan phi)) gamma_singleton0_3) (* (* (/ 9.80555 111.64) (tan phi)) gamma_singleton0_4))) (= d/dt[r] (+ (* (+ (* (* (- (* -0.7336 p) (* 0.02755 r)) r) (tan phi)) (* (* (* 13.97 30) 300) (+ (* 1.642e-06 (+ (+ (* (/ (* -0.0008 180) 3.14159) beta) (/ (* 0.05 xAIL) 20)) (/ (* 0.013 xRDR) 30))) (* 1.587e-05 (+ (+ (* (/ (* 0.02 180) 3.14159) beta) (/ (* -0.01 xAIL) 20)) (/ (* -0.04 xRDR) 30)))))) gamma_singleton0_1) (* (+ (* (* (- (* -0.7336 p) (* 0.02755 r)) r) (tan phi)) (* (* (* 13.97 30) 300) (+ (* 1.642e-06 (+ (+ (* (/ (* -0.0008 180) 3.14159) beta) (/ (* 0.05 xAIL) 20)) (/ (* 0.013 xRDR) 30))) (* 1.587e-05 (+ (+ (* (/ (* 0.02 180) 3.14159) beta) (/ (* -0.01 xAIL) 20)) (/ (* -0.04 xRDR) 30)))))) gamma_singleton0_2) (* (+ (* (* (- (* -0.7336 p) (* 0.02755 r)) r) (tan phi)) (* (* (* 13.97 30) 300) (+ (* 1.642e-06 (+ (+ (* (/ (* -0.0008 180) 3.14159) beta) (/ (* 0.05 xAIL) 20)) (/ (* 0.013 xRDR) 30))) (* 1.587e-05 (+ (+ (* (/ (* 0.02 180) 3.14159) beta) (/ (* -0.01 xAIL) 20)) (/ (* -0.04 xRDR) 30)))))) gamma_singleton0_3) (* (+ (* (* (- (* -0.7336 p) (* 0.02755 r)) r) (tan phi)) (* (* (* 13.97 30) 300) (+ (* 1.642e-06 (+ (+ (* (/ (* -0.0008 180) 3.14159) beta) (/ (* 0.05 xAIL) 20)) (/ (* 0.013 xRDR) 30))) (* 1.587e-05 (+ (+ (* (/ (* 0.02 180) 3.14159) beta) (/ (* -0.01 xAIL) 20)) (/ (* -0.04 xRDR) 30)))))) gamma_singleton0_4))) (= d/dt[tau] (+ (* 1 gamma_singleton0_1) (* 1 gamma_singleton0_2) (* 1 gamma_singleton0_3) (* 1 gamma_singleton0_4))) (= d/dt[xAIL] (+ (* 0.25 gamma_singleton0_1) (* 0.25 gamma_singleton0_2) (* -0.25 gamma_singleton0_3) (* -0.25 gamma_singleton0_4))) (= d/dt[xRDR] (+ (* 0.5 gamma_singleton0_1) (* -0.5 gamma_singleton0_2) (* 0.5 gamma_singleton0_3) (* -0.5 gamma_singleton0_4))) (= d/dt[gamma_singleton0_1] 0) (= d/dt[gamma_singleton0_2] 0) (= d/dt[gamma_singleton0_3] 0) (= d/dt[gamma_singleton0_4] 0)))
(define-ode flow_5 ((= d/dt[beta] (+ (* (+ (- (/ (* (* 13.97 300) (+ (+ (* (/ (* -0.02 180) 3.14159) beta) (/ (* 0.021 xAIL) 20)) (/ (* 0.086 xRDR) 30))) (* 20500 111.64)) r) (* (* (/ 111.64 9.80555) (cos beta)) (sin phi))) gamma_singleton0_1) (* (+ (- (/ (* (* 13.97 300) (+ (+ (* (/ (* -0.02 180) 3.14159) beta) (/ (* 0.021 xAIL) 20)) (/ (* 0.086 xRDR) 30))) (* 20500 111.64)) r) (* (* (/ 111.64 9.80555) (cos beta)) (sin phi))) gamma_singleton0_2) (* (+ (- (/ (* (* 13.97 300) (+ (+ (* (/ (* -0.02 180) 3.14159) beta) (/ (* 0.021 xAIL) 20)) (/ (* 0.086 xRDR) 30))) (* 20500 111.64)) r) (* (* (/ 111.64 9.80555) (cos beta)) (sin phi))) gamma_singleton0_3) (* (+ (- (/ (* (* 13.97 300) (+ (+ (* (/ (* -0.02 180) 3.14159) beta) (/ (* 0.021 xAIL) 20)) (/ (* 0.086 xRDR) 30))) (* 20500 111.64)) r) (* (* (/ 111.64 9.80555) (cos beta)) (sin phi))) gamma_singleton0_4))) (= d/dt[gAIL] (+ (* 0 gamma_singleton0_1) (* 0 gamma_singleton0_2) (* 0 gamma_singleton0_3) (* 0 gamma_singleton0_4))) (= d/dt[gDir] (+ (* 0 gamma_singleton0_1) (* 0 gamma_singleton0_2) (* 0 gamma_singleton0_3) (* 0 gamma_singleton0_4))) (= d/dt[gRDR] (+ (* 0 gamma_singleton0_1) (* 0 gamma_singleton0_2) (* 0 gamma_singleton0_3) (* 0 gamma_singleton0_4))) (= d/dt[p] (+ (* (+ (* (* (+ (* -0.77 r) (* 0.02755 p)) r) (tan phi)) (* (* (* 13.97 30) 300) (+ (* 0.0001055 (+ (+ (* (/ (* -0.0008 180) 3.14159) beta) (/ (* 0.05 xAIL) 20)) (/ (* 0.013 xRDR) 30))) (* 1.642e-06 (+ (+ (* (/ (* 0.02 180) 3.14159) beta) (/ (* -0.01 xAIL) 20)) (/ (* -0.04 xRDR) 30)))))) gamma_singleton0_1) (* (+ (* (* (+ (* -0.77 r) (* 0.02755 p)) r) (tan phi)) (* (* (* 13.97 30) 300) (+ (* 0.0001055 (+ (+ (* (/ (* -0.0008 180) 3.14159) beta) (/ (* 0.05 xAIL) 20)) (/ (* 0.013 xRDR) 30))) (* 1.642e-06 (+ (+ (* (/ (* 0.02 180) 3.14159) beta) (/ (* -0.01 xAIL) 20)) (/ (* -0.04 xRDR) 30)))))) gamma_singleton0_2) (* (+ (* (* (+ (* -0.77 r) (* 0.02755 p)) r) (tan phi)) (* (* (* 13.97 30) 300) (+ (* 0.0001055 (+ (+ (* (/ (* -0.0008 180) 3.14159) beta) (/ (* 0.05 xAIL) 20)) (/ (* 0.013 xRDR) 30))) (* 1.642e-06 (+ (+ (* (/ (* 0.02 180) 3.14159) beta) (/ (* -0.01 xAIL) 20)) (/ (* -0.04 xRDR) 30)))))) gamma_singleton0_3) (* (+ (* (* (+ (* -0.77 r) (* 0.02755 p)) r) (tan phi)) (* (* (* 13.97 30) 300) (+ (* 0.0001055 (+ (+ (* (/ (* -0.0008 180) 3.14159) beta) (/ (* 0.05 xAIL) 20)) (/ (* 0.013 xRDR) 30))) (* 1.642e-06 (+ (+ (* (/ (* 0.02 180) 3.14159) beta) (/ (* -0.01 xAIL) 20)) (/ (* -0.04 xRDR) 30)))))) gamma_singleton0_4))) (= d/dt[phi] (+ (* p gamma_singleton0_1) (* p gamma_singleton0_2) (* p gamma_singleton0_3) (* p gamma_singleton0_4))) (= d/dt[psi] (+ (* (* (/ 9.80555 111.64) (tan phi)) gamma_singleton0_1) (* (* (/ 9.80555 111.64) (tan phi)) gamma_singleton0_2) (* (* (/ 9.80555 111.64) (tan phi)) gamma_singleton0_3) (* (* (/ 9.80555 111.64) (tan phi)) gamma_singleton0_4))) (= d/dt[r] (+ (* (+ (* (* (- (* -0.7336 p) (* 0.02755 r)) r) (tan phi)) (* (* (* 13.97 30) 300) (+ (* 1.642e-06 (+ (+ (* (/ (* -0.0008 180) 3.14159) beta) (/ (* 0.05 xAIL) 20)) (/ (* 0.013 xRDR) 30))) (* 1.587e-05 (+ (+ (* (/ (* 0.02 180) 3.14159) beta) (/ (* -0.01 xAIL) 20)) (/ (* -0.04 xRDR) 30)))))) gamma_singleton0_1) (* (+ (* (* (- (* -0.7336 p) (* 0.02755 r)) r) (tan phi)) (* (* (* 13.97 30) 300) (+ (* 1.642e-06 (+ (+ (* (/ (* -0.0008 180) 3.14159) beta) (/ (* 0.05 xAIL) 20)) (/ (* 0.013 xRDR) 30))) (* 1.587e-05 (+ (+ (* (/ (* 0.02 180) 3.14159) beta) (/ (* -0.01 xAIL) 20)) (/ (* -0.04 xRDR) 30)))))) gamma_singleton0_2) (* (+ (* (* (- (* -0.7336 p) (* 0.02755 r)) r) (tan phi)) (* (* (* 13.97 30) 300) (+ (* 1.642e-06 (+ (+ (* (/ (* -0.0008 180) 3.14159) beta) (/ (* 0.05 xAIL) 20)) (/ (* 0.013 xRDR) 30))) (* 1.587e-05 (+ (+ (* (/ (* 0.02 180) 3.14159) beta) (/ (* -0.01 xAIL) 20)) (/ (* -0.04 xRDR) 30)))))) gamma_singleton0_3) (* (+ (* (* (- (* -0.7336 p) (* 0.02755 r)) r) (tan phi)) (* (* (* 13.97 30) 300) (+ (* 1.642e-06 (+ (+ (* (/ (* -0.0008 180) 3.14159) beta) (/ (* 0.05 xAIL) 20)) (/ (* 0.013 xRDR) 30))) (* 1.587e-05 (+ (+ (* (/ (* 0.02 180) 3.14159) beta) (/ (* -0.01 xAIL) 20)) (/ (* -0.04 xRDR) 30)))))) gamma_singleton0_4))) (= d/dt[tau] (+ (* 1 gamma_singleton0_1) (* 1 gamma_singleton0_2) (* 1 gamma_singleton0_3) (* 1 gamma_singleton0_4))) (= d/dt[xAIL] (+ (* 0.25 gamma_singleton0_1) (* 0.25 gamma_singleton0_2) (* -0.25 gamma_singleton0_3) (* -0.25 gamma_singleton0_4))) (= d/dt[xRDR] (+ (* 0.5 gamma_singleton0_1) (* -0.5 gamma_singleton0_2) (* 0.5 gamma_singleton0_3) (* -0.5 gamma_singleton0_4))) (= d/dt[gamma_singleton0_1] 0) (= d/dt[gamma_singleton0_2] 0) (= d/dt[gamma_singleton0_3] 0) (= d/dt[gamma_singleton0_4] 0)))
(assert (<= -1.5 beta_0_0))
(assert (<= beta_0_0 1.5))
(assert (<= -1.5 beta_0_t))
(assert (<= beta_0_t 1.5))
(assert (<= -1.5 beta_1_0))
(assert (<= beta_1_0 1.5))
(assert (<= -1.5 beta_1_t))
(assert (<= beta_1_t 1.5))
(assert (<= -1.5 beta_2_0))
(assert (<= beta_2_0 1.5))
(assert (<= -1.5 beta_2_t))
(assert (<= beta_2_t 1.5))
(assert (<= -1.5 beta_3_0))
(assert (<= beta_3_0 1.5))
(assert (<= -1.5 beta_3_t))
(assert (<= beta_3_t 1.5))
(assert (<= -1.5 beta_4_0))
(assert (<= beta_4_0 1.5))
(assert (<= -1.5 beta_4_t))
(assert (<= beta_4_t 1.5))
(assert (<= -1.5 beta_5_0))
(assert (<= beta_5_0 1.5))
(assert (<= -1.5 beta_5_t))
(assert (<= beta_5_t 1.5))
(assert (<= -3.14159 gAIL_0_0))
(assert (<= gAIL_0_0 3.14159))
(assert (<= -3.14159 gAIL_0_t))
(assert (<= gAIL_0_t 3.14159))
(assert (<= -3.14159 gAIL_1_0))
(assert (<= gAIL_1_0 3.14159))
(assert (<= -3.14159 gAIL_1_t))
(assert (<= gAIL_1_t 3.14159))
(assert (<= -3.14159 gAIL_2_0))
(assert (<= gAIL_2_0 3.14159))
(assert (<= -3.14159 gAIL_2_t))
(assert (<= gAIL_2_t 3.14159))
(assert (<= -3.14159 gAIL_3_0))
(assert (<= gAIL_3_0 3.14159))
(assert (<= -3.14159 gAIL_3_t))
(assert (<= gAIL_3_t 3.14159))
(assert (<= -3.14159 gAIL_4_0))
(assert (<= gAIL_4_0 3.14159))
(assert (<= -3.14159 gAIL_4_t))
(assert (<= gAIL_4_t 3.14159))
(assert (<= -3.14159 gAIL_5_0))
(assert (<= gAIL_5_0 3.14159))
(assert (<= -3.14159 gAIL_5_t))
(assert (<= gAIL_5_t 3.14159))
(assert (<= -3.14159 gDir_0_0))
(assert (<= gDir_0_0 3.14159))
(assert (<= -3.14159 gDir_0_t))
(assert (<= gDir_0_t 3.14159))
(assert (<= -3.14159 gDir_1_0))
(assert (<= gDir_1_0 3.14159))
(assert (<= -3.14159 gDir_1_t))
(assert (<= gDir_1_t 3.14159))
(assert (<= -3.14159 gDir_2_0))
(assert (<= gDir_2_0 3.14159))
(assert (<= -3.14159 gDir_2_t))
(assert (<= gDir_2_t 3.14159))
(assert (<= -3.14159 gDir_3_0))
(assert (<= gDir_3_0 3.14159))
(assert (<= -3.14159 gDir_3_t))
(assert (<= gDir_3_t 3.14159))
(assert (<= -3.14159 gDir_4_0))
(assert (<= gDir_4_0 3.14159))
(assert (<= -3.14159 gDir_4_t))
(assert (<= gDir_4_t 3.14159))
(assert (<= -3.14159 gDir_5_0))
(assert (<= gDir_5_0 3.14159))
(assert (<= -3.14159 gDir_5_t))
(assert (<= gDir_5_t 3.14159))
(assert (<= -3.14159 gRDR_0_0))
(assert (<= gRDR_0_0 3.14159))
(assert (<= -3.14159 gRDR_0_t))
(assert (<= gRDR_0_t 3.14159))
(assert (<= -3.14159 gRDR_1_0))
(assert (<= gRDR_1_0 3.14159))
(assert (<= -3.14159 gRDR_1_t))
(assert (<= gRDR_1_t 3.14159))
(assert (<= -3.14159 gRDR_2_0))
(assert (<= gRDR_2_0 3.14159))
(assert (<= -3.14159 gRDR_2_t))
(assert (<= gRDR_2_t 3.14159))
(assert (<= -3.14159 gRDR_3_0))
(assert (<= gRDR_3_0 3.14159))
(assert (<= -3.14159 gRDR_3_t))
(assert (<= gRDR_3_t 3.14159))
(assert (<= -3.14159 gRDR_4_0))
(assert (<= gRDR_4_0 3.14159))
(assert (<= -3.14159 gRDR_4_t))
(assert (<= gRDR_4_t 3.14159))
(assert (<= -3.14159 gRDR_5_0))
(assert (<= gRDR_5_0 3.14159))
(assert (<= -3.14159 gRDR_5_t))
(assert (<= gRDR_5_t 3.14159))
(assert (<= -1.5 p_0_0))
(assert (<= p_0_0 1.5))
(assert (<= -1.5 p_0_t))
(assert (<= p_0_t 1.5))
(assert (<= -1.5 p_1_0))
(assert (<= p_1_0 1.5))
(assert (<= -1.5 p_1_t))
(assert (<= p_1_t 1.5))
(assert (<= -1.5 p_2_0))
(assert (<= p_2_0 1.5))
(assert (<= -1.5 p_2_t))
(assert (<= p_2_t 1.5))
(assert (<= -1.5 p_3_0))
(assert (<= p_3_0 1.5))
(assert (<= -1.5 p_3_t))
(assert (<= p_3_t 1.5))
(assert (<= -1.5 p_4_0))
(assert (<= p_4_0 1.5))
(assert (<= -1.5 p_4_t))
(assert (<= p_4_t 1.5))
(assert (<= -1.5 p_5_0))
(assert (<= p_5_0 1.5))
(assert (<= -1.5 p_5_t))
(assert (<= p_5_t 1.5))
(assert (<= -1.5 phi_0_0))
(assert (<= phi_0_0 1.5))
(assert (<= -1.5 phi_0_t))
(assert (<= phi_0_t 1.5))
(assert (<= -1.5 phi_1_0))
(assert (<= phi_1_0 1.5))
(assert (<= -1.5 phi_1_t))
(assert (<= phi_1_t 1.5))
(assert (<= -1.5 phi_2_0))
(assert (<= phi_2_0 1.5))
(assert (<= -1.5 phi_2_t))
(assert (<= phi_2_t 1.5))
(assert (<= -1.5 phi_3_0))
(assert (<= phi_3_0 1.5))
(assert (<= -1.5 phi_3_t))
(assert (<= phi_3_t 1.5))
(assert (<= -1.5 phi_4_0))
(assert (<= phi_4_0 1.5))
(assert (<= -1.5 phi_4_t))
(assert (<= phi_4_t 1.5))
(assert (<= -1.5 phi_5_0))
(assert (<= phi_5_0 1.5))
(assert (<= -1.5 phi_5_t))
(assert (<= phi_5_t 1.5))
(assert (<= -1.5 psi_0_0))
(assert (<= psi_0_0 1.5))
(assert (<= -1.5 psi_0_t))
(assert (<= psi_0_t 1.5))
(assert (<= -1.5 psi_1_0))
(assert (<= psi_1_0 1.5))
(assert (<= -1.5 psi_1_t))
(assert (<= psi_1_t 1.5))
(assert (<= -1.5 psi_2_0))
(assert (<= psi_2_0 1.5))
(assert (<= -1.5 psi_2_t))
(assert (<= psi_2_t 1.5))
(assert (<= -1.5 psi_3_0))
(assert (<= psi_3_0 1.5))
(assert (<= -1.5 psi_3_t))
(assert (<= psi_3_t 1.5))
(assert (<= -1.5 psi_4_0))
(assert (<= psi_4_0 1.5))
(assert (<= -1.5 psi_4_t))
(assert (<= psi_4_t 1.5))
(assert (<= -1.5 psi_5_0))
(assert (<= psi_5_0 1.5))
(assert (<= -1.5 psi_5_t))
(assert (<= psi_5_t 1.5))
(assert (<= -1.5 r_0_0))
(assert (<= r_0_0 1.5))
(assert (<= -1.5 r_0_t))
(assert (<= r_0_t 1.5))
(assert (<= -1.5 r_1_0))
(assert (<= r_1_0 1.5))
(assert (<= -1.5 r_1_t))
(assert (<= r_1_t 1.5))
(assert (<= -1.5 r_2_0))
(assert (<= r_2_0 1.5))
(assert (<= -1.5 r_2_t))
(assert (<= r_2_t 1.5))
(assert (<= -1.5 r_3_0))
(assert (<= r_3_0 1.5))
(assert (<= -1.5 r_3_t))
(assert (<= r_3_t 1.5))
(assert (<= -1.5 r_4_0))
(assert (<= r_4_0 1.5))
(assert (<= -1.5 r_4_t))
(assert (<= r_4_t 1.5))
(assert (<= -1.5 r_5_0))
(assert (<= r_5_0 1.5))
(assert (<= -1.5 r_5_t))
(assert (<= r_5_t 1.5))
(assert (<= 0 tau_0_0))
(assert (<= tau_0_0 0.5))
(assert (<= 0 tau_0_t))
(assert (<= tau_0_t 0.5))
(assert (<= 0 tau_1_0))
(assert (<= tau_1_0 0.5))
(assert (<= 0 tau_1_t))
(assert (<= tau_1_t 0.5))
(assert (<= 0 tau_2_0))
(assert (<= tau_2_0 0.5))
(assert (<= 0 tau_2_t))
(assert (<= tau_2_t 0.5))
(assert (<= 0 tau_3_0))
(assert (<= tau_3_0 0.5))
(assert (<= 0 tau_3_t))
(assert (<= tau_3_t 0.5))
(assert (<= 0 tau_4_0))
(assert (<= tau_4_0 0.5))
(assert (<= 0 tau_4_t))
(assert (<= tau_4_t 0.5))
(assert (<= 0 tau_5_0))
(assert (<= tau_5_0 0.5))
(assert (<= 0 tau_5_t))
(assert (<= tau_5_t 0.5))
(assert (<= -0.00159265 xAIL_0_0))
(assert (<= xAIL_0_0 0.00159265))
(assert (<= -0.00159265 xAIL_0_t))
(assert (<= xAIL_0_t 0.00159265))
(assert (<= -0.00159265 xAIL_1_0))
(assert (<= xAIL_1_0 0.00159265))
(assert (<= -0.00159265 xAIL_1_t))
(assert (<= xAIL_1_t 0.00159265))
(assert (<= -0.00159265 xAIL_2_0))
(assert (<= xAIL_2_0 0.00159265))
(assert (<= -0.00159265 xAIL_2_t))
(assert (<= xAIL_2_t 0.00159265))
(assert (<= -0.00159265 xAIL_3_0))
(assert (<= xAIL_3_0 0.00159265))
(assert (<= -0.00159265 xAIL_3_t))
(assert (<= xAIL_3_t 0.00159265))
(assert (<= -0.00159265 xAIL_4_0))
(assert (<= xAIL_4_0 0.00159265))
(assert (<= -0.00159265 xAIL_4_t))
(assert (<= xAIL_4_t 0.00159265))
(assert (<= -0.00159265 xAIL_5_0))
(assert (<= xAIL_5_0 0.00159265))
(assert (<= -0.00159265 xAIL_5_t))
(assert (<= xAIL_5_t 0.00159265))
(assert (<= -3.14159 xRDR_0_0))
(assert (<= xRDR_0_0 3.14159))
(assert (<= -3.14159 xRDR_0_t))
(assert (<= xRDR_0_t 3.14159))
(assert (<= -3.14159 xRDR_1_0))
(assert (<= xRDR_1_0 3.14159))
(assert (<= -3.14159 xRDR_1_t))
(assert (<= xRDR_1_t 3.14159))
(assert (<= -3.14159 xRDR_2_0))
(assert (<= xRDR_2_0 3.14159))
(assert (<= -3.14159 xRDR_2_t))
(assert (<= xRDR_2_t 3.14159))
(assert (<= -3.14159 xRDR_3_0))
(assert (<= xRDR_3_0 3.14159))
(assert (<= -3.14159 xRDR_3_t))
(assert (<= xRDR_3_t 3.14159))
(assert (<= -3.14159 xRDR_4_0))
(assert (<= xRDR_4_0 3.14159))
(assert (<= -3.14159 xRDR_4_t))
(assert (<= xRDR_4_t 3.14159))
(assert (<= -3.14159 xRDR_5_0))
(assert (<= xRDR_5_0 3.14159))
(assert (<= -3.14159 xRDR_5_t))
(assert (<= xRDR_5_t 3.14159))
(assert (<= 0 time_0))
(assert (<= time_0 0.5))
(assert (<= 0 time_1))
(assert (<= time_1 0.5))
(assert (<= 0 time_2))
(assert (<= time_2 0.5))
(assert (<= 0 time_3))
(assert (<= time_3 0.5))
(assert (<= 0 time_4))
(assert (<= time_4 0.5))
(assert (<= 0 time_5))
(assert (<= time_5 0.5))
(assert (<= 1 mode_1_0))
(assert (<= mode_1_0 4))
(assert (<= 1 mode_1_1))
(assert (<= mode_1_1 4))
(assert (<= 1 mode_1_2))
(assert (<= mode_1_2 4))
(assert (<= 1 mode_1_3))
(assert (<= mode_1_3 4))
(assert (<= 1 mode_1_4))
(assert (<= mode_1_4 4))
(assert (<= 1 mode_1_5))
(assert (<= mode_1_5 4))
(assert (<= 0 gamma_singleton0_1_0_0))
(assert (<= gamma_singleton0_1_0_0 1))
(assert (<= 0 gamma_singleton0_2_0_0))
(assert (<= gamma_singleton0_2_0_0 1))
(assert (<= 0 gamma_singleton0_3_0_0))
(assert (<= gamma_singleton0_3_0_0 1))
(assert (<= 0 gamma_singleton0_4_0_0))
(assert (<= gamma_singleton0_4_0_0 1))
(assert (<= 0 gamma_singleton0_1_1_0))
(assert (<= gamma_singleton0_1_1_0 1))
(assert (<= 0 gamma_singleton0_2_1_0))
(assert (<= gamma_singleton0_2_1_0 1))
(assert (<= 0 gamma_singleton0_3_1_0))
(assert (<= gamma_singleton0_3_1_0 1))
(assert (<= 0 gamma_singleton0_4_1_0))
(assert (<= gamma_singleton0_4_1_0 1))
(assert (<= 0 gamma_singleton0_1_2_0))
(assert (<= gamma_singleton0_1_2_0 1))
(assert (<= 0 gamma_singleton0_2_2_0))
(assert (<= gamma_singleton0_2_2_0 1))
(assert (<= 0 gamma_singleton0_3_2_0))
(assert (<= gamma_singleton0_3_2_0 1))
(assert (<= 0 gamma_singleton0_4_2_0))
(assert (<= gamma_singleton0_4_2_0 1))
(assert (<= 0 gamma_singleton0_1_3_0))
(assert (<= gamma_singleton0_1_3_0 1))
(assert (<= 0 gamma_singleton0_2_3_0))
(assert (<= gamma_singleton0_2_3_0 1))
(assert (<= 0 gamma_singleton0_3_3_0))
(assert (<= gamma_singleton0_3_3_0 1))
(assert (<= 0 gamma_singleton0_4_3_0))
(assert (<= gamma_singleton0_4_3_0 1))
(assert (<= 0 gamma_singleton0_1_4_0))
(assert (<= gamma_singleton0_1_4_0 1))
(assert (<= 0 gamma_singleton0_2_4_0))
(assert (<= gamma_singleton0_2_4_0 1))
(assert (<= 0 gamma_singleton0_3_4_0))
(assert (<= gamma_singleton0_3_4_0 1))
(assert (<= 0 gamma_singleton0_4_4_0))
(assert (<= gamma_singleton0_4_4_0 1))
(assert (<= 0 gamma_singleton0_1_5_0))
(assert (<= gamma_singleton0_1_5_0 1))
(assert (<= 0 gamma_singleton0_2_5_0))
(assert (<= gamma_singleton0_2_5_0 1))
(assert (<= 0 gamma_singleton0_3_5_0))
(assert (<= gamma_singleton0_3_5_0 1))
(assert (<= 0 gamma_singleton0_4_5_0))
(assert (<= gamma_singleton0_4_5_0 1))
(assert (and (= mode_1_0 1) (= tau_0_0 0) (= gRDR_0_0 0) (= gAIL_0_0 0) (= xRDR_0_0 0) (= xAIL_0_0 0) (< gDir_0_0 0.7) (< 0.5 gDir_0_0) (= psi_0_0 0) (= phi_0_0 0) (= r_0_0 0) (= p_0_0 0) (= beta_0_0 0)))
(assert false)
(assert (and (=> (= gamma_singleton0_1_5_0 0) (not (= mode_1_5 1))) (=> (not (= mode_1_5 1)) (= gamma_singleton0_1_5_0 0)) (=> (= gamma_singleton0_1_5_0 1) (= mode_1_5 1)) (=> (= mode_1_5 1) (= gamma_singleton0_1_5_0 1)) (=> (= gamma_singleton0_2_5_0 0) (not (= mode_1_5 2))) (=> (not (= mode_1_5 2)) (= gamma_singleton0_2_5_0 0)) (=> (= gamma_singleton0_2_5_0 1) (= mode_1_5 2)) (=> (= mode_1_5 2) (= gamma_singleton0_2_5_0 1)) (=> (= gamma_singleton0_3_5_0 0) (not (= mode_1_5 3))) (=> (not (= mode_1_5 3)) (= gamma_singleton0_3_5_0 0)) (=> (= gamma_singleton0_3_5_0 1) (= mode_1_5 3)) (=> (= mode_1_5 3) (= gamma_singleton0_3_5_0 1)) (=> (= gamma_singleton0_4_5_0 0) (not (= mode_1_5 4))) (=> (not (= mode_1_5 4)) (= gamma_singleton0_4_5_0 0)) (=> (= gamma_singleton0_4_5_0 1) (= mode_1_5 4)) (=> (= mode_1_5 4) (= gamma_singleton0_4_5_0 1)) (= [beta_5_t gAIL_5_t gDir_5_t gRDR_5_t p_5_t phi_5_t psi_5_t r_5_t tau_5_t xAIL_5_t xRDR_5_t gamma_singleton0_1_5_0 gamma_singleton0_2_5_0 gamma_singleton0_3_5_0 gamma_singleton0_4_5_0] (integral 0. time_5 [beta_5_0 gAIL_5_0 gDir_5_0 gRDR_5_0 p_5_0 phi_5_0 psi_5_0 r_5_0 tau_5_0 xAIL_5_0 xRDR_5_0 gamma_singleton0_1_5_0 gamma_singleton0_2_5_0 gamma_singleton0_3_5_0 gamma_singleton0_4_5_0] flow_5)) (=> (= mode_1_5 4) (forall_t 5 [0 time_5] (and (<= tau_5_t 0.5) (>= tau_5_t 0)))) (=> (= mode_1_5 3) (forall_t 5 [0 time_5] (and (<= tau_5_t 0.5) (>= tau_5_t 0)))) (=> (= mode_1_5 2) (forall_t 5 [0 time_5] (and (<= tau_5_t 0.5) (>= tau_5_t 0)))) (=> (= mode_1_5 1) (forall_t 5 [0 time_5] (and (<= tau_5_t 0.5) (>= tau_5_t 0))))))
(assert (and (= mode_1_5 1) (> (^ (^ beta_5_t 2) 0.5) 0.2) (or (not (= mode_1_5 4)) (not (= mode_1_5 1))) (or (not (= mode_1_5 3)) (not (= mode_1_5 1))) (or (not (= mode_1_5 2)) (not (= mode_1_5 1))) (or (not (= mode_1_5 4)) (not (= mode_1_5 2))) (or (not (= mode_1_5 3)) (not (= mode_1_5 2))) (or (not (= mode_1_5 1)) (not (= mode_1_5 2))) (or (not (= mode_1_5 4)) (not (= mode_1_5 3))) (or (not (= mode_1_5 2)) (not (= mode_1_5 3))) (or (not (= mode_1_5 1)) (not (= mode_1_5 3))) (or (not (= mode_1_5 3)) (not (= mode_1_5 4))) (or (not (= mode_1_5 2)) (not (= mode_1_5 4))) (or (not (= mode_1_5 1)) (not (= mode_1_5 4)))))
(check-sat)
(exit)
