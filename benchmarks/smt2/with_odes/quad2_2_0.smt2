(set-logic QF_NRA_ODE)
(declare-fun zdot () Real)
(declare-fun z () Real)
(declare-fun ydot () Real)
(declare-fun y () Real)
(declare-fun xdot () Real)
(declare-fun x () Real)
(declare-fun w4 () Real)
(declare-fun w3 () Real)
(declare-fun w2 () Real)
(declare-fun w1 () Real)
(declare-fun the () Real)
(declare-fun tau () Real)
(declare-fun psi () Real)
(declare-fun phi () Real)
(declare-fun omegaz () Real)
(declare-fun omegay () Real)
(declare-fun omegax () Real)
(declare-fun zdot_0_0 () Real)
(declare-fun zdot_0_t () Real)
(declare-fun zdot_1_0 () Real)
(declare-fun zdot_1_t () Real)
(declare-fun zdot_2_0 () Real)
(declare-fun zdot_2_t () Real)
(declare-fun z_0_0 () Real)
(declare-fun z_0_t () Real)
(declare-fun z_1_0 () Real)
(declare-fun z_1_t () Real)
(declare-fun z_2_0 () Real)
(declare-fun z_2_t () Real)
(declare-fun ydot_0_0 () Real)
(declare-fun ydot_0_t () Real)
(declare-fun ydot_1_0 () Real)
(declare-fun ydot_1_t () Real)
(declare-fun ydot_2_0 () Real)
(declare-fun ydot_2_t () Real)
(declare-fun y_0_0 () Real)
(declare-fun y_0_t () Real)
(declare-fun y_1_0 () Real)
(declare-fun y_1_t () Real)
(declare-fun y_2_0 () Real)
(declare-fun y_2_t () Real)
(declare-fun xdot_0_0 () Real)
(declare-fun xdot_0_t () Real)
(declare-fun xdot_1_0 () Real)
(declare-fun xdot_1_t () Real)
(declare-fun xdot_2_0 () Real)
(declare-fun xdot_2_t () Real)
(declare-fun x_0_0 () Real)
(declare-fun x_0_t () Real)
(declare-fun x_1_0 () Real)
(declare-fun x_1_t () Real)
(declare-fun x_2_0 () Real)
(declare-fun x_2_t () Real)
(declare-fun w4_0_0 () Real)
(declare-fun w4_0_t () Real)
(declare-fun w4_1_0 () Real)
(declare-fun w4_1_t () Real)
(declare-fun w4_2_0 () Real)
(declare-fun w4_2_t () Real)
(declare-fun w3_0_0 () Real)
(declare-fun w3_0_t () Real)
(declare-fun w3_1_0 () Real)
(declare-fun w3_1_t () Real)
(declare-fun w3_2_0 () Real)
(declare-fun w3_2_t () Real)
(declare-fun w2_0_0 () Real)
(declare-fun w2_0_t () Real)
(declare-fun w2_1_0 () Real)
(declare-fun w2_1_t () Real)
(declare-fun w2_2_0 () Real)
(declare-fun w2_2_t () Real)
(declare-fun w1_0_0 () Real)
(declare-fun w1_0_t () Real)
(declare-fun w1_1_0 () Real)
(declare-fun w1_1_t () Real)
(declare-fun w1_2_0 () Real)
(declare-fun w1_2_t () Real)
(declare-fun the_0_0 () Real)
(declare-fun the_0_t () Real)
(declare-fun the_1_0 () Real)
(declare-fun the_1_t () Real)
(declare-fun the_2_0 () Real)
(declare-fun the_2_t () Real)
(declare-fun tau_0_0 () Real)
(declare-fun tau_0_t () Real)
(declare-fun tau_1_0 () Real)
(declare-fun tau_1_t () Real)
(declare-fun tau_2_0 () Real)
(declare-fun tau_2_t () Real)
(declare-fun psi_0_0 () Real)
(declare-fun psi_0_t () Real)
(declare-fun psi_1_0 () Real)
(declare-fun psi_1_t () Real)
(declare-fun psi_2_0 () Real)
(declare-fun psi_2_t () Real)
(declare-fun phi_0_0 () Real)
(declare-fun phi_0_t () Real)
(declare-fun phi_1_0 () Real)
(declare-fun phi_1_t () Real)
(declare-fun phi_2_0 () Real)
(declare-fun phi_2_t () Real)
(declare-fun omegaz_0_0 () Real)
(declare-fun omegaz_0_t () Real)
(declare-fun omegaz_1_0 () Real)
(declare-fun omegaz_1_t () Real)
(declare-fun omegaz_2_0 () Real)
(declare-fun omegaz_2_t () Real)
(declare-fun omegay_0_0 () Real)
(declare-fun omegay_0_t () Real)
(declare-fun omegay_1_0 () Real)
(declare-fun omegay_1_t () Real)
(declare-fun omegay_2_0 () Real)
(declare-fun omegay_2_t () Real)
(declare-fun omegax_0_0 () Real)
(declare-fun omegax_0_t () Real)
(declare-fun omegax_1_0 () Real)
(declare-fun omegax_1_t () Real)
(declare-fun omegax_2_0 () Real)
(declare-fun omegax_2_t () Real)
(declare-fun time_0 () Real)
(declare-fun time_1 () Real)
(declare-fun time_2 () Real)
(declare-fun mode_0 () Real)
(declare-fun mode_1 () Real)
(declare-fun mode_2 () Real)
(define-ode flow_1 ((= d/dt[omegax] (- (* (* (* 0.23 5.2) (- (^ w1 2) (^ w3 2))) (/ 1 0.0075)) (/ (* (* (- 0.0075 0.013) omegay) omegaz) 0.0075))) (= d/dt[omegay] (- (* (* (* 0.23 5.2) (- (^ w2 2) (^ w4 2))) (/ 1 0.0075)) (/ (* (* (- 0.013 0.0075) omegax) omegaz) 0.0075))) (= d/dt[omegaz] (- (* (* 3.13e-05 (- (+ (- (^ w1 2) (^ w2 2)) (^ w3 2)) (^ w4 2))) (/ 1 0.013)) (/ (* (* (- 0.0075 0.0075) omegax) omegay) 0.013))) (= d/dt[phi] (+ (+ omegax (* (/ (* (sin phi) (sin the)) (* (+ (/ (* (^ (sin phi) 2) (cos the)) (cos phi)) (* (cos phi) (cos the))) (cos phi))) omegay)) (* (/ (sin the) (+ (/ (* (^ (sin phi) 2) (cos the)) (cos phi)) (* (cos phi) (cos the)))) omegaz))) (= d/dt[psi] (+ (* (/ (sin phi) (* (+ (/ (* (^ (sin phi) 2) (cos the)) (cos phi)) (* (cos phi) (cos the))) (cos phi))) omegay) (* (/ 1 (+ (/ (* (^ (sin phi) 2) (cos the)) (cos phi)) (* (cos phi) (cos the)))) omegaz))) (= d/dt[tau] 1) (= d/dt[the] (+ (* (+ (/ (* (- 0 (^ (sin phi) 2)) (cos the)) (* (+ (/ (* (^ (sin phi) 2) (cos the)) (cos phi)) (* (cos phi) (cos the))) (^ (cos phi) 2))) (/ 1 (cos phi))) omegay) (* (/ (* (- 0 (sin phi)) (cos the)) (* (+ (/ (* (^ (sin phi) 2) (cos the)) (cos phi)) (* (cos phi) (cos the))) (cos phi))) omegaz))) (= d/dt[w1] 0) (= d/dt[w2] 0) (= d/dt[w3] 0) (= d/dt[w4] 0) (= d/dt[x] xdot) (= d/dt[xdot] (* (/ 1 0.65) (- (* (* (* (sin the) (sin psi)) 5.2) (+ (+ (+ (^ w1 2) (^ w2 2)) (^ w3 2)) (^ w4 2))) (* 7.5e-07 xdot)))) (= d/dt[y] ydot) (= d/dt[ydot] (* (/ 1 0.65) (- (* (* (* (- 0 (cos psi)) (sin the)) 5.2) (+ (+ (+ (^ w1 2) (^ w2 2)) (^ w3 2)) (^ w4 2))) (* 7.5e-07 ydot)))) (= d/dt[z] zdot) (= d/dt[zdot] (* (/ 1 0.65) (+ (+ 9.8 (* (* (cos the) 5.2) (+ (+ (+ (^ w1 2) (^ w2 2)) (^ w3 2)) (^ w4 2)))) (* 7.5e-07 zdot))))))
(define-ode flow_2 ((= d/dt[omegax] (- (* (* (* 0.23 5.2) (- (^ w1 2) (^ w3 2))) (/ 1 0.0075)) (/ (* (* (- 0.0075 0.013) omegay) omegaz) 0.0075))) (= d/dt[omegay] (- (* (* (* 0.23 5.2) (- (^ w2 2) (^ w4 2))) (/ 1 0.0075)) (/ (* (* (- 0.013 0.0075) omegax) omegaz) 0.0075))) (= d/dt[omegaz] (- (* (* 3.13e-05 (- (+ (- (^ w1 2) (^ w2 2)) (^ w3 2)) (^ w4 2))) (/ 1 0.013)) (/ (* (* (- 0.0075 0.0075) omegax) omegay) 0.013))) (= d/dt[phi] (+ (+ omegax (* (/ (* (sin phi) (sin the)) (* (+ (/ (* (^ (sin phi) 2) (cos the)) (cos phi)) (* (cos phi) (cos the))) (cos phi))) omegay)) (* (/ (sin the) (+ (/ (* (^ (sin phi) 2) (cos the)) (cos phi)) (* (cos phi) (cos the)))) omegaz))) (= d/dt[psi] (+ (* (/ (sin phi) (* (+ (/ (* (^ (sin phi) 2) (cos the)) (cos phi)) (* (cos phi) (cos the))) (cos phi))) omegay) (* (/ 1 (+ (/ (* (^ (sin phi) 2) (cos the)) (cos phi)) (* (cos phi) (cos the)))) omegaz))) (= d/dt[tau] 1) (= d/dt[the] (+ (* (+ (/ (* (- 0 (^ (sin phi) 2)) (cos the)) (* (+ (/ (* (^ (sin phi) 2) (cos the)) (cos phi)) (* (cos phi) (cos the))) (^ (cos phi) 2))) (/ 1 (cos phi))) omegay) (* (/ (* (- 0 (sin phi)) (cos the)) (* (+ (/ (* (^ (sin phi) 2) (cos the)) (cos phi)) (* (cos phi) (cos the))) (cos phi))) omegaz))) (= d/dt[w1] 0) (= d/dt[w2] 0) (= d/dt[w3] 0) (= d/dt[w4] 0) (= d/dt[x] xdot) (= d/dt[xdot] (* (/ 1 0.65) (- (* (* (* (sin the) (sin psi)) 5.2) (+ (+ (+ (^ w1 2) (^ w2 2)) (^ w3 2)) (^ w4 2))) (* 7.5e-07 xdot)))) (= d/dt[y] ydot) (= d/dt[ydot] (* (/ 1 0.65) (- (* (* (* (- 0 (cos psi)) (sin the)) 5.2) (+ (+ (+ (^ w1 2) (^ w2 2)) (^ w3 2)) (^ w4 2))) (* 7.5e-07 ydot)))) (= d/dt[z] zdot) (= d/dt[zdot] (* (/ 1 0.65) (- (- -9.8 (* (* (cos the) 5.2) (+ (+ (+ (^ w1 2) (^ w2 2)) (^ w3 2)) (^ w4 2)))) (* 7.5e-07 zdot))))))
(assert (<= -200 zdot_0_0))
(assert (<= zdot_0_0 2000))
(assert (<= -200 zdot_0_t))
(assert (<= zdot_0_t 2000))
(assert (<= -200 zdot_1_0))
(assert (<= zdot_1_0 2000))
(assert (<= -200 zdot_1_t))
(assert (<= zdot_1_t 2000))
(assert (<= -200 zdot_2_0))
(assert (<= zdot_2_0 2000))
(assert (<= -200 zdot_2_t))
(assert (<= zdot_2_t 2000))
(assert (<= -1000 z_0_0))
(assert (<= z_0_0 1000))
(assert (<= -1000 z_0_t))
(assert (<= z_0_t 1000))
(assert (<= -1000 z_1_0))
(assert (<= z_1_0 1000))
(assert (<= -1000 z_1_t))
(assert (<= z_1_t 1000))
(assert (<= -1000 z_2_0))
(assert (<= z_2_0 1000))
(assert (<= -1000 z_2_t))
(assert (<= z_2_t 1000))
(assert (<= -200 ydot_0_0))
(assert (<= ydot_0_0 200))
(assert (<= -200 ydot_0_t))
(assert (<= ydot_0_t 200))
(assert (<= -200 ydot_1_0))
(assert (<= ydot_1_0 200))
(assert (<= -200 ydot_1_t))
(assert (<= ydot_1_t 200))
(assert (<= -200 ydot_2_0))
(assert (<= ydot_2_0 200))
(assert (<= -200 ydot_2_t))
(assert (<= ydot_2_t 200))
(assert (<= -300 y_0_0))
(assert (<= y_0_0 300))
(assert (<= -300 y_0_t))
(assert (<= y_0_t 300))
(assert (<= -300 y_1_0))
(assert (<= y_1_0 300))
(assert (<= -300 y_1_t))
(assert (<= y_1_t 300))
(assert (<= -300 y_2_0))
(assert (<= y_2_0 300))
(assert (<= -300 y_2_t))
(assert (<= y_2_t 300))
(assert (<= -200 xdot_0_0))
(assert (<= xdot_0_0 200))
(assert (<= -200 xdot_0_t))
(assert (<= xdot_0_t 200))
(assert (<= -200 xdot_1_0))
(assert (<= xdot_1_0 200))
(assert (<= -200 xdot_1_t))
(assert (<= xdot_1_t 200))
(assert (<= -200 xdot_2_0))
(assert (<= xdot_2_0 200))
(assert (<= -200 xdot_2_t))
(assert (<= xdot_2_t 200))
(assert (<= -300 x_0_0))
(assert (<= x_0_0 300))
(assert (<= -300 x_0_t))
(assert (<= x_0_t 300))
(assert (<= -300 x_1_0))
(assert (<= x_1_0 300))
(assert (<= -300 x_1_t))
(assert (<= x_1_t 300))
(assert (<= -300 x_2_0))
(assert (<= x_2_0 300))
(assert (<= -300 x_2_t))
(assert (<= x_2_t 300))
(assert (<= 0 w4_0_0))
(assert (<= w4_0_0 1))
(assert (<= 0 w4_0_t))
(assert (<= w4_0_t 1))
(assert (<= 0 w4_1_0))
(assert (<= w4_1_0 1))
(assert (<= 0 w4_1_t))
(assert (<= w4_1_t 1))
(assert (<= 0 w4_2_0))
(assert (<= w4_2_0 1))
(assert (<= 0 w4_2_t))
(assert (<= w4_2_t 1))
(assert (<= 0 w3_0_0))
(assert (<= w3_0_0 1))
(assert (<= 0 w3_0_t))
(assert (<= w3_0_t 1))
(assert (<= 0 w3_1_0))
(assert (<= w3_1_0 1))
(assert (<= 0 w3_1_t))
(assert (<= w3_1_t 1))
(assert (<= 0 w3_2_0))
(assert (<= w3_2_0 1))
(assert (<= 0 w3_2_t))
(assert (<= w3_2_t 1))
(assert (<= 0 w2_0_0))
(assert (<= w2_0_0 1))
(assert (<= 0 w2_0_t))
(assert (<= w2_0_t 1))
(assert (<= 0 w2_1_0))
(assert (<= w2_1_0 1))
(assert (<= 0 w2_1_t))
(assert (<= w2_1_t 1))
(assert (<= 0 w2_2_0))
(assert (<= w2_2_0 1))
(assert (<= 0 w2_2_t))
(assert (<= w2_2_t 1))
(assert (<= 0 w1_0_0))
(assert (<= w1_0_0 1))
(assert (<= 0 w1_0_t))
(assert (<= w1_0_t 1))
(assert (<= 0 w1_1_0))
(assert (<= w1_1_0 1))
(assert (<= 0 w1_1_t))
(assert (<= w1_1_t 1))
(assert (<= 0 w1_2_0))
(assert (<= w1_2_0 1))
(assert (<= 0 w1_2_t))
(assert (<= w1_2_t 1))
(assert (<= -1 the_0_0))
(assert (<= the_0_0 1))
(assert (<= -1 the_0_t))
(assert (<= the_0_t 1))
(assert (<= -1 the_1_0))
(assert (<= the_1_0 1))
(assert (<= -1 the_1_t))
(assert (<= the_1_t 1))
(assert (<= -1 the_2_0))
(assert (<= the_2_0 1))
(assert (<= -1 the_2_t))
(assert (<= the_2_t 1))
(assert (<= 0 tau_0_0))
(assert (<= tau_0_0 20))
(assert (<= 0 tau_0_t))
(assert (<= tau_0_t 20))
(assert (<= 0 tau_1_0))
(assert (<= tau_1_0 20))
(assert (<= 0 tau_1_t))
(assert (<= tau_1_t 20))
(assert (<= 0 tau_2_0))
(assert (<= tau_2_0 20))
(assert (<= 0 tau_2_t))
(assert (<= tau_2_t 20))
(assert (<= -1 psi_0_0))
(assert (<= psi_0_0 1))
(assert (<= -1 psi_0_t))
(assert (<= psi_0_t 1))
(assert (<= -1 psi_1_0))
(assert (<= psi_1_0 1))
(assert (<= -1 psi_1_t))
(assert (<= psi_1_t 1))
(assert (<= -1 psi_2_0))
(assert (<= psi_2_0 1))
(assert (<= -1 psi_2_t))
(assert (<= psi_2_t 1))
(assert (<= -1 phi_0_0))
(assert (<= phi_0_0 1))
(assert (<= -1 phi_0_t))
(assert (<= phi_0_t 1))
(assert (<= -1 phi_1_0))
(assert (<= phi_1_0 1))
(assert (<= -1 phi_1_t))
(assert (<= phi_1_t 1))
(assert (<= -1 phi_2_0))
(assert (<= phi_2_0 1))
(assert (<= -1 phi_2_t))
(assert (<= phi_2_t 1))
(assert (<= -100 omegaz_0_0))
(assert (<= omegaz_0_0 100))
(assert (<= -100 omegaz_0_t))
(assert (<= omegaz_0_t 100))
(assert (<= -100 omegaz_1_0))
(assert (<= omegaz_1_0 100))
(assert (<= -100 omegaz_1_t))
(assert (<= omegaz_1_t 100))
(assert (<= -100 omegaz_2_0))
(assert (<= omegaz_2_0 100))
(assert (<= -100 omegaz_2_t))
(assert (<= omegaz_2_t 100))
(assert (<= -100 omegay_0_0))
(assert (<= omegay_0_0 100))
(assert (<= -100 omegay_0_t))
(assert (<= omegay_0_t 100))
(assert (<= -100 omegay_1_0))
(assert (<= omegay_1_0 100))
(assert (<= -100 omegay_1_t))
(assert (<= omegay_1_t 100))
(assert (<= -100 omegay_2_0))
(assert (<= omegay_2_0 100))
(assert (<= -100 omegay_2_t))
(assert (<= omegay_2_t 100))
(assert (<= -100 omegax_0_0))
(assert (<= omegax_0_0 100))
(assert (<= -100 omegax_0_t))
(assert (<= omegax_0_t 100))
(assert (<= -100 omegax_1_0))
(assert (<= omegax_1_0 100))
(assert (<= -100 omegax_1_t))
(assert (<= omegax_1_t 100))
(assert (<= -100 omegax_2_0))
(assert (<= omegax_2_0 100))
(assert (<= -100 omegax_2_t))
(assert (<= omegax_2_t 100))
(assert (<= 0 time_0 [0.000000]))
(assert (<= time_0 20 [0.000000]))
(assert (<= 0 time_1 [0.000000]))
(assert (<= time_1 20 [0.000000]))
(assert (<= 0 time_2 [0.000000]))
(assert (<= time_2 20 [0.000000]))
(assert (<= 1 mode_0))
(assert (<= mode_0 2))
(assert (<= 1 mode_1))
(assert (<= mode_1 2))
(assert (<= 1 mode_2))
(assert (<= mode_2 2))
(assert (and (and (= tau_0_0 0) (= zdot_0_0 10) (= ydot_0_0 5) (= xdot_0_0 5) (>= z_0_0 220) (<= z_0_0 230) (= y_0_0 0) (= x_0_0 0) (= omegaz_0_0 0.02) (= omegay_0_0 0.01) (= omegax_0_0 0) (= psi_0_0 0.1) (= the_0_0 -0.1) (= phi_0_0 0.1) (= w4_0_0 0) (= w3_0_0 1) (= w2_0_0 0) (= w1_0_0 1)) (= mode_0 1) (= w4_0_t (+ w4_0_0 (* 0 time_0))) (= w3_0_t (+ w3_0_0 (* 0 time_0))) (= w2_0_t (+ w2_0_0 (* 0 time_0))) (= w1_0_t (+ w1_0_0 (* 0 time_0))) (= tau_0_t (+ tau_0_0 (* 1 time_0))) (= [omegax_0_t omegay_0_t omegaz_0_t phi_0_t psi_0_t tau_0_t the_0_t w1_0_t w2_0_t w3_0_t w4_0_t x_0_t xdot_0_t y_0_t ydot_0_t z_0_t zdot_0_t] (integral 0. time_0 [omegax_0_0 omegay_0_0 omegaz_0_0 phi_0_0 psi_0_0 tau_0_0 the_0_0 w1_0_0 w2_0_0 w3_0_0 w4_0_0 x_0_0 xdot_0_0 y_0_0 ydot_0_0 z_0_0 zdot_0_0] flow_1)) (= mode_0 1) (forall_t 1 [0 time_0] (>= tau_0_t 0)) (>= tau_0_t 0) (>= tau_0_0 0) (forall_t 1 [0 time_0] (<= z_0_t 500)) (<= z_0_t 500) (<= z_0_0 500) (= mode_1 2) (>= z_0_t 500) (= w4_1_0 1) (= w3_1_0 0) (= w2_1_0 1) (= w1_1_0 0) (= tau_1_0 tau_0_t) (= zdot_1_0 zdot_0_t) (= ydot_1_0 ydot_0_t) (= xdot_1_0 xdot_0_t) (= z_1_0 z_0_t) (= y_1_0 y_0_t) (= x_1_0 x_0_t) (= omegaz_1_0 omegaz_0_t) (= omegay_1_0 omegay_0_t) (= omegax_1_0 omegax_0_t) (= psi_1_0 psi_0_t) (= the_1_0 the_0_t) (= phi_1_0 phi_0_t) (= w4_1_t (+ w4_1_0 (* 0 time_1))) (= w3_1_t (+ w3_1_0 (* 0 time_1))) (= w2_1_t (+ w2_1_0 (* 0 time_1))) (= w1_1_t (+ w1_1_0 (* 0 time_1))) (= tau_1_t (+ tau_1_0 (* 1 time_1))) (= [omegax_1_t omegay_1_t omegaz_1_t phi_1_t psi_1_t tau_1_t the_1_t w1_1_t w2_1_t w3_1_t w4_1_t x_1_t xdot_1_t y_1_t ydot_1_t z_1_t zdot_1_t] (integral 0. time_1 [omegax_1_0 omegay_1_0 omegaz_1_0 phi_1_0 psi_1_0 tau_1_0 the_1_0 w1_1_0 w2_1_0 w3_1_0 w4_1_0 x_1_0 xdot_1_0 y_1_0 ydot_1_0 z_1_0 zdot_1_0] flow_2)) (= mode_1 2) (forall_t 2 [0 time_1] (>= tau_1_t 0)) (>= tau_1_t 0) (>= tau_1_0 0) (forall_t 2 [0 time_1] (<= z_1_t 900)) (<= z_1_t 900) (<= z_1_0 900) (forall_t 2 [0 time_1] (>= z_1_t 200)) (>= z_1_t 200) (>= z_1_0 200) (= mode_2 1) (<= z_1_t 200) (= w4_2_0 0) (= w3_2_0 1) (= w2_2_0 0) (= w1_2_0 1) (= tau_2_0 tau_1_t) (= zdot_2_0 zdot_1_t) (= ydot_2_0 ydot_1_t) (= xdot_2_0 xdot_1_t) (= z_2_0 z_1_t) (= y_2_0 y_1_t) (= x_2_0 x_1_t) (= omegaz_2_0 omegaz_1_t) (= omegay_2_0 omegay_1_t) (= omegax_2_0 omegax_1_t) (= psi_2_0 psi_1_t) (= the_2_0 the_1_t) (= phi_2_0 phi_1_t) (= w4_2_t (+ w4_2_0 (* 0 time_2))) (= w3_2_t (+ w3_2_0 (* 0 time_2))) (= w2_2_t (+ w2_2_0 (* 0 time_2))) (= w1_2_t (+ w1_2_0 (* 0 time_2))) (= tau_2_t (+ tau_2_0 (* 1 time_2))) (= [omegax_2_t omegay_2_t omegaz_2_t phi_2_t psi_2_t tau_2_t the_2_t w1_2_t w2_2_t w3_2_t w4_2_t x_2_t xdot_2_t y_2_t ydot_2_t z_2_t zdot_2_t] (integral 0. time_2 [omegax_2_0 omegay_2_0 omegaz_2_0 phi_2_0 psi_2_0 tau_2_0 the_2_0 w1_2_0 w2_2_0 w3_2_0 w4_2_0 x_2_0 xdot_2_0 y_2_0 ydot_2_0 z_2_0 zdot_2_0] flow_1)) (= mode_2 1) (forall_t 1 [0 time_2] (>= tau_2_t 0)) (>= tau_2_t 0) (>= tau_2_0 0) (forall_t 1 [0 time_2] (<= z_2_t 500)) (<= z_2_t 500) (<= z_2_0 500) (= mode_2 1) (= z_2_t 0) (>= tau_2_t 15)))
(check-sat)
(exit)
