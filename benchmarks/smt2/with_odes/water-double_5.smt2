(set-logic QF_NRA_ODE)
(declare-fun tau () Real)
(declare-fun x1 () Real)
(declare-fun x2 () Real)
(declare-fun tau_0_0 () Real)
(declare-fun tau_0_t () Real)
(declare-fun tau_1_0 () Real)
(declare-fun tau_1_t () Real)
(declare-fun tau_2_0 () Real)
(declare-fun tau_2_t () Real)
(declare-fun tau_3_0 () Real)
(declare-fun tau_3_t () Real)
(declare-fun tau_4_0 () Real)
(declare-fun tau_4_t () Real)
(declare-fun tau_5_0 () Real)
(declare-fun tau_5_t () Real)
(declare-fun x1_0_0 () Real)
(declare-fun x1_0_t () Real)
(declare-fun x1_1_0 () Real)
(declare-fun x1_1_t () Real)
(declare-fun x1_2_0 () Real)
(declare-fun x1_2_t () Real)
(declare-fun x1_3_0 () Real)
(declare-fun x1_3_t () Real)
(declare-fun x1_4_0 () Real)
(declare-fun x1_4_t () Real)
(declare-fun x1_5_0 () Real)
(declare-fun x1_5_t () Real)
(declare-fun x2_0_0 () Real)
(declare-fun x2_0_t () Real)
(declare-fun x2_1_0 () Real)
(declare-fun x2_1_t () Real)
(declare-fun x2_2_0 () Real)
(declare-fun x2_2_t () Real)
(declare-fun x2_3_0 () Real)
(declare-fun x2_3_t () Real)
(declare-fun x2_4_0 () Real)
(declare-fun x2_4_t () Real)
(declare-fun x2_5_0 () Real)
(declare-fun x2_5_t () Real)
(declare-fun time_0 () Real)
(declare-fun time_1 () Real)
(declare-fun time_2 () Real)
(declare-fun time_3 () Real)
(declare-fun time_4 () Real)
(declare-fun time_5 () Real)
(declare-fun mode_1_0 () Real)
(declare-fun mode_1_1 () Real)
(declare-fun mode_1_2 () Real)
(declare-fun mode_1_3 () Real)
(declare-fun mode_1_4 () Real)
(declare-fun mode_1_5 () Real)
(declare-fun gamma_singleton0_1 () Real)
(declare-fun gamma_singleton0_2 () Real)
(declare-fun gamma_singleton0_3 () Real)
(declare-fun gamma_singleton0_4 () Real)
(declare-fun gamma_singleton0_1_0_0 () Real)
(declare-fun gamma_singleton0_2_0_0 () Real)
(declare-fun gamma_singleton0_3_0_0 () Real)
(declare-fun gamma_singleton0_4_0_0 () Real)
(declare-fun gamma_singleton0_1_1_0 () Real)
(declare-fun gamma_singleton0_2_1_0 () Real)
(declare-fun gamma_singleton0_3_1_0 () Real)
(declare-fun gamma_singleton0_4_1_0 () Real)
(declare-fun gamma_singleton0_1_2_0 () Real)
(declare-fun gamma_singleton0_2_2_0 () Real)
(declare-fun gamma_singleton0_3_2_0 () Real)
(declare-fun gamma_singleton0_4_2_0 () Real)
(declare-fun gamma_singleton0_1_3_0 () Real)
(declare-fun gamma_singleton0_2_3_0 () Real)
(declare-fun gamma_singleton0_3_3_0 () Real)
(declare-fun gamma_singleton0_4_3_0 () Real)
(declare-fun gamma_singleton0_1_4_0 () Real)
(declare-fun gamma_singleton0_2_4_0 () Real)
(declare-fun gamma_singleton0_3_4_0 () Real)
(declare-fun gamma_singleton0_4_4_0 () Real)
(declare-fun gamma_singleton0_1_5_0 () Real)
(declare-fun gamma_singleton0_2_5_0 () Real)
(declare-fun gamma_singleton0_3_5_0 () Real)
(declare-fun gamma_singleton0_4_5_0 () Real)
(define-ode flow_0 ((= d/dt[tau] (+ (* 1 gamma_singleton0_1) (* 1 gamma_singleton0_2) (* 1 gamma_singleton0_3) (* 1 gamma_singleton0_4))) (= d/dt[x1] (+ (* (/ (- 5 (* (* 0.5 (^ (* 2 9.80665) 0.5)) (^ x1 0.5))) 2) gamma_singleton0_1) (* (/ (- 5 (* (* 0.5 (^ (* 2 9.80665) 0.5)) (^ x1 0.5))) 2) gamma_singleton0_2) (* (/ (* (* -0.5 (^ (* 2 9.80665) 0.5)) (^ x1 0.5)) 2) gamma_singleton0_3) (* (/ (* (* -0.5 (^ (* 2 9.80665) 0.5)) (^ x1 0.5)) 2) gamma_singleton0_4))) (= d/dt[x2] (+ (* (/ (+ 3 (* (* 0.5 (^ (* 2 9.80665) 0.5)) (- (^ x1 0.5) (^ x2 0.5)))) 4) gamma_singleton0_1) (* (/ (* (* 0.5 (^ (* 2 9.80665) 0.5)) (- (^ x1 0.5) (^ x2 0.5))) 4) gamma_singleton0_2) (* (/ (+ 3 (* (* 0.5 (^ (* 2 9.80665) 0.5)) (- (^ x1 0.5) (^ x2 0.5)))) 4) gamma_singleton0_3) (* (/ (* (* 0.5 (^ (* 2 9.80665) 0.5)) (- (^ x1 0.5) (^ x2 0.5))) 4) gamma_singleton0_4))) (= d/dt[gamma_singleton0_1] 0) (= d/dt[gamma_singleton0_2] 0) (= d/dt[gamma_singleton0_3] 0) (= d/dt[gamma_singleton0_4] 0)))
(define-ode flow_1 ((= d/dt[tau] (+ (* 1 gamma_singleton0_1) (* 1 gamma_singleton0_2) (* 1 gamma_singleton0_3) (* 1 gamma_singleton0_4))) (= d/dt[x1] (+ (* (/ (- 5 (* (* 0.5 (^ (* 2 9.80665) 0.5)) (^ x1 0.5))) 2) gamma_singleton0_1) (* (/ (- 5 (* (* 0.5 (^ (* 2 9.80665) 0.5)) (^ x1 0.5))) 2) gamma_singleton0_2) (* (/ (* (* -0.5 (^ (* 2 9.80665) 0.5)) (^ x1 0.5)) 2) gamma_singleton0_3) (* (/ (* (* -0.5 (^ (* 2 9.80665) 0.5)) (^ x1 0.5)) 2) gamma_singleton0_4))) (= d/dt[x2] (+ (* (/ (+ 3 (* (* 0.5 (^ (* 2 9.80665) 0.5)) (- (^ x1 0.5) (^ x2 0.5)))) 4) gamma_singleton0_1) (* (/ (* (* 0.5 (^ (* 2 9.80665) 0.5)) (- (^ x1 0.5) (^ x2 0.5))) 4) gamma_singleton0_2) (* (/ (+ 3 (* (* 0.5 (^ (* 2 9.80665) 0.5)) (- (^ x1 0.5) (^ x2 0.5)))) 4) gamma_singleton0_3) (* (/ (* (* 0.5 (^ (* 2 9.80665) 0.5)) (- (^ x1 0.5) (^ x2 0.5))) 4) gamma_singleton0_4))) (= d/dt[gamma_singleton0_1] 0) (= d/dt[gamma_singleton0_2] 0) (= d/dt[gamma_singleton0_3] 0) (= d/dt[gamma_singleton0_4] 0)))
(define-ode flow_2 ((= d/dt[tau] (+ (* 1 gamma_singleton0_1) (* 1 gamma_singleton0_2) (* 1 gamma_singleton0_3) (* 1 gamma_singleton0_4))) (= d/dt[x1] (+ (* (/ (- 5 (* (* 0.5 (^ (* 2 9.80665) 0.5)) (^ x1 0.5))) 2) gamma_singleton0_1) (* (/ (- 5 (* (* 0.5 (^ (* 2 9.80665) 0.5)) (^ x1 0.5))) 2) gamma_singleton0_2) (* (/ (* (* -0.5 (^ (* 2 9.80665) 0.5)) (^ x1 0.5)) 2) gamma_singleton0_3) (* (/ (* (* -0.5 (^ (* 2 9.80665) 0.5)) (^ x1 0.5)) 2) gamma_singleton0_4))) (= d/dt[x2] (+ (* (/ (+ 3 (* (* 0.5 (^ (* 2 9.80665) 0.5)) (- (^ x1 0.5) (^ x2 0.5)))) 4) gamma_singleton0_1) (* (/ (* (* 0.5 (^ (* 2 9.80665) 0.5)) (- (^ x1 0.5) (^ x2 0.5))) 4) gamma_singleton0_2) (* (/ (+ 3 (* (* 0.5 (^ (* 2 9.80665) 0.5)) (- (^ x1 0.5) (^ x2 0.5)))) 4) gamma_singleton0_3) (* (/ (* (* 0.5 (^ (* 2 9.80665) 0.5)) (- (^ x1 0.5) (^ x2 0.5))) 4) gamma_singleton0_4))) (= d/dt[gamma_singleton0_1] 0) (= d/dt[gamma_singleton0_2] 0) (= d/dt[gamma_singleton0_3] 0) (= d/dt[gamma_singleton0_4] 0)))
(define-ode flow_3 ((= d/dt[tau] (+ (* 1 gamma_singleton0_1) (* 1 gamma_singleton0_2) (* 1 gamma_singleton0_3) (* 1 gamma_singleton0_4))) (= d/dt[x1] (+ (* (/ (- 5 (* (* 0.5 (^ (* 2 9.80665) 0.5)) (^ x1 0.5))) 2) gamma_singleton0_1) (* (/ (- 5 (* (* 0.5 (^ (* 2 9.80665) 0.5)) (^ x1 0.5))) 2) gamma_singleton0_2) (* (/ (* (* -0.5 (^ (* 2 9.80665) 0.5)) (^ x1 0.5)) 2) gamma_singleton0_3) (* (/ (* (* -0.5 (^ (* 2 9.80665) 0.5)) (^ x1 0.5)) 2) gamma_singleton0_4))) (= d/dt[x2] (+ (* (/ (+ 3 (* (* 0.5 (^ (* 2 9.80665) 0.5)) (- (^ x1 0.5) (^ x2 0.5)))) 4) gamma_singleton0_1) (* (/ (* (* 0.5 (^ (* 2 9.80665) 0.5)) (- (^ x1 0.5) (^ x2 0.5))) 4) gamma_singleton0_2) (* (/ (+ 3 (* (* 0.5 (^ (* 2 9.80665) 0.5)) (- (^ x1 0.5) (^ x2 0.5)))) 4) gamma_singleton0_3) (* (/ (* (* 0.5 (^ (* 2 9.80665) 0.5)) (- (^ x1 0.5) (^ x2 0.5))) 4) gamma_singleton0_4))) (= d/dt[gamma_singleton0_1] 0) (= d/dt[gamma_singleton0_2] 0) (= d/dt[gamma_singleton0_3] 0) (= d/dt[gamma_singleton0_4] 0)))
(define-ode flow_4 ((= d/dt[tau] (+ (* 1 gamma_singleton0_1) (* 1 gamma_singleton0_2) (* 1 gamma_singleton0_3) (* 1 gamma_singleton0_4))) (= d/dt[x1] (+ (* (/ (- 5 (* (* 0.5 (^ (* 2 9.80665) 0.5)) (^ x1 0.5))) 2) gamma_singleton0_1) (* (/ (- 5 (* (* 0.5 (^ (* 2 9.80665) 0.5)) (^ x1 0.5))) 2) gamma_singleton0_2) (* (/ (* (* -0.5 (^ (* 2 9.80665) 0.5)) (^ x1 0.5)) 2) gamma_singleton0_3) (* (/ (* (* -0.5 (^ (* 2 9.80665) 0.5)) (^ x1 0.5)) 2) gamma_singleton0_4))) (= d/dt[x2] (+ (* (/ (+ 3 (* (* 0.5 (^ (* 2 9.80665) 0.5)) (- (^ x1 0.5) (^ x2 0.5)))) 4) gamma_singleton0_1) (* (/ (* (* 0.5 (^ (* 2 9.80665) 0.5)) (- (^ x1 0.5) (^ x2 0.5))) 4) gamma_singleton0_2) (* (/ (+ 3 (* (* 0.5 (^ (* 2 9.80665) 0.5)) (- (^ x1 0.5) (^ x2 0.5)))) 4) gamma_singleton0_3) (* (/ (* (* 0.5 (^ (* 2 9.80665) 0.5)) (- (^ x1 0.5) (^ x2 0.5))) 4) gamma_singleton0_4))) (= d/dt[gamma_singleton0_1] 0) (= d/dt[gamma_singleton0_2] 0) (= d/dt[gamma_singleton0_3] 0) (= d/dt[gamma_singleton0_4] 0)))
(define-ode flow_5 ((= d/dt[tau] (+ (* 1 gamma_singleton0_1) (* 1 gamma_singleton0_2) (* 1 gamma_singleton0_3) (* 1 gamma_singleton0_4))) (= d/dt[x1] (+ (* (/ (- 5 (* (* 0.5 (^ (* 2 9.80665) 0.5)) (^ x1 0.5))) 2) gamma_singleton0_1) (* (/ (- 5 (* (* 0.5 (^ (* 2 9.80665) 0.5)) (^ x1 0.5))) 2) gamma_singleton0_2) (* (/ (* (* -0.5 (^ (* 2 9.80665) 0.5)) (^ x1 0.5)) 2) gamma_singleton0_3) (* (/ (* (* -0.5 (^ (* 2 9.80665) 0.5)) (^ x1 0.5)) 2) gamma_singleton0_4))) (= d/dt[x2] (+ (* (/ (+ 3 (* (* 0.5 (^ (* 2 9.80665) 0.5)) (- (^ x1 0.5) (^ x2 0.5)))) 4) gamma_singleton0_1) (* (/ (* (* 0.5 (^ (* 2 9.80665) 0.5)) (- (^ x1 0.5) (^ x2 0.5))) 4) gamma_singleton0_2) (* (/ (+ 3 (* (* 0.5 (^ (* 2 9.80665) 0.5)) (- (^ x1 0.5) (^ x2 0.5)))) 4) gamma_singleton0_3) (* (/ (* (* 0.5 (^ (* 2 9.80665) 0.5)) (- (^ x1 0.5) (^ x2 0.5))) 4) gamma_singleton0_4))) (= d/dt[gamma_singleton0_1] 0) (= d/dt[gamma_singleton0_2] 0) (= d/dt[gamma_singleton0_3] 0) (= d/dt[gamma_singleton0_4] 0)))
(assert (<= 0 tau_0_0))
(assert (<= tau_0_0 1))
(assert (<= 0 tau_0_t))
(assert (<= tau_0_t 1))
(assert (<= 0 tau_1_0))
(assert (<= tau_1_0 1))
(assert (<= 0 tau_1_t))
(assert (<= tau_1_t 1))
(assert (<= 0 tau_2_0))
(assert (<= tau_2_0 1))
(assert (<= 0 tau_2_t))
(assert (<= tau_2_t 1))
(assert (<= 0 tau_3_0))
(assert (<= tau_3_0 1))
(assert (<= 0 tau_3_t))
(assert (<= tau_3_t 1))
(assert (<= 0 tau_4_0))
(assert (<= tau_4_0 1))
(assert (<= 0 tau_4_t))
(assert (<= tau_4_t 1))
(assert (<= 0 tau_5_0))
(assert (<= tau_5_0 1))
(assert (<= 0 tau_5_t))
(assert (<= tau_5_t 1))
(assert (<= 0 x1_0_0))
(assert (<= x1_0_0 10))
(assert (<= 0 x1_0_t))
(assert (<= x1_0_t 10))
(assert (<= 0 x1_1_0))
(assert (<= x1_1_0 10))
(assert (<= 0 x1_1_t))
(assert (<= x1_1_t 10))
(assert (<= 0 x1_2_0))
(assert (<= x1_2_0 10))
(assert (<= 0 x1_2_t))
(assert (<= x1_2_t 10))
(assert (<= 0 x1_3_0))
(assert (<= x1_3_0 10))
(assert (<= 0 x1_3_t))
(assert (<= x1_3_t 10))
(assert (<= 0 x1_4_0))
(assert (<= x1_4_0 10))
(assert (<= 0 x1_4_t))
(assert (<= x1_4_t 10))
(assert (<= 0 x1_5_0))
(assert (<= x1_5_0 10))
(assert (<= 0 x1_5_t))
(assert (<= x1_5_t 10))
(assert (<= 0 x2_0_0))
(assert (<= x2_0_0 10))
(assert (<= 0 x2_0_t))
(assert (<= x2_0_t 10))
(assert (<= 0 x2_1_0))
(assert (<= x2_1_0 10))
(assert (<= 0 x2_1_t))
(assert (<= x2_1_t 10))
(assert (<= 0 x2_2_0))
(assert (<= x2_2_0 10))
(assert (<= 0 x2_2_t))
(assert (<= x2_2_t 10))
(assert (<= 0 x2_3_0))
(assert (<= x2_3_0 10))
(assert (<= 0 x2_3_t))
(assert (<= x2_3_t 10))
(assert (<= 0 x2_4_0))
(assert (<= x2_4_0 10))
(assert (<= 0 x2_4_t))
(assert (<= x2_4_t 10))
(assert (<= 0 x2_5_0))
(assert (<= x2_5_0 10))
(assert (<= 0 x2_5_t))
(assert (<= x2_5_t 10))
(assert (<= 0 time_0))
(assert (<= time_0 1))
(assert (<= 0 time_1))
(assert (<= time_1 1))
(assert (<= 0 time_2))
(assert (<= time_2 1))
(assert (<= 0 time_3))
(assert (<= time_3 1))
(assert (<= 0 time_4))
(assert (<= time_4 1))
(assert (<= 0 time_5))
(assert (<= time_5 1))
(assert (<= 1 mode_1_0))
(assert (<= mode_1_0 4))
(assert (<= 1 mode_1_1))
(assert (<= mode_1_1 4))
(assert (<= 1 mode_1_2))
(assert (<= mode_1_2 4))
(assert (<= 1 mode_1_3))
(assert (<= mode_1_3 4))
(assert (<= 1 mode_1_4))
(assert (<= mode_1_4 4))
(assert (<= 1 mode_1_5))
(assert (<= mode_1_5 4))
(assert (<= 0 gamma_singleton0_1_0_0))
(assert (<= gamma_singleton0_1_0_0 1))
(assert (<= 0 gamma_singleton0_2_0_0))
(assert (<= gamma_singleton0_2_0_0 1))
(assert (<= 0 gamma_singleton0_3_0_0))
(assert (<= gamma_singleton0_3_0_0 1))
(assert (<= 0 gamma_singleton0_4_0_0))
(assert (<= gamma_singleton0_4_0_0 1))
(assert (<= 0 gamma_singleton0_1_1_0))
(assert (<= gamma_singleton0_1_1_0 1))
(assert (<= 0 gamma_singleton0_2_1_0))
(assert (<= gamma_singleton0_2_1_0 1))
(assert (<= 0 gamma_singleton0_3_1_0))
(assert (<= gamma_singleton0_3_1_0 1))
(assert (<= 0 gamma_singleton0_4_1_0))
(assert (<= gamma_singleton0_4_1_0 1))
(assert (<= 0 gamma_singleton0_1_2_0))
(assert (<= gamma_singleton0_1_2_0 1))
(assert (<= 0 gamma_singleton0_2_2_0))
(assert (<= gamma_singleton0_2_2_0 1))
(assert (<= 0 gamma_singleton0_3_2_0))
(assert (<= gamma_singleton0_3_2_0 1))
(assert (<= 0 gamma_singleton0_4_2_0))
(assert (<= gamma_singleton0_4_2_0 1))
(assert (<= 0 gamma_singleton0_1_3_0))
(assert (<= gamma_singleton0_1_3_0 1))
(assert (<= 0 gamma_singleton0_2_3_0))
(assert (<= gamma_singleton0_2_3_0 1))
(assert (<= 0 gamma_singleton0_3_3_0))
(assert (<= gamma_singleton0_3_3_0 1))
(assert (<= 0 gamma_singleton0_4_3_0))
(assert (<= gamma_singleton0_4_3_0 1))
(assert (<= 0 gamma_singleton0_1_4_0))
(assert (<= gamma_singleton0_1_4_0 1))
(assert (<= 0 gamma_singleton0_2_4_0))
(assert (<= gamma_singleton0_2_4_0 1))
(assert (<= 0 gamma_singleton0_3_4_0))
(assert (<= gamma_singleton0_3_4_0 1))
(assert (<= 0 gamma_singleton0_4_4_0))
(assert (<= gamma_singleton0_4_4_0 1))
(assert (<= 0 gamma_singleton0_1_5_0))
(assert (<= gamma_singleton0_1_5_0 1))
(assert (<= 0 gamma_singleton0_2_5_0))
(assert (<= gamma_singleton0_2_5_0 1))
(assert (<= 0 gamma_singleton0_3_5_0))
(assert (<= gamma_singleton0_3_5_0 1))
(assert (<= 0 gamma_singleton0_4_5_0))
(assert (<= gamma_singleton0_4_5_0 1))
(assert (and (= mode_1_0 1) (= tau_0_0 0) (<= (^ (^ (- x2_0_0 5) 2) 0.5) 0.1) (<= (^ (^ (- x1_0_0 5) 2) 0.5) 0.1)))
(assert false)
(assert (and (=> (= gamma_singleton0_1_5_0 0) (not (= mode_1_5 1))) (=> (not (= mode_1_5 1)) (= gamma_singleton0_1_5_0 0)) (=> (= gamma_singleton0_1_5_0 1) (= mode_1_5 1)) (=> (= mode_1_5 1) (= gamma_singleton0_1_5_0 1)) (=> (= gamma_singleton0_2_5_0 0) (not (= mode_1_5 2))) (=> (not (= mode_1_5 2)) (= gamma_singleton0_2_5_0 0)) (=> (= gamma_singleton0_2_5_0 1) (= mode_1_5 2)) (=> (= mode_1_5 2) (= gamma_singleton0_2_5_0 1)) (=> (= gamma_singleton0_3_5_0 0) (not (= mode_1_5 3))) (=> (not (= mode_1_5 3)) (= gamma_singleton0_3_5_0 0)) (=> (= gamma_singleton0_3_5_0 1) (= mode_1_5 3)) (=> (= mode_1_5 3) (= gamma_singleton0_3_5_0 1)) (=> (= gamma_singleton0_4_5_0 0) (not (= mode_1_5 4))) (=> (not (= mode_1_5 4)) (= gamma_singleton0_4_5_0 0)) (=> (= gamma_singleton0_4_5_0 1) (= mode_1_5 4)) (=> (= mode_1_5 4) (= gamma_singleton0_4_5_0 1)) (= [tau_5_t x1_5_t x2_5_t gamma_singleton0_1_5_0 gamma_singleton0_2_5_0 gamma_singleton0_3_5_0 gamma_singleton0_4_5_0] (integral 0. time_5 [tau_5_0 x1_5_0 x2_5_0 gamma_singleton0_1_5_0 gamma_singleton0_2_5_0 gamma_singleton0_3_5_0 gamma_singleton0_4_5_0] flow_5)) (=> (= mode_1_5 4) (forall_t 5 [0 time_5] (and (<= tau_5_t 1) (>= tau_5_t 0)))) (=> (= mode_1_5 3) (forall_t 5 [0 time_5] (and (<= tau_5_t 1) (>= tau_5_t 0)))) (=> (= mode_1_5 2) (forall_t 5 [0 time_5] (and (<= tau_5_t 1) (>= tau_5_t 0)))) (=> (= mode_1_5 1) (forall_t 5 [0 time_5] (and (<= tau_5_t 1) (>= tau_5_t 0))))))
(assert (and (= mode_1_5 1) (> (^ (^ (- x2_5_t 5) 2) 0.5) 2) (> (^ (^ (- x1_5_t 5) 2) 0.5) 2) (or (not (= mode_1_5 4)) (not (= mode_1_5 1))) (or (not (= mode_1_5 3)) (not (= mode_1_5 1))) (or (not (= mode_1_5 2)) (not (= mode_1_5 1))) (or (not (= mode_1_5 4)) (not (= mode_1_5 2))) (or (not (= mode_1_5 3)) (not (= mode_1_5 2))) (or (not (= mode_1_5 1)) (not (= mode_1_5 2))) (or (not (= mode_1_5 4)) (not (= mode_1_5 3))) (or (not (= mode_1_5 2)) (not (= mode_1_5 3))) (or (not (= mode_1_5 1)) (not (= mode_1_5 3))) (or (not (= mode_1_5 3)) (not (= mode_1_5 4))) (or (not (= mode_1_5 2)) (not (= mode_1_5 4))) (or (not (= mode_1_5 1)) (not (= mode_1_5 4)))))
(check-sat)
(exit)
