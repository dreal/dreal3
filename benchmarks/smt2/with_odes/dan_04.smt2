(set-logic QF_NRA_ODE)
(declare-fun fuellevel_gen () Real)
(declare-fun time_generate_gen_automaton () Real)
(declare-fun fuellevel_gen_0_0 () Real)
(declare-fun fuellevel_gen_0_t () Real)
(declare-fun time_generate_gen_automaton_0_0 () Real)
(declare-fun time_generate_gen_automaton_0_t () Real)
(declare-fun time_0 () Real)
(declare-fun mode_1_0 () Real)
(declare-fun mode_2_0 () Real)
(declare-fun gamma_generate_gen_automaton0_1 () Real)
(declare-fun gamma_generate_gen_automaton0_2 () Real)
(declare-fun gamma_generate_gen_automaton0_3 () Real)
(declare-fun gamma_generate_gen_automaton0_4 () Real)
(declare-fun gamma_lock_automaton0_1 () Real)
(declare-fun gamma_lock_automaton0_2 () Real)
(declare-fun gamma_generate_gen_automaton0_1_0_0 () Real)
(declare-fun gamma_generate_gen_automaton0_2_0_0 () Real)
(declare-fun gamma_generate_gen_automaton0_3_0_0 () Real)
(declare-fun gamma_generate_gen_automaton0_4_0_0 () Real)
(declare-fun gamma_lock_automaton0_1_0_0 () Real)
(declare-fun gamma_lock_automaton0_2_0_0 () Real)
(define-ode flow_0 ((= d/dt[fuellevel_gen] (+ (* 0 gamma_generate_gen_automaton0_1) (* 0 gamma_generate_gen_automaton0_2) (* -1 gamma_generate_gen_automaton0_3) (* 0 gamma_generate_gen_automaton0_4))) (= d/dt[time_generate_gen_automaton] (+ (* 1 gamma_generate_gen_automaton0_1) (* 0 gamma_generate_gen_automaton0_2) (* 1 gamma_generate_gen_automaton0_3) (* 1 gamma_generate_gen_automaton0_4))) (= d/dt[gamma_generate_gen_automaton0_1] 0) (= d/dt[gamma_generate_gen_automaton0_2] 0) (= d/dt[gamma_generate_gen_automaton0_3] 0) (= d/dt[gamma_generate_gen_automaton0_4] 0) (= d/dt[gamma_lock_automaton0_1] 0) (= d/dt[gamma_lock_automaton0_2] 0)))
(assert (<= 0 fuellevel_gen_0_0))
(assert (<= fuellevel_gen_0_0 1600))
(assert (<= 0 fuellevel_gen_0_t))
(assert (<= fuellevel_gen_0_t 1600))
(assert (<= 0 time_generate_gen_automaton_0_0))
(assert (<= time_generate_gen_automaton_0_0 1000))
(assert (<= 0 time_generate_gen_automaton_0_t))
(assert (<= time_generate_gen_automaton_0_t 1000))
(assert (<= 0 time_0))
(assert (<= time_0 1000))
(assert (<= 1 mode_1_0))
(assert (<= mode_1_0 4))
(assert (<= 1 mode_2_0))
(assert (<= mode_2_0 2))
(assert (<= 0 gamma_generate_gen_automaton0_1_0_0))
(assert (<= gamma_generate_gen_automaton0_1_0_0 1))
(assert (<= 0 gamma_generate_gen_automaton0_2_0_0))
(assert (<= gamma_generate_gen_automaton0_2_0_0 1))
(assert (<= 0 gamma_generate_gen_automaton0_3_0_0))
(assert (<= gamma_generate_gen_automaton0_3_0_0 1))
(assert (<= 0 gamma_generate_gen_automaton0_4_0_0))
(assert (<= gamma_generate_gen_automaton0_4_0_0 1))
(assert (<= 0 gamma_lock_automaton0_1_0_0))
(assert (<= gamma_lock_automaton0_1_0_0 1))
(assert (<= 0 gamma_lock_automaton0_2_0_0))
(assert (<= gamma_lock_automaton0_2_0_0 1))
(assert (and (= mode_2_0 2) (= mode_1_0 2) (= time_generate_gen_automaton_0_0 0) (= fuellevel_gen_0_0 1100)))
(assert true)
(assert (and (=> (= gamma_generate_gen_automaton0_1_0_0 0) (not (= mode_1_0 1))) (=> (not (= mode_1_0 1)) (= gamma_generate_gen_automaton0_1_0_0 0)) (=> (= gamma_generate_gen_automaton0_1_0_0 1) (= mode_1_0 1)) (=> (= mode_1_0 1) (= gamma_generate_gen_automaton0_1_0_0 1)) (=> (= gamma_generate_gen_automaton0_2_0_0 0) (not (= mode_1_0 2))) (=> (not (= mode_1_0 2)) (= gamma_generate_gen_automaton0_2_0_0 0)) (=> (= gamma_generate_gen_automaton0_2_0_0 1) (= mode_1_0 2)) (=> (= mode_1_0 2) (= gamma_generate_gen_automaton0_2_0_0 1)) (=> (= gamma_generate_gen_automaton0_3_0_0 0) (not (= mode_1_0 3))) (=> (not (= mode_1_0 3)) (= gamma_generate_gen_automaton0_3_0_0 0)) (=> (= gamma_generate_gen_automaton0_3_0_0 1) (= mode_1_0 3)) (=> (= mode_1_0 3) (= gamma_generate_gen_automaton0_3_0_0 1)) (=> (= gamma_generate_gen_automaton0_4_0_0 0) (not (= mode_1_0 4))) (=> (not (= mode_1_0 4)) (= gamma_generate_gen_automaton0_4_0_0 0)) (=> (= gamma_generate_gen_automaton0_4_0_0 1) (= mode_1_0 4)) (=> (= mode_1_0 4) (= gamma_generate_gen_automaton0_4_0_0 1)) (=> (= gamma_lock_automaton0_1_0_0 0) (not (= mode_2_0 1))) (=> (not (= mode_2_0 1)) (= gamma_lock_automaton0_1_0_0 0)) (=> (= gamma_lock_automaton0_1_0_0 1) (= mode_2_0 1)) (=> (= mode_2_0 1) (= gamma_lock_automaton0_1_0_0 1)) (=> (= gamma_lock_automaton0_2_0_0 0) (not (= mode_2_0 2))) (=> (not (= mode_2_0 2)) (= gamma_lock_automaton0_2_0_0 0)) (=> (= gamma_lock_automaton0_2_0_0 1) (= mode_2_0 2)) (=> (= mode_2_0 2) (= gamma_lock_automaton0_2_0_0 1)) (= [fuellevel_gen_0_t time_generate_gen_automaton_0_t gamma_generate_gen_automaton0_1_0_0 gamma_generate_gen_automaton0_2_0_0 gamma_generate_gen_automaton0_3_0_0 gamma_generate_gen_automaton0_4_0_0 gamma_lock_automaton0_1_0_0 gamma_lock_automaton0_2_0_0] (integral 0. time_0 [fuellevel_gen_0_0 time_generate_gen_automaton_0_0 gamma_generate_gen_automaton0_1_0_0 gamma_generate_gen_automaton0_2_0_0 gamma_generate_gen_automaton0_3_0_0 gamma_generate_gen_automaton0_4_0_0 gamma_lock_automaton0_1_0_0 gamma_lock_automaton0_2_0_0] flow_0)) (=> (= mode_2_0 2) (forall_t 0 [0 time_0] true)) (=> (= mode_2_0 1) (forall_t 0 [0 time_0] true)) (=> (= mode_1_0 4) (forall_t 0 [0 time_0] (<= time_generate_gen_automaton_0_t 0))) (=> (= mode_1_0 3) (forall_t 0 [0 time_0] (and (>= fuellevel_gen_0_t 0) (<= time_generate_gen_automaton_0_t 1000)))) (=> (= mode_1_0 2) (forall_t 0 [0 time_0] true)) (=> (= mode_1_0 1) (forall_t 0 [0 time_0] (<= time_generate_gen_automaton_0_t 0)))))
(assert (and (or (not (= mode_1_0 4)) (not (= mode_1_0 1))) (or (not (= mode_1_0 3)) (not (= mode_1_0 1))) (or (not (= mode_1_0 2)) (not (= mode_1_0 1))) (or (not (= mode_1_0 4)) (not (= mode_1_0 2))) (or (not (= mode_1_0 3)) (not (= mode_1_0 2))) (or (not (= mode_1_0 1)) (not (= mode_1_0 2))) (or (not (= mode_1_0 4)) (not (= mode_1_0 3))) (or (not (= mode_1_0 2)) (not (= mode_1_0 3))) (or (not (= mode_1_0 1)) (not (= mode_1_0 3))) (or (not (= mode_1_0 3)) (not (= mode_1_0 4))) (or (not (= mode_1_0 2)) (not (= mode_1_0 4))) (or (not (= mode_1_0 1)) (not (= mode_1_0 4))) (or (not (= mode_2_0 1)) (not (= mode_2_0 2))) (or (not (= mode_2_0 2)) (not (= mode_2_0 1)))))
(check-sat)
(exit)
