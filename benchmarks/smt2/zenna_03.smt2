(set-logic QF_NRA)
(set-info :precision 0.0000001)
(declare-fun omega3 () Real)
(assert (>= omega3 0.49766302108764654))
(assert (<= omega3 0.4976634979248047))
(declare-fun omega1 () Real)
(assert (>= omega1 0.43626213073730474))
(assert (<= omega1 0.4362626075744629))
(declare-fun omega0 () Real)
(assert (>= omega0 0.45101928710937506))
(assert (<= omega0 0.4510197639465332))
(declare-fun omega2 () Real)
(assert (>= omega2 0.7388572692871095))
(assert (<= omega2 0.7388577461242676))
(declare-fun omega4 () Real)
(assert (>= omega4 0.5024824142456056))
(assert (<= omega4 0.5024828910827637))
(assert (or (or (or (or (or (and (and (and (and (and (>= (+ (* (- 2 -2) omega0) -2) 0.99) (<= (+ (* (- 2 -2) omega0) -2) 1.01)) (and (>= (+ (* (- 2 -2) omega1) -2) -0.01) (<= (+ (* (- 2 -2) omega1) -2) 0.01))) (and (>= (+ (* (- 2 -2) omega2) -2) -0.01) (<= (+ (* (- 2 -2) omega2) -2) 0.01))) (and (>= (+ (* (- 2 -2) omega3) -2) -0.01) (<= (+ (* (- 2 -2) omega3) -2) 0.01))) (and (>= (+ (* (- 2 -2) omega4) -2) -0.01) (<= (+ (* (- 2 -2) omega4) -2) 0.01))) (and (and (and (and (and (>= (+ (* (- 2 -2) omega0) -2) -0.21000000000000002) (<= (+ (* (- 2 -2) omega0) -2) -0.19)) (and (>= (+ (* (- 2 -2) omega1) -2) 0.9697958971132712) (<= (+ (* (- 2 -2) omega1) -2) 0.9897958971132712))) (and (>= (+ (* (- 2 -2) omega2) -2) -0.01) (<= (+ (* (- 2 -2) omega2) -2) 0.01))) (and (>= (+ (* (- 2 -2) omega3) -2) -0.01) (<= (+ (* (- 2 -2) omega3) -2) 0.01))) (and (>= (+ (* (- 2 -2) omega4) -2) -0.01) (<= (+ (* (- 2 -2) omega4) -2) 0.01)))) (and (and (and (and (and (>= (+ (* (- 2 -2) omega0) -2) -0.21000000000000002) (<= (+ (* (- 2 -2) omega0) -2) -0.19)) (and (>= (+ (* (- 2 -2) omega1) -2) -0.2549489742783178) (<= (+ (* (- 2 -2) omega1) -2) -0.23494897427831782))) (and (>= (+ (* (- 2 -2) omega2) -2) 0.9386832980505138) (<= (+ (* (- 2 -2) omega2) -2) 0.9586832980505138))) (and (>= (+ (* (- 2 -2) omega3) -2) -0.01) (<= (+ (* (- 2 -2) omega3) -2) 0.01))) (and (>= (+ (* (- 2 -2) omega4) -2) -0.01) (<= (+ (* (- 2 -2) omega4) -2) 0.01)))) (and (and (and (and (and (>= (+ (* (- 2 -2) omega0) -2) -0.21000000000000002) (<= (+ (* (- 2 -2) omega0) -2) -0.19)) (and (>= (+ (* (- 2 -2) omega1) -2) -0.2549489742783178) (<= (+ (* (- 2 -2) omega1) -2) -0.23494897427831782))) (and (>= (+ (* (- 2 -2) omega2) -2) -0.326227766016838) (<= (+ (* (- 2 -2) omega2) -2) -0.306227766016838))) (and (>= (+ (* (- 2 -2) omega3) -2) 0.8844271909999158) (<= (+ (* (- 2 -2) omega3) -2) 0.9044271909999159))) (and (>= (+ (* (- 2 -2) omega4) -2) -0.01) (<= (+ (* (- 2 -2) omega4) -2) 0.01)))) (and (and (and (and (and (>= (+ (* (- 2 -2) omega0) -2) -0.21000000000000002) (<= (+ (* (- 2 -2) omega0) -2) -0.19)) (and (>= (+ (* (- 2 -2) omega1) -2) -0.2549489742783178) (<= (+ (* (- 2 -2) omega1) -2) -0.23494897427831782))) (and (>= (+ (* (- 2 -2) omega2) -2) -0.326227766016838) (<= (+ (* (- 2 -2) omega2) -2) -0.306227766016838))) (and (>= (+ (* (- 2 -2) omega3) -2) -0.45721359549995805) (<= (+ (* (- 2 -2) omega3) -2) -0.43721359549995803))) (and (>= (+ (* (- 2 -2) omega4) -2) 0.7645966692414833) (<= (+ (* (- 2 -2) omega4) -2) 0.7845966692414833)))) (and (and (and (and (and (>= (+ (* (- 2 -2) omega0) -2) -0.21000000000000002) (<= (+ (* (- 2 -2) omega0) -2) -0.19)) (and (>= (+ (* (- 2 -2) omega1) -2) -0.2549489742783178) (<= (+ (* (- 2 -2) omega1) -2) -0.23494897427831782))) (and (>= (+ (* (- 2 -2) omega2) -2) -0.326227766016838) (<= (+ (* (- 2 -2) omega2) -2) -0.306227766016838))) (and (>= (+ (* (- 2 -2) omega3) -2) -0.45721359549995805) (<= (+ (* (- 2 -2) omega3) -2) -0.43721359549995803))) (and (>= (+ (* (- 2 -2) omega4) -2) -0.7845966692414836) (<= (+ (* (- 2 -2) omega4) -2) -0.7645966692414836)))))
(check-sat)
(exit)

