(set-logic QF_NRA)
(declare-fun a () Int [1, 16])
(declare-fun b () Int [1, 16])
(declare-fun c () Int [1, 16])
(declare-fun d () Int [1, 16])
(declare-fun e () Int [1, 16])
(declare-fun f () Int [1, 16])
(declare-fun g () Int [1, 16])
(declare-fun h () Int [1, 16])
(declare-fun j () Int [1, 16])
(declare-fun k () Int [1, 16])
(declare-fun l () Int [1, 16])
(declare-fun m () Int [1, 16])
(declare-fun n () Int [1, 16])
(declare-fun p () Int [1, 16])
(declare-fun q () Int [1, 16])
(declare-fun r () Int [1, 16])

;; [9,12,16,15,11,2,1,10,4,3,6,8,5,7,13,14]
;; (assert (= a 9))
;; (assert (= b 12))
;; (assert (= c 16))
;; (assert (= d 15))
;; (assert (= e 11))
;; (assert (= f 2))
;; (assert (= g 1))
;; (assert (= h 10))
;; (assert (= j 4))
;; (assert (= k 3))
;; (assert (= l 6))
;; (assert (= m 8))
;; (assert (= n 5))
;; (assert (= p 7))
;; (assert (= q 13))
;; (assert (= r 14))

;; add!((a * b - c + d) == 107)
;; add!((e - f + g * h) == 19)
;; add!((j + k * l - m) == 14)
;; add!((n - p * q + r) == -72)
;; add!((a - e - j + n) == -1)
;; add!((b / f * k - p) == 11)
;; add!((c + g * l - q) == 9)
;; add!((d - h * m + r) == -51)

(assert (and
         (not (= a b))
         (not (= a c))
         (not (= a d))
         (not (= a e))
         (not (= a f))
         (not (= a g))
         (not (= a h))
         (not (= a j))
         (not (= a k))
         (not (= a l))
         (not (= a m))
         (not (= a n))
         (not (= a p))
         (not (= a q))
         (not (= a r))

         (not (= b c))
         (not (= b d))
         (not (= b e))
         (not (= b f))
         (not (= b g))
         (not (= b h))
         (not (= b j))
         (not (= b k))
         (not (= b l))
         (not (= b m))
         (not (= b n))
         (not (= b p))
         (not (= b q))
         (not (= b r))

         (not (= c d))
         (not (= c e))
         (not (= c f))
         (not (= c g))
         (not (= c h))
         (not (= c j))
         (not (= c k))
         (not (= c l))
         (not (= c m))
         (not (= c n))
         (not (= c p))
         (not (= c q))
         (not (= c r))

         (not (= d e))
         (not (= d f))
         (not (= d g))
         (not (= d h))
         (not (= d j))
         (not (= d k))
         (not (= d l))
         (not (= d m))
         (not (= d n))
         (not (= d p))
         (not (= d q))
         (not (= d r))

         (not (= e f))
         (not (= e g))
         (not (= e h))
         (not (= e j))
         (not (= e k))
         (not (= e l))
         (not (= e m))
         (not (= e n))
         (not (= e p))
         (not (= e q))
         (not (= e r))

         (not (= f g))
         (not (= f h))
         (not (= f j))
         (not (= f k))
         (not (= f l))
         (not (= f m))
         (not (= f n))
         (not (= f p))
         (not (= f q))
         (not (= f r))

         (not (= g h))
         (not (= g j))
         (not (= g k))
         (not (= g l))
         (not (= g m))
         (not (= g n))
         (not (= g p))
         (not (= g q))
         (not (= g r))

         (not (= h j))
         (not (= h k))
         (not (= h l))
         (not (= h m))
         (not (= h n))
         (not (= h p))
         (not (= h q))
         (not (= h r))

         (not (= j k))
         (not (= j l))
         (not (= j m))
         (not (= j n))
         (not (= j p))
         (not (= j q))
         (not (= j r))

         (not (= k l))
         (not (= k m))
         (not (= k n))
         (not (= k p))
         (not (= k q))
         (not (= k r))

         (not (= l m))
         (not (= l n))
         (not (= l p))
         (not (= l q))
         (not (= l r))

         (not (= m n))
         (not (= m p))
         (not (= m q))
         (not (= m r))

         (not (= n p))
         (not (= n q))
         (not (= n r))

         (not (= p q))
         (not (= p r))

         (not (= q r))

))

(assert (= (+ (* a b) (- 0 c) d) 107))
(assert (= (+ e (- 0 f) (* g h)) 19))
(assert (= (+ j (* k l) (- 0 m)) 14))
(assert (= (+ n (- 0 (* p q)) r) -72))
(assert (= (+ a (- 0 e) (- 0 j) n) -1))
(assert (= (+ (* (/ b f) k) (- 0 p)) 11))
(assert (= (+ c (* g l) (- 0 q)) 9))
(assert (= (+ d (- 0 (* h m)) r) -51))
(check-sat)
(exit)
