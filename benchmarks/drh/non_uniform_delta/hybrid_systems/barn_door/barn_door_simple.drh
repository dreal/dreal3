#define twopi 6.28
#define pi 3.14
#define target 2.5

[0, 1] on;
[0, 10] time;
[0, twopi] theta;
[10,10] dist;
[5, 5] height;
[-50, 50] aim_height;
[0, 1] x;

{ mode 1;

  invt:
        (<= on 0);
	(<= 0 theta);
	(<= dist 10);
	(>= dist 10);
	(<= height 5);
	(>= height 5);
	(<= aim_height 50);
	(>= aim_height -50);
	(<= x 1);
	(>= x -1);
  flow:
        d/dt[on] = 0;
	d/dt[theta] = x;
        d/dt[dist] = 0;
        d/dt[height] = 0;
	d/dt[aim_height] = (* dist (cos theta));
	d/dt[x] = (/ theta x);
  jump:
	(= on 0) ==> @2 (and (= on' 1) (= theta' theta) (= dist' dist) (= height' height) (= aim_height' aim_height) (= x' x));
}

{ mode 2;

  invt:
        (>= on 1);
	(<= 0 theta);
	(<= dist 10);
	(>= dist 10);
	(<= height 5);
	(>= height 5);
	(<= aim_height 50);
	(>= aim_height -50);
	(<= x 1);
	(>= x -1);
  flow:
        d/dt[on] = 0;
	d/dt[theta] = 0;
        d/dt[dist] = 0;
        d/dt[height] = 0;
	d/dt[aim_height] = 0;
	d/dt[x] = 0;
  jump:
        (= on 1) ==> @1 (and (= on' 0) (= theta' theta) (= dist' dist) (= height' height) (= aim_height' aim_height) (= x' x));
}

init:
@1	(and (= on 0) (= aim_height 0) (= theta 0) (= dist 10) (= height 5) (= x 0));

goal:
@2	(and (= on 1) (= aim_height target [2.5]) );

