
#define K1 0.015
#define K2 0.045
#define K3 0.03
#define h1 100.0
#define h2 200.0
#define h3 300.0

#define c12  0.01
#define c23  0.05
#define c31  0.02

#define gT 20

[-20, 100] x1;
[-20, 100] x2;
[-20, 100] x3;

[0, 1] tau;
[0, 1] time;

{mode 1;

  invt: (tau >= 0);
        (tau <= 1);
  flow:
        d/dt[x1] = K1 * (h1 - ((1 - c12 - c31) * x1 + c12 * x2 + c31 * x3));
        d/dt[x2] = K2 * (h2 - ((1 - c12 - c23) * x2 + c12 * x1 + c23 * x3));
        d/dt[x3] = K3 * (h3 - ((1 - c23 - c31) * x3 + c23 * x2 + c31 * x1));
        d/dt[tau]  = 1;
  jump:
        (and (tau = 1) (x1 <= gT) (x2 <= gT) (x3 <= gT)) ==> 
          @1 (and (x1' = x1) (x2' = x2) (x3' = x3) (tau' = 0));
        (and (tau = 1) (x1 <= gT) (x2 <= gT) (x3 > gT)) ==> 
          @2 (and (x1' = x1) (x2' = x2) (x3' = x3) (tau' = 0));
        (and (tau = 1) (x1 <= gT) (x2 > gT) (x3 <= gT)) ==> 
          @3 (and (x1' = x1) (x2' = x2) (x3' = x3) (tau' = 0));
        (and (tau = 1) (x1 <= gT) (x2 > gT) (x3 > gT)) ==> 
          @4 (and (x1' = x1) (x2' = x2) (x3' = x3) (tau' = 0));
        (and (tau = 1) (x1 > gT) (x2 <= gT) (x3 <= gT)) ==> 
          @5 (and (x1' = x1) (x2' = x2) (x3' = x3) (tau' = 0));
        (and (tau = 1) (x1 > gT) (x2 <= gT) (x3 > gT)) ==> 
          @6 (and (x1' = x1) (x2' = x2) (x3' = x3) (tau' = 0));
        (and (tau = 1) (x1 > gT) (x2 > gT) (x3 <= gT)) ==> 
          @7 (and (x1' = x1) (x2' = x2) (x3' = x3) (tau' = 0));
        (and (tau = 1) (x1 > gT) (x2 > gT) (x3 > gT)) ==> 
          @8 (and (x1' = x1) (x2' = x2) (x3' = x3) (tau' = 0));
}
{mode 2;

  invt: (tau >= 0);
        (tau <= 1);
  flow:
        d/dt[x1] = K1 * (h1 - ((1 - c12 - c31) * x1 + c12 * x2 + c31 * x3));
        d/dt[x2] = K2 * (h2 - ((1 - c12 - c23) * x2 + c12 * x1 + c23 * x3));
        d/dt[x3] = - K3 * ((1 - c23 - c31) * x3 + c23 * x2 + c31 * x1);
        d/dt[tau]  = 1;
  jump:
        (and (tau = 1) (x1 <= gT) (x2 <= gT) (x3 <= gT)) ==> 
          @1 (and (x1' = x1) (x2' = x2) (x3' = x3) (tau' = 0));
        (and (tau = 1) (x1 <= gT) (x2 <= gT) (x3 > gT)) ==> 
          @2 (and (x1' = x1) (x2' = x2) (x3' = x3) (tau' = 0));
        (and (tau = 1) (x1 <= gT) (x2 > gT) (x3 <= gT)) ==> 
          @3 (and (x1' = x1) (x2' = x2) (x3' = x3) (tau' = 0));
        (and (tau = 1) (x1 <= gT) (x2 > gT) (x3 > gT)) ==> 
          @4 (and (x1' = x1) (x2' = x2) (x3' = x3) (tau' = 0));
        (and (tau = 1) (x1 > gT) (x2 <= gT) (x3 <= gT)) ==> 
          @5 (and (x1' = x1) (x2' = x2) (x3' = x3) (tau' = 0));
        (and (tau = 1) (x1 > gT) (x2 <= gT) (x3 > gT)) ==> 
          @6 (and (x1' = x1) (x2' = x2) (x3' = x3) (tau' = 0));
        (and (tau = 1) (x1 > gT) (x2 > gT) (x3 <= gT)) ==> 
          @7 (and (x1' = x1) (x2' = x2) (x3' = x3) (tau' = 0));
        (and (tau = 1) (x1 > gT) (x2 > gT) (x3 > gT)) ==> 
          @8 (and (x1' = x1) (x2' = x2) (x3' = x3) (tau' = 0));
}
{mode 3;

  invt: (tau >= 0);
        (tau <= 1);
  flow:
        d/dt[x1] = K1 * (h1 - ((1 - c12 - c31) * x1 + c12 * x2 + c31 * x3));
        d/dt[x2] = - K2 * ((1 - c12 - c23) * x2 + c12 * x1 + c23 * x3);
        d/dt[x3] = K3 * (h3 - ((1 - c23 - c31) * x3 + c23 * x2 + c31 * x1));
        d/dt[tau]  = 1;
  jump:
        (and (tau = 1) (x1 <= gT) (x2 <= gT) (x3 <= gT)) ==> 
          @1 (and (x1' = x1) (x2' = x2) (x3' = x3) (tau' = 0));
        (and (tau = 1) (x1 <= gT) (x2 <= gT) (x3 > gT)) ==> 
          @2 (and (x1' = x1) (x2' = x2) (x3' = x3) (tau' = 0));
        (and (tau = 1) (x1 <= gT) (x2 > gT) (x3 <= gT)) ==> 
          @3 (and (x1' = x1) (x2' = x2) (x3' = x3) (tau' = 0));
        (and (tau = 1) (x1 <= gT) (x2 > gT) (x3 > gT)) ==> 
          @4 (and (x1' = x1) (x2' = x2) (x3' = x3) (tau' = 0));
        (and (tau = 1) (x1 > gT) (x2 <= gT) (x3 <= gT)) ==> 
          @5 (and (x1' = x1) (x2' = x2) (x3' = x3) (tau' = 0));
        (and (tau = 1) (x1 > gT) (x2 <= gT) (x3 > gT)) ==> 
          @6 (and (x1' = x1) (x2' = x2) (x3' = x3) (tau' = 0));
        (and (tau = 1) (x1 > gT) (x2 > gT) (x3 <= gT)) ==> 
          @7 (and (x1' = x1) (x2' = x2) (x3' = x3) (tau' = 0));
        (and (tau = 1) (x1 > gT) (x2 > gT) (x3 > gT)) ==> 
          @8 (and (x1' = x1) (x2' = x2) (x3' = x3) (tau' = 0));
}
{mode 4;

  invt: (tau >= 0);
        (tau <= 1);
  flow:
        d/dt[x1] = K1 * (h1 - ((1 - c12 - c31) * x1 + c12 * x2 + c31 * x3));
        d/dt[x2] = - K2 * ((1 - c12 - c23) * x2 + c12 * x1 + c23 * x3);
        d/dt[x3] = - K3 * ((1 - c23 - c31) * x3 + c23 * x2 + c31 * x1);
        d/dt[tau]  = 1;
  jump:
        (and (tau = 1) (x1 <= gT) (x2 <= gT) (x3 <= gT)) ==> 
          @1 (and (x1' = x1) (x2' = x2) (x3' = x3) (tau' = 0));
        (and (tau = 1) (x1 <= gT) (x2 <= gT) (x3 > gT)) ==> 
          @2 (and (x1' = x1) (x2' = x2) (x3' = x3) (tau' = 0));
        (and (tau = 1) (x1 <= gT) (x2 > gT) (x3 <= gT)) ==> 
          @3 (and (x1' = x1) (x2' = x2) (x3' = x3) (tau' = 0));
        (and (tau = 1) (x1 <= gT) (x2 > gT) (x3 > gT)) ==> 
          @4 (and (x1' = x1) (x2' = x2) (x3' = x3) (tau' = 0));
        (and (tau = 1) (x1 > gT) (x2 <= gT) (x3 <= gT)) ==> 
          @5 (and (x1' = x1) (x2' = x2) (x3' = x3) (tau' = 0));
        (and (tau = 1) (x1 > gT) (x2 <= gT) (x3 > gT)) ==> 
          @6 (and (x1' = x1) (x2' = x2) (x3' = x3) (tau' = 0));
        (and (tau = 1) (x1 > gT) (x2 > gT) (x3 <= gT)) ==> 
          @7 (and (x1' = x1) (x2' = x2) (x3' = x3) (tau' = 0));
        (and (tau = 1) (x1 > gT) (x2 > gT) (x3 > gT)) ==> 
          @8 (and (x1' = x1) (x2' = x2) (x3' = x3) (tau' = 0));
}
{mode 5;

  invt: (tau >= 0);
        (tau <= 1);
  flow:
        d/dt[x1] = - K1 * ((1 - c12 - c31) * x1 + c12 * x2 + c31 * x3);
        d/dt[x2] = K2 * (h2 - ((1 - c12 - c23) * x2 + c12 * x1 + c23 * x3));
        d/dt[x3] = K3 * (h3 - ((1 - c23 - c31) * x3 + c23 * x2 + c31 * x1));
        d/dt[tau]  = 1;
  jump:
        (and (tau = 1) (x1 <= gT) (x2 <= gT) (x3 <= gT)) ==> 
          @1 (and (x1' = x1) (x2' = x2) (x3' = x3) (tau' = 0));
        (and (tau = 1) (x1 <= gT) (x2 <= gT) (x3 > gT)) ==> 
          @2 (and (x1' = x1) (x2' = x2) (x3' = x3) (tau' = 0));
        (and (tau = 1) (x1 <= gT) (x2 > gT) (x3 <= gT)) ==> 
          @3 (and (x1' = x1) (x2' = x2) (x3' = x3) (tau' = 0));
        (and (tau = 1) (x1 <= gT) (x2 > gT) (x3 > gT)) ==> 
          @4 (and (x1' = x1) (x2' = x2) (x3' = x3) (tau' = 0));
        (and (tau = 1) (x1 > gT) (x2 <= gT) (x3 <= gT)) ==> 
          @5 (and (x1' = x1) (x2' = x2) (x3' = x3) (tau' = 0));
        (and (tau = 1) (x1 > gT) (x2 <= gT) (x3 > gT)) ==> 
          @6 (and (x1' = x1) (x2' = x2) (x3' = x3) (tau' = 0));
        (and (tau = 1) (x1 > gT) (x2 > gT) (x3 <= gT)) ==> 
          @7 (and (x1' = x1) (x2' = x2) (x3' = x3) (tau' = 0));
        (and (tau = 1) (x1 > gT) (x2 > gT) (x3 > gT)) ==> 
          @8 (and (x1' = x1) (x2' = x2) (x3' = x3) (tau' = 0));
}
{mode 6;

  invt: (tau >= 0);
        (tau <= 1);
  flow:
        d/dt[x1] = - K1 * ((1 - c12 - c31) * x1 + c12 * x2 + c31 * x3);
        d/dt[x2] = K2 * (h2 - ((1 - c12 - c23) * x2 + c12 * x1 + c23 * x3));
        d/dt[x3] = - K3 * ((1 - c23 - c31) * x3 + c23 * x2 + c31 * x1);
        d/dt[tau]  = 1;
  jump:
        (and (tau = 1) (x1 <= gT) (x2 <= gT) (x3 <= gT)) ==> 
          @1 (and (x1' = x1) (x2' = x2) (x3' = x3) (tau' = 0));
        (and (tau = 1) (x1 <= gT) (x2 <= gT) (x3 > gT)) ==> 
          @2 (and (x1' = x1) (x2' = x2) (x3' = x3) (tau' = 0));
        (and (tau = 1) (x1 <= gT) (x2 > gT) (x3 <= gT)) ==> 
          @3 (and (x1' = x1) (x2' = x2) (x3' = x3) (tau' = 0));
        (and (tau = 1) (x1 <= gT) (x2 > gT) (x3 > gT)) ==> 
          @4 (and (x1' = x1) (x2' = x2) (x3' = x3) (tau' = 0));
        (and (tau = 1) (x1 > gT) (x2 <= gT) (x3 <= gT)) ==> 
          @5 (and (x1' = x1) (x2' = x2) (x3' = x3) (tau' = 0));
        (and (tau = 1) (x1 > gT) (x2 <= gT) (x3 > gT)) ==> 
          @6 (and (x1' = x1) (x2' = x2) (x3' = x3) (tau' = 0));
        (and (tau = 1) (x1 > gT) (x2 > gT) (x3 <= gT)) ==> 
          @7 (and (x1' = x1) (x2' = x2) (x3' = x3) (tau' = 0));
        (and (tau = 1) (x1 > gT) (x2 > gT) (x3 > gT)) ==> 
          @8 (and (x1' = x1) (x2' = x2) (x3' = x3) (tau' = 0));
}
{mode 7;

  invt: (tau >= 0);
        (tau <= 1);
  flow:
        d/dt[x1] = - K1 * ((1 - c12 - c31) * x1 + c12 * x2 + c31 * x3);
        d/dt[x2] = - K2 * ((1 - c12 - c23) * x2 + c12 * x1 + c23 * x3);
        d/dt[x3] = K3 * (h3 - ((1 - c23 - c31) * x3 + c23 * x2 + c31 * x1));
        d/dt[tau]  = 1;
  jump:
        (and (tau = 1) (x1 <= gT) (x2 <= gT) (x3 <= gT)) ==> 
          @1 (and (x1' = x1) (x2' = x2) (x3' = x3) (tau' = 0));
        (and (tau = 1) (x1 <= gT) (x2 <= gT) (x3 > gT)) ==> 
          @2 (and (x1' = x1) (x2' = x2) (x3' = x3) (tau' = 0));
        (and (tau = 1) (x1 <= gT) (x2 > gT) (x3 <= gT)) ==> 
          @3 (and (x1' = x1) (x2' = x2) (x3' = x3) (tau' = 0));
        (and (tau = 1) (x1 <= gT) (x2 > gT) (x3 > gT)) ==> 
          @4 (and (x1' = x1) (x2' = x2) (x3' = x3) (tau' = 0));
        (and (tau = 1) (x1 > gT) (x2 <= gT) (x3 <= gT)) ==> 
          @5 (and (x1' = x1) (x2' = x2) (x3' = x3) (tau' = 0));
        (and (tau = 1) (x1 > gT) (x2 <= gT) (x3 > gT)) ==> 
          @6 (and (x1' = x1) (x2' = x2) (x3' = x3) (tau' = 0));
        (and (tau = 1) (x1 > gT) (x2 > gT) (x3 <= gT)) ==> 
          @7 (and (x1' = x1) (x2' = x2) (x3' = x3) (tau' = 0));
        (and (tau = 1) (x1 > gT) (x2 > gT) (x3 > gT)) ==> 
          @8 (and (x1' = x1) (x2' = x2) (x3' = x3) (tau' = 0));
}
{mode 8;

  invt: (tau >= 0);
        (tau <= 1);
  flow:
        d/dt[x1] = - K1 * ((1 - c12 - c31) * x1 + c12 * x2 + c31 * x3);
        d/dt[x2] = - K2 * ((1 - c12 - c23) * x2 + c12 * x1 + c23 * x3);
        d/dt[x3] = - K3 * ((1 - c23 - c31) * x3 + c23 * x2 + c31 * x1);
        d/dt[tau]  = 1;
  jump:
        (and (tau = 1) (x1 <= gT) (x2 <= gT) (x3 <= gT)) ==> 
          @1 (and (x1' = x1) (x2' = x2) (x3' = x3) (tau' = 0));
        (and (tau = 1) (x1 <= gT) (x2 <= gT) (x3 > gT)) ==> 
          @2 (and (x1' = x1) (x2' = x2) (x3' = x3) (tau' = 0));
        (and (tau = 1) (x1 <= gT) (x2 > gT) (x3 <= gT)) ==> 
          @3 (and (x1' = x1) (x2' = x2) (x3' = x3) (tau' = 0));
        (and (tau = 1) (x1 <= gT) (x2 > gT) (x3 > gT)) ==> 
          @4 (and (x1' = x1) (x2' = x2) (x3' = x3) (tau' = 0));
        (and (tau = 1) (x1 > gT) (x2 <= gT) (x3 <= gT)) ==> 
          @5 (and (x1' = x1) (x2' = x2) (x3' = x3) (tau' = 0));
        (and (tau = 1) (x1 > gT) (x2 <= gT) (x3 > gT)) ==> 
          @6 (and (x1' = x1) (x2' = x2) (x3' = x3) (tau' = 0));
        (and (tau = 1) (x1 > gT) (x2 > gT) (x3 <= gT)) ==> 
          @7 (and (x1' = x1) (x2' = x2) (x3' = x3) (tau' = 0));
        (and (tau = 1) (x1 > gT) (x2 > gT) (x3 > gT)) ==> 
          @8 (and (x1' = x1) (x2' = x2) (x3' = x3) (tau' = 0));
}


init:
@1  (and (x1 >= gT - 1) (x1 <= gT + 1) 
         (x2 >= gT - 1) (x2 <= gT + 1) (x3 >= gT - 1) (x3 <= gT + 1) (tau = 0));

goal:
@1  (and (or (x1 < gT - 1) (x1 > gT + 1)) (or (x2 < gT - 1) (x2 > gT + 1)) (or (x3 < gT - 1) (x3 > gT + 1)));
@2  (and (or (x1 < gT - 1) (x1 > gT + 1)) (or (x2 < gT - 1) (x2 > gT + 1)) (or (x3 < gT - 1) (x3 > gT + 1)));
@3  (and (or (x1 < gT - 1) (x1 > gT + 1)) (or (x2 < gT - 1) (x2 > gT + 1)) (or (x3 < gT - 1) (x3 > gT + 1)));
@4  (and (or (x1 < gT - 1) (x1 > gT + 1)) (or (x2 < gT - 1) (x2 > gT + 1)) (or (x3 < gT - 1) (x3 > gT + 1)));
@5  (and (or (x1 < gT - 1) (x1 > gT + 1)) (or (x2 < gT - 1) (x2 > gT + 1)) (or (x3 < gT - 1) (x3 > gT + 1)));
@6  (and (or (x1 < gT - 1) (x1 > gT + 1)) (or (x2 < gT - 1) (x2 > gT + 1)) (or (x3 < gT - 1) (x3 > gT + 1)));
@7  (and (or (x1 < gT - 1) (x1 > gT + 1)) (or (x2 < gT - 1) (x2 > gT + 1)) (or (x3 < gT - 1) (x3 > gT + 1)));
@8  (and (or (x1 < gT - 1) (x1 > gT + 1)) (or (x2 < gT - 1) (x2 > gT + 1)) (or (x3 < gT - 1) (x3 > gT + 1)));

