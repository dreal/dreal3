//  NLP written by GAMS Convert at 02/19/13 20:49:50
//  
//  Equation counts
//      Total        E        G        L        N        X        C        B
//          4        2        2        0        0        0        0        0
//  
//  Variable counts
//                   x        b        i      s1s      s2s       sc       si
//      Total     cont   binary  integer     sos1     sos2    scont     sint
//         10       10        0        0        0        0        0        0
//  FX      0        0        0        0        0        0        0        0
//  
//  Nonzero counts
//      Total    const       NL      DLL
//         17        8        9        0
//
// Reformulation has removed 1 variable and 1 equation
//


VARIABLES  x1,x2,x3,x4,x5,x6,x7,x8,x9;

POSITIVE_VARIABLES  x4,x5,x6,x7,x8,x9;

LOWER_BOUNDS{
x1: 0.1;
x2: 0.1;
x3: 0.1;
}

EQUATIONS  e2,e3,e4;


e2:    x1 + x2 + x3 == 1;

e3:  - x4 + x5 >= 0;

e4:  - x5 + x6 >= 0;

OBJ: minimize -(log(0.398942448887604*(x1/x7*exp(-0.5*((95 - x4)/x7)^2) + x2/x8
              *exp(-0.5*((95 - x5)/x8)^2) + x3/x9*exp(-0.5*((95 - x6)/x9)^2)))
               + log(0.398942448887604*(x1/x7*exp(-0.5*((105 - x4)/x7)^2) + x2/
              x8*exp(-0.5*((105 - x5)/x8)^2) + x3/x9*exp(-0.5*((105 - x6)/x9)^2
              ))) + 4*log(0.398942448887604*(x1/x7*exp(-0.5*((110 - x4)/x7)^2)
               + x2/x8*exp(-0.5*((110 - x5)/x8)^2) + x3/x9*exp(-0.5*((110 - x6)
              /x9)^2))) + 4*log(0.398942448887604*(x1/x7*exp(-0.5*((115 - x4)/
              x7)^2) + x2/x8*exp(-0.5*((115 - x5)/x8)^2) + x3/x9*exp(-0.5*((115
               - x6)/x9)^2))) + 15*log(0.398942448887604*(x1/x7*exp(-0.5*((120
               - x4)/x7)^2) + x2/x8*exp(-0.5*((120 - x5)/x8)^2) + x3/x9*exp(-
              0.5*((120 - x6)/x9)^2))) + 15*log(0.398942448887604*(x1/x7*exp(-
              0.5*((125 - x4)/x7)^2) + x2/x8*exp(-0.5*((125 - x5)/x8)^2) + x3/
              x9*exp(-0.5*((125 - x6)/x9)^2))) + 15*log(0.398942448887604*(x1/
              x7*exp(-0.5*((130 - x4)/x7)^2) + x2/x8*exp(-0.5*((130 - x5)/x8)^2
              ) + x3/x9*exp(-0.5*((130 - x6)/x9)^2))) + 13*log(
              0.398942448887604*(x1/x7*exp(-0.5*((135 - x4)/x7)^2) + x2/x8*exp(
              -0.5*((135 - x5)/x8)^2) + x3/x9*exp(-0.5*((135 - x6)/x9)^2))) + 
              21*log(0.398942448887604*(x1/x7*exp(-0.5*((140 - x4)/x7)^2) + x2/
              x8*exp(-0.5*((140 - x5)/x8)^2) + x3/x9*exp(-0.5*((140 - x6)/x9)^2
              ))) + 12*log(0.398942448887604*(x1/x7*exp(-0.5*((145 - x4)/x7)^2)
               + x2/x8*exp(-0.5*((145 - x5)/x8)^2) + x3/x9*exp(-0.5*((145 - x6)
              /x9)^2))) + 17*log(0.398942448887604*(x1/x7*exp(-0.5*((150 - x4)/
              x7)^2) + x2/x8*exp(-0.5*((150 - x5)/x8)^2) + x3/x9*exp(-0.5*((150
               - x6)/x9)^2))) + 4*log(0.398942448887604*(x1/x7*exp(-0.5*((155
               - x4)/x7)^2) + x2/x8*exp(-0.5*((155 - x5)/x8)^2) + x3/x9*exp(-
              0.5*((155 - x6)/x9)^2))) + 20*log(0.398942448887604*(x1/x7*exp(-
              0.5*((160 - x4)/x7)^2) + x2/x8*exp(-0.5*((160 - x5)/x8)^2) + x3/
              x9*exp(-0.5*((160 - x6)/x9)^2))) + 8*log(0.398942448887604*(x1/x7
              *exp(-0.5*((165 - x4)/x7)^2) + x2/x8*exp(-0.5*((165 - x5)/x8)^2)
               + x3/x9*exp(-0.5*((165 - x6)/x9)^2))) + 17*log(0.398942448887604
              *(x1/x7*exp(-0.5*((170 - x4)/x7)^2) + x2/x8*exp(-0.5*((170 - x5)/
              x8)^2) + x3/x9*exp(-0.5*((170 - x6)/x9)^2))) + 8*log(
              0.398942448887604*(x1/x7*exp(-0.5*((175 - x4)/x7)^2) + x2/x8*exp(
              -0.5*((175 - x5)/x8)^2) + x3/x9*exp(-0.5*((175 - x6)/x9)^2))) + 6
              *log(0.398942448887604*(x1/x7*exp(-0.5*((180 - x4)/x7)^2) + x2/x8
              *exp(-0.5*((180 - x5)/x8)^2) + x3/x9*exp(-0.5*((180 - x6)/x9)^2))
              ) + 6*log(0.398942448887604*(x1/x7*exp(-0.5*((185 - x4)/x7)^2) + 
              x2/x8*exp(-0.5*((185 - x5)/x8)^2) + x3/x9*exp(-0.5*((185 - x6)/x9
              )^2))) + 7*log(0.398942448887604*(x1/x7*exp(-0.5*((190 - x4)/x7)^
              2) + x2/x8*exp(-0.5*((190 - x5)/x8)^2) + x3/x9*exp(-0.5*((190 - 
              x6)/x9)^2))) + 4*log(0.398942448887604*(x1/x7*exp(-0.5*((195 - x4
              )/x7)^2) + x2/x8*exp(-0.5*((195 - x5)/x8)^2) + x3/x9*exp(-0.5*((
              195 - x6)/x9)^2))) + 3*log(0.398942448887604*(x1/x7*exp(-0.5*((
              200 - x4)/x7)^2) + x2/x8*exp(-0.5*((200 - x5)/x8)^2) + x3/x9*exp(
              -0.5*((200 - x6)/x9)^2))) + 3*log(0.398942448887604*(x1/x7*exp(-
              0.5*((205 - x4)/x7)^2) + x2/x8*exp(-0.5*((205 - x5)/x8)^2) + x3/
              x9*exp(-0.5*((205 - x6)/x9)^2))) + 8*log(0.398942448887604*(x1/x7
              *exp(-0.5*((210 - x4)/x7)^2) + x2/x8*exp(-0.5*((210 - x5)/x8)^2)
               + x3/x9*exp(-0.5*((210 - x6)/x9)^2))) + log(0.398942448887604*(
              x1/x7*exp(-0.5*((215 - x4)/x7)^2) + x2/x8*exp(-0.5*((215 - x5)/x8
              )^2) + x3/x9*exp(-0.5*((215 - x6)/x9)^2))) + 6*log(
              0.398942448887604*(x1/x7*exp(-0.5*((220 - x4)/x7)^2) + x2/x8*exp(
              -0.5*((220 - x5)/x8)^2) + x3/x9*exp(-0.5*((220 - x6)/x9)^2))) + 5
              *log(0.398942448887604*(x1/x7*exp(-0.5*((230 - x4)/x7)^2) + x2/x8
              *exp(-0.5*((230 - x5)/x8)^2) + x3/x9*exp(-0.5*((230 - x6)/x9)^2))
              ) + log(0.398942448887604*(x1/x7*exp(-0.5*((235 - x4)/x7)^2) + x2
              /x8*exp(-0.5*((235 - x5)/x8)^2) + x3/x9*exp(-0.5*((235 - x6)/x9)^
              2))) + 7*log(0.398942448887604*(x1/x7*exp(-0.5*((240 - x4)/x7)^2)
               + x2/x8*exp(-0.5*((240 - x5)/x8)^2) + x3/x9*exp(-0.5*((240 - x6)
              /x9)^2))) + log(0.398942448887604*(x1/x7*exp(-0.5*((245 - x4)/x7)
              ^2) + x2/x8*exp(-0.5*((245 - x5)/x8)^2) + x3/x9*exp(-0.5*((245 - 
              x6)/x9)^2))) + 2*log(0.398942448887604*(x1/x7*exp(-0.5*((260 - x4
              )/x7)^2) + x2/x8*exp(-0.5*((260 - x5)/x8)^2) + x3/x9*exp(-0.5*((
              260 - x6)/x9)^2))));

STARTING_POINT{
x1: 0.333333333333333;
x2: 0.333333333333333;
x3: 0.333333333333333;
x4: 130;
x5: 160;
x6: 190;
x7: 15;
x8: 15;
x9: 15;
}
