//  NLP written by GAMS Convert at 02/19/13 20:49:45
//  
//  Equation counts
//      Total        E        G        L        N        X        C        B
//         94       94        0        0        0        0        0        0
//  
//  Variable counts
//                   x        b        i      s1s      s2s       sc       si
//      Total     cont   binary  integer     sos1     sos2    scont     sint
//        127      127        0        0        0        0        0        0
//  FX      0        0        0        0        0        0        0        0
//  
//  Nonzero counts
//      Total    const       NL      DLL
//        664      129      535        0
//
// Reformulation has removed 1 variable and 1 equation
//


VARIABLES  x2,x3,x4,x5,x6,x7,x8,x9,x10,x11,x12,x13,x14,x15,x16,x17,x18,x19,x20
          ,x21,x22,x23,x24,x25,x26,x27,x28,x29,x30,x31,x32,x33,x34,x35,x36,x37
          ,x38,x39,x40,x41,x42,x43,x44,x45,x46,x47,x48,x49,x50,x51,x52,x53,x54
          ,x55,x56,x57,x58,x59,x60,x61,x62,x63,x64,x65,x66,x67,x68,x69,x70,x71
          ,x72,x73,x74,x75,x76,x77,x78,x79,x80,x81,x82,x83,x84,x85,x86,x87,x88
          ,x89,x90,x91,x92,x93,x94,x95,x96,x97,x98,x99,x100,x101,x102,x103
          ,x104,x105,x106,x107,x108,x109,x110,x111,x112,x113,x114,x115,x116
          ,x117,x118,x119,x120,x121,x122,x123,x124,x125,x126,x127;

POSITIVE_VARIABLES  x2,x3,x4,x5,x6,x7,x8,x9,x10,x11,x12,x13,x14,x15,x16,x17
          ,x18,x19,x20,x21,x22,x23,x24,x25,x26,x27,x28,x29,x30,x31,x32,x33,x34
          ,x35,x36,x37,x38,x39,x40,x41,x42,x43,x44,x45,x46,x47,x48,x49,x50,x51
          ,x52,x53,x54,x55,x56,x57,x58,x59,x60,x61,x62,x63,x64,x65,x66,x67,x68
          ,x69,x70,x71,x72,x73,x74,x75,x76,x77,x78,x79,x80,x81,x82,x83,x84,x85
          ,x86,x87,x88,x89,x90,x91,x92,x93,x94,x95,x96,x97,x98,x99,x100,x101
          ,x102,x103,x104,x105,x106,x107,x108,x109,x110,x111,x112,x113,x114
          ,x115,x116,x117,x118,x119,x120,x121,x122,x123,x124,x125,x126,x127;

UPPER_BOUNDS{
x2: 1000;
x3: 1000;
x4: 1000;
x5: 1000;
x6: 1000;
x7: 1000;
x8: 1000;
x9: 1000;
x10: 1000;
x11: 1000;
x12: 10;
x13: 10;
x14: 10;
x15: 10;
x16: 10;
x17: 10;
x18: 10;
x19: 10;
x20: 10;
x21: 10;
x22: 10;
x23: 10;
x24: 10;
x25: 10;
x26: 10;
x27: 10;
x28: 10;
x29: 10;
x30: 10;
x31: 10;
x32: 10;
x33: 10;
x34: 10;
x35: 10;
x36: 10;
x37: 1000;
x38: 1000;
x39: 1000;
x40: 1000;
x41: 1000;
x42: 10;
x43: 10;
x44: 10;
x45: 10;
x46: 10;
x47: 10;
x48: 10;
x49: 10;
x50: 10;
x51: 10;
x52: 10;
x53: 10;
x54: 10;
x55: 10;
x56: 10;
x57: 10;
x58: 10;
x59: 10;
x60: 10;
x61: 10;
x62: 10;
x63: 10;
x64: 10;
x65: 10;
x66: 10;
x67: 1000;
x68: 1000;
x69: 1000;
x70: 1000;
x71: 1000;
x72: 1000;
x73: 1000;
x74: 1000;
x75: 1000;
x76: 1000;
x77: 1000;
x78: 1000;
x79: 1000;
x80: 1000;
x81: 1000;
x82: 1000;
x83: 1000;
x84: 1000;
x85: 1000;
x86: 1000;
x87: 1000;
x88: 1000;
x89: 1000;
x90: 1000;
x91: 1000;
x92: 1000;
x93: 1000;
x94: 1000;
x95: 1000;
x96: 1000;
x97: 1000;
x98: 10;
x99: 10;
x100: 10;
x101: 10;
x102: 10;
x103: 10000;
x104: 10000;
x105: 10000;
x106: 10000;
x107: 10000;
x108: 10000;
x109: 10000;
x110: 10000;
x111: 10000;
x112: 10000;
x113: 10000;
x114: 10000;
x115: 10000;
x116: 10000;
x117: 10000;
x118: 10000;
x119: 10000;
x120: 10000;
x121: 10000;
x122: 10000;
x123: 10000;
x124: 10000;
x125: 10000;
x126: 10000;
x127: 10000;
}

EQUATIONS  e2,e3,e4,e5,e6,e7,e8,e9,e10,e11,e12,e13,e14,e15,e16,e17,e18,e19,e20
          ,e21,e22,e23,e24,e25,e26,e27,e28,e29,e30,e31,e32,e33,e34,e35,e36,e37
          ,e38,e39,e40,e41,e42,e43,e44,e45,e46,e47,e48,e49,e50,e51,e52,e53,e54
          ,e55,e56,e57,e58,e59,e60,e61,e62,e63,e64,e65,e66,e67,e68,e69,e70,e71
          ,e72,e73,e74,e75,e76,e77,e78,e79,e80,e81,e82,e83,e84,e85,e86,e87,e88
          ,e89,e90,e91,e92,e93,e94;


e2:  - x2 - x3 - x4 - x5 - x6 == -100;

e3:  - x2 + x7 - x67 - x72 - x77 - x82 - x87 == 0;

e4:  - x3 + x8 - x68 - x73 - x78 - x83 - x88 == 0;

e5:  - x4 + x9 - x69 - x74 - x79 - x84 - x89 == 0;

e6:  - x5 + x10 - x70 - x75 - x80 - x85 - x90 == 0;

e7:  - x6 + x11 - x71 - x76 - x81 - x86 - x91 == 0;

e8: x12*x7 - (x42*x67 + x47*x72 + x52*x77 + x57*x82 + x62*x87) - 6*x2 == 0;

e9: x13*x7 - (x43*x67 + x48*x72 + x53*x77 + x58*x82 + x63*x87) == 0;

e10: x14*x7 - (x44*x67 + x49*x72 + x54*x77 + x59*x82 + x64*x87) == 0;

e11: x15*x7 - (x45*x67 + x50*x72 + x55*x77 + x60*x82 + x65*x87) == 0;

e12: x16*x7 - (x46*x67 + x51*x72 + x56*x77 + x61*x82 + x66*x87) == 0;

e13: x17*x8 - (x42*x68 + x47*x73 + x52*x78 + x57*x83 + x62*x88) - 6*x3 == 0;

e14: x18*x8 - (x43*x68 + x48*x73 + x53*x78 + x58*x83 + x63*x88) == 0;

e15: x19*x8 - (x44*x68 + x49*x73 + x54*x78 + x59*x83 + x64*x88) == 0;

e16: x20*x8 - (x45*x68 + x50*x73 + x55*x78 + x60*x83 + x65*x88) == 0;

e17: x21*x8 - (x46*x68 + x51*x73 + x56*x78 + x61*x83 + x66*x88) == 0;

e18: x22*x9 - (x42*x69 + x47*x74 + x52*x79 + x57*x84 + x62*x89) - 6*x4 == 0;

e19: x23*x9 - (x43*x69 + x48*x74 + x53*x79 + x58*x84 + x63*x89) == 0;

e20: x24*x9 - (x44*x69 + x49*x74 + x54*x79 + x59*x84 + x64*x89) == 0;

e21: x25*x9 - (x45*x69 + x50*x74 + x55*x79 + x60*x84 + x65*x89) == 0;

e22: x26*x9 - (x46*x69 + x51*x74 + x56*x79 + x61*x84 + x66*x89) == 0;

e23: x27*x10 - (x42*x70 + x47*x75 + x52*x80 + x57*x85 + x62*x90) - 6*x5 == 0;

e24: x28*x10 - (x43*x70 + x48*x75 + x53*x80 + x58*x85 + x63*x90) == 0;

e25: x29*x10 - (x44*x70 + x49*x75 + x54*x80 + x59*x85 + x64*x90) == 0;

e26: x30*x10 - (x45*x70 + x50*x75 + x55*x80 + x60*x85 + x65*x90) == 0;

e27: x31*x10 - (x46*x70 + x51*x75 + x56*x80 + x61*x85 + x66*x90) == 0;

e28: x32*x11 - (x42*x71 + x47*x76 + x52*x81 + x57*x86 + x62*x91) - 6*x6 == 0;

e29: x33*x11 - (x43*x71 + x48*x76 + x53*x81 + x58*x86 + x63*x91) == 0;

e30: x34*x11 - (x44*x71 + x49*x76 + x54*x81 + x59*x86 + x64*x91) == 0;

e31: x35*x11 - (x45*x71 + x50*x76 + x55*x81 + x60*x86 + x65*x91) == 0;

e32: x36*x11 - (x46*x71 + x51*x76 + x56*x81 + x61*x86 + x66*x91) == 0;

e33:  - x7 + x37 == 0;

e34:  - x8 + x38 == 0;

e35:  - x9 + x39 == 0;

e36:  - x10 + x40 == 0;

e37:  - x11 + x41 == 0;

e38: x42*x37 - (x12*x7 + x103*(-x108 - x110)) == 0;

e39: x43*x37 - (x13*x7 + x103*(x108 - x109 - x111)) == 0;

e40: x44*x37 - (x14*x7 + x103*x109) == 0;

e41: x45*x37 - (x15*x7 + x103*x110) == 0;

e42: x46*x37 - (x16*x7 + x103*x111) == 0;

e43: x47*x38 - (x17*x8 + x104*(-x112 - x114)) == 0;

e44: x48*x38 - (x18*x8 + x104*(x112 - x113 - x115)) == 0;

e45: x49*x38 - (x19*x8 + x104*x113) == 0;

e46: x50*x38 - (x20*x8 + x104*x114) == 0;

e47: x51*x38 - (x21*x8 + x104*x115) == 0;

e48: x52*x39 - (x22*x9 + x105*(-x116 - x118)) == 0;

e49: x53*x39 - (x23*x9 + x105*(x116 - x117 - x119)) == 0;

e50: x54*x39 - (x24*x9 + x105*x117) == 0;

e51: x55*x39 - (x25*x9 + x105*x118) == 0;

e52: x56*x39 - (x26*x9 + x105*x119) == 0;

e53: x57*x40 - (x27*x10 + x106*(-x120 - x122)) == 0;

e54: x58*x40 - (x28*x10 + x106*(x120 - x121 - x123)) == 0;

e55: x59*x40 - (x29*x10 + x106*x121) == 0;

e56: x60*x40 - (x30*x10 + x106*x122) == 0;

e57: x61*x40 - (x31*x10 + x106*x123) == 0;

e58: x62*x41 - (x32*x11 + x107*(-x124 - x126)) == 0;

e59: x63*x41 - (x33*x11 + x107*(x124 - x125 - x127)) == 0;

e60: x64*x41 - (x34*x11 + x107*x125) == 0;

e61: x65*x41 - (x35*x11 + x107*x126) == 0;

e62: x66*x41 - (x36*x11 + x107*x127) == 0;

e63: -x42*x42 + x108 == 0;

e64: -x47*x47 + x112 == 0;

e65: -x52*x52 + x116 == 0;

e66: -x57*x57 + x120 == 0;

e67: -x62*x62 + x124 == 0;

e68:  - 0.6*x43 + x109 == 0;

e69:  - 0.6*x48 + x113 == 0;

e70:  - 0.6*x53 + x117 == 0;

e71:  - 0.6*x58 + x121 == 0;

e72:  - 0.6*x63 + x125 == 0;

e73:  - 0.6*x42 + x110 == 0;

e74:  - 0.6*x47 + x114 == 0;

e75:  - 0.6*x52 + x118 == 0;

e76:  - 0.6*x57 + x122 == 0;

e77:  - 0.6*x62 + x126 == 0;

e78: -0.1*x43*x43 + x111 == 0;

e79: -0.1*x48*x48 + x115 == 0;

e80: -0.1*x53*x53 + x119 == 0;

e81: -0.1*x58*x58 + x123 == 0;

e82: -0.1*x63*x63 + x127 == 0;

e83:    x37 - x67 - x68 - x69 - x70 - x71 - x92 == 0;

e84:    x38 - x72 - x73 - x74 - x75 - x76 - x93 == 0;

e85:    x39 - x77 - x78 - x79 - x80 - x81 - x94 == 0;

e86:    x40 - x82 - x83 - x84 - x85 - x86 - x95 == 0;

e87:    x41 - x87 - x88 - x89 - x90 - x91 - x96 == 0;

e88:  - x92 - x93 - x94 - x95 - x96 + x97 == 0;

e89: x97*x98 - (x92*x42 + x93*x47 + x94*x52 + x95*x57 + x96*x62) == 0;

e90: x97*x99 - (x92*x43 + x93*x48 + x94*x53 + x95*x58 + x96*x63) == 0;

e91: x97*x100 - (x92*x44 + x93*x49 + x94*x54 + x95*x59 + x96*x64) == 0;

e92: x97*x101 - (x92*x45 + x93*x50 + x94*x55 + x95*x60 + x96*x65) == 0;

e93: x97*x102 - (x92*x46 + x93*x51 + x94*x56 + x95*x61 + x96*x66) == 0;

e94:    x98 == 0.3;

OBJ: minimize  - x100;

STARTING_POINT{
x2: 50;
x3: 50;
x4: 50;
x5: 50;
x6: 50;
x7: 50;
x8: 50;
x9: 50;
x10: 50;
x11: 50;
x12: 0.2;
x13: 0.2;
x14: 0.2;
x15: 0.2;
x16: 0.2;
x17: 0.2;
x18: 0.2;
x19: 0.2;
x20: 0.2;
x21: 0.2;
x22: 0.2;
x23: 0.2;
x24: 0.2;
x25: 0.2;
x26: 0.2;
x27: 0.2;
x28: 0.2;
x29: 0.2;
x30: 0.2;
x31: 0.2;
x32: 0.2;
x33: 0.2;
x34: 0.2;
x35: 0.2;
x36: 0.2;
x37: 100;
x38: 100;
x39: 100;
x40: 100;
x41: 100;
x42: 0.2;
x43: 0.2;
x44: 0.2;
x45: 0.2;
x46: 0.2;
x47: 0.2;
x48: 0.2;
x49: 0.2;
x50: 0.2;
x51: 0.2;
x52: 0.2;
x53: 0.2;
x54: 0.2;
x55: 0.2;
x56: 0.2;
x57: 0.2;
x58: 0.2;
x59: 0.2;
x60: 0.2;
x61: 0.2;
x62: 0.2;
x63: 0.2;
x64: 0.2;
x65: 0.2;
x66: 0.2;
x67: 50;
x68: 50;
x69: 50;
x70: 50;
x71: 50;
x72: 50;
x73: 50;
x74: 50;
x75: 50;
x76: 50;
x77: 50;
x78: 50;
x79: 50;
x80: 50;
x81: 50;
x82: 50;
x83: 50;
x84: 50;
x85: 50;
x86: 50;
x87: 50;
x88: 50;
x89: 50;
x90: 50;
x91: 50;
x92: 50;
x93: 50;
x94: 50;
x95: 50;
x96: 50;
x97: 100;
x98: 0.2;
x99: 0.2;
x100: 0.2;
x101: 0.2;
x102: 0.2;
x103: 1;
x104: 1;
x105: 1;
x106: 1;
x107: 1;
}
