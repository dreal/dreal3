//  NLP written by GAMS Convert at 02/19/13 20:49:45
//  
//  Equation counts
//      Total        E        G        L        N        X        C        B
//         46       46        0        0        0        0        0        0
//  
//  Variable counts
//                   x        b        i      s1s      s2s       sc       si
//      Total     cont   binary  integer     sos1     sos2    scont     sint
//         79       79        0        0        0        0        0        0
//  FX      0        0        0        0        0        0        0        0
//  
//  Nonzero counts
//      Total    const       NL      DLL
//        327      113      214        0
//
// Reformulation has removed 1 variable and 1 equation
//


VARIABLES  x2,x3,x4,x5,x6,x7,x8,x9,x10,x11,x12,x13,x14,x15,x16,x17,x18,x19,x20
          ,x21,x22,x23,x24,x25,x26,x27,x28,x29,x30,x31,x32,x33,x34,x35,x36,x37
          ,x38,x39,x40,x41,x42,x43,x44,x45,x46,x47,x48,x49,x50,x51,x52,x53,x54
          ,x55,x56,x57,x58,x59,x60,x61,x62,x63,x64,x65,x66,x67,x68,x69,x70,x71
          ,x72,x73,x74,x75,x76,x77,x78,x79;

POSITIVE_VARIABLES  x2,x3,x4,x5,x6,x7,x8,x9,x10,x11,x12,x13,x14,x15,x16,x17
          ,x18,x19,x20,x21,x22,x23,x24,x25,x26,x27,x28,x29,x30,x31,x32,x33,x34
          ,x35,x36,x37,x38,x39,x40,x41,x42,x43,x44,x45,x46,x47,x48,x49,x50,x51
          ,x52,x53,x54,x55,x56,x57,x58,x59,x60,x61,x62,x63,x64,x65,x66,x67,x68
          ,x69,x70,x71,x72,x73,x74,x75,x76,x77,x78,x79;

UPPER_BOUNDS{
x2: 1000;
x3: 1000;
x4: 1000;
x5: 1000;
x6: 1000;
x7: 1000;
x8: 1000;
x9: 1000;
x10: 1000;
x11: 1000;
x12: 10;
x13: 10;
x14: 10;
x15: 10;
x16: 10;
x17: 10;
x18: 10;
x19: 10;
x20: 10;
x21: 10;
x22: 1000;
x23: 1000;
x24: 1000;
x25: 1000;
x26: 1000;
x27: 10;
x28: 10;
x29: 10;
x30: 10;
x31: 10;
x32: 10;
x33: 10;
x34: 10;
x35: 10;
x36: 10;
x37: 1000;
x38: 1000;
x39: 1000;
x40: 1000;
x41: 1000;
x42: 1000;
x43: 1000;
x44: 1000;
x45: 1000;
x46: 1000;
x47: 1000;
x48: 1000;
x49: 1000;
x50: 1000;
x51: 1000;
x52: 1000;
x53: 1000;
x54: 1000;
x55: 1000;
x56: 1000;
x57: 1000;
x58: 1000;
x59: 1000;
x60: 1000;
x61: 1000;
x62: 1000;
x63: 1000;
x64: 1000;
x65: 1000;
x66: 1000;
x67: 1000;
x68: 10;
x69: 10;
x70: 10000;
x71: 10000;
x72: 10000;
x73: 10000;
x74: 10000;
x75: 10000;
x76: 10000;
x77: 10000;
x78: 10000;
x79: 10000;
}

EQUATIONS  e2,e3,e4,e5,e6,e7,e8,e9,e10,e11,e12,e13,e14,e15,e16,e17,e18,e19,e20
          ,e21,e22,e23,e24,e25,e26,e27,e28,e29,e30,e31,e32,e33,e34,e35,e36,e37
          ,e38,e39,e40,e41,e42,e43,e44,e45,e46;


e2:  - x2 - x3 - x4 - x5 - x6 == -100;

e3:  - x2 + x7 - x37 - x42 - x47 - x52 - x57 == 0;

e4:  - x3 + x8 - x38 - x43 - x48 - x53 - x58 == 0;

e5:  - x4 + x9 - x39 - x44 - x49 - x54 - x59 == 0;

e6:  - x5 + x10 - x40 - x45 - x50 - x55 - x60 == 0;

e7:  - x6 + x11 - x41 - x46 - x51 - x56 - x61 == 0;

e8: x12*x7 - (x27*x37 + x29*x42 + x31*x47 + x33*x52 + x35*x57) - 0.45*x2 == 0;

e9: x13*x7 - (x28*x37 + x30*x42 + x32*x47 + x34*x52 + x36*x57) - 0.55*x2 == 0;

e10: x14*x8 - (x27*x38 + x29*x43 + x31*x48 + x33*x53 + x35*x58) - 0.45*x3 == 0;

e11: x15*x8 - (x28*x38 + x30*x43 + x32*x48 + x34*x53 + x36*x58) - 0.55*x3 == 0;

e12: x16*x9 - (x27*x39 + x29*x44 + x31*x49 + x33*x54 + x35*x59) - 0.45*x4 == 0;

e13: x17*x9 - (x28*x39 + x30*x44 + x32*x49 + x34*x54 + x36*x59) - 0.55*x4 == 0;

e14: x18*x10 - (x27*x40 + x29*x45 + x31*x50 + x33*x55 + x35*x60) - 0.45*x5
      == 0;

e15: x19*x10 - (x28*x40 + x30*x45 + x32*x50 + x34*x55 + x36*x60) - 0.55*x5
      == 0;

e16: x20*x11 - (x27*x41 + x29*x46 + x31*x51 + x33*x56 + x35*x61) - 0.45*x6
      == 0;

e17: x21*x11 - (x28*x41 + x30*x46 + x32*x51 + x34*x56 + x36*x61) - 0.55*x6
      == 0;

e18:  - x7 + x22 == 0;

e19:  - x8 + x23 == 0;

e20:  - x9 + x24 == 0;

e21:  - x10 + x25 == 0;

e22:  - x11 + x26 == 0;

e23: x27*x22 - (x12*x7 - x70*x75) == 0;

e24: x28*x22 - (x13*x7 + x70*x75) == 0;

e25: x29*x23 - (x14*x8 - x71*x76) == 0;

e26: x30*x23 - (x15*x8 + x71*x76) == 0;

e27: x31*x24 - (x16*x9 - x72*x77) == 0;

e28: x32*x24 - (x17*x9 + x72*x77) == 0;

e29: x33*x25 - (x18*x10 - x73*x78) == 0;

e30: x34*x25 - (x19*x10 + x73*x78) == 0;

e31: x35*x26 - (x20*x11 - x74*x79) == 0;

e32: x36*x26 - (x21*x11 + x74*x79) == 0;

e33: -x27*x28 + x75 == 0;

e34: -x29*x30 + x76 == 0;

e35: -x31*x32 + x77 == 0;

e36: -x33*x34 + x78 == 0;

e37: -x35*x36 + x79 == 0;

e38:    x22 - x37 - x38 - x39 - x40 - x41 - x62 == 0;

e39:    x23 - x42 - x43 - x44 - x45 - x46 - x63 == 0;

e40:    x24 - x47 - x48 - x49 - x50 - x51 - x64 == 0;

e41:    x25 - x52 - x53 - x54 - x55 - x56 - x65 == 0;

e42:    x26 - x57 - x58 - x59 - x60 - x61 - x66 == 0;

e43:  - x62 - x63 - x64 - x65 - x66 + x67 == 0;

e44: x67*x68 - (x62*x27 + x63*x29 + x64*x31 + x65*x33 + x66*x35) == 0;

e45: x67*x69 - (x62*x28 + x63*x30 + x64*x32 + x65*x34 + x66*x36) == 0;

e46:    x70 + x71 + x72 + x73 + x74 == 100;

OBJ: minimize  - x69;

STARTING_POINT{
x2: 50;
x3: 50;
x4: 50;
x5: 50;
x6: 50;
x7: 50;
x8: 50;
x9: 50;
x10: 50;
x11: 50;
x12: 0.2;
x13: 0.2;
x14: 0.2;
x15: 0.2;
x16: 0.2;
x17: 0.2;
x18: 0.2;
x19: 0.2;
x20: 0.2;
x21: 0.2;
x22: 100;
x23: 100;
x24: 100;
x25: 100;
x26: 100;
x27: 0.2;
x28: 0.2;
x29: 0.2;
x30: 0.2;
x31: 0.2;
x32: 0.2;
x33: 0.2;
x34: 0.2;
x35: 0.2;
x36: 0.2;
x37: 50;
x38: 50;
x39: 50;
x40: 50;
x41: 50;
x42: 50;
x43: 50;
x44: 50;
x45: 50;
x46: 50;
x47: 50;
x48: 50;
x49: 50;
x50: 50;
x51: 50;
x52: 50;
x53: 50;
x54: 50;
x55: 50;
x56: 50;
x57: 50;
x58: 50;
x59: 50;
x60: 50;
x61: 50;
x62: 50;
x63: 50;
x64: 50;
x65: 50;
x66: 50;
x67: 100;
x68: 0.2;
x69: 0.2;
x70: 1;
x71: 1;
x72: 1;
x73: 1;
x74: 1;
}
