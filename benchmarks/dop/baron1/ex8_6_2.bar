//  NLP written by GAMS Convert at 02/19/13 20:49:46
//  
//  Equation counts
//      Total        E        G        L        N        X        C        B
//          1        1        0        0        0        0        0        0
//  
//  Variable counts
//                   x        b        i      s1s      s2s       sc       si
//      Total     cont   binary  integer     sos1     sos2    scont     sint
//         31       31        0        0        0        0        0        0
//  FX      6        6        0        0        0        0        0        0
//  
//  Nonzero counts
//      Total    const       NL      DLL
//         31        1       30        0
//
// Reformulation has removed 1 variable and 1 equation
//


VARIABLES  x1,x2,x3,x4,x5,x6,x7,x8,x9,x10,x11,x12,x13,x14,x15,x16,x17,x18,x19
          ,x20,x21,x22,x23,x24,x25,x26,x27,x28,x29,x30;

POSITIVE_VARIABLES  x1,x11,x12,x21,x22,x23;

LOWER_BOUNDS{
x2: -5;
x3: -5;
x4: -5;
x5: -5;
x6: -5;
x7: -5;
x8: -5;
x9: -5;
x10: -5;
x13: -5;
x14: -5;
x15: -5;
x16: -5;
x17: -5;
x18: -5;
x19: -5;
x20: -5;
x24: -5;
x25: -5;
x26: -5;
x27: -5;
x28: -5;
x29: -5;
x30: -5;
}

UPPER_BOUNDS{
x1: 0;
x2: 5;
x3: 5;
x4: 5;
x5: 5;
x6: 5;
x7: 5;
x8: 5;
x9: 5;
x10: 5;
x11: 0;
x12: 0;
x13: 5;
x14: 5;
x15: 5;
x16: 5;
x17: 5;
x18: 5;
x19: 5;
x20: 5;
x21: 0;
x22: 0;
x23: 0;
x24: 5;
x25: 5;
x26: 5;
x27: 5;
x28: 5;
x29: 5;
x30: 5;
}


OBJ: minimize (1 - exp(3 - 3*((x1 - x2)^2 + (x11 - x12)^2 + (x21 - x22)^2)^0.5)
              )^2 + (1 - exp(3 - 3*((x1 - x3)^2 + (x11 - x13)^2 + (x21 - x23)^2
              )^0.5))^2 + (1 - exp(3 - 3*((x1 - x4)^2 + (x11 - x14)^2 + (x21 - 
              x24)^2)^0.5))^2 + (1 - exp(3 - 3*((x1 - x5)^2 + (x11 - x15)^2 + (
              x21 - x25)^2)^0.5))^2 + (1 - exp(3 - 3*((x1 - x6)^2 + (x11 - x16)
              ^2 + (x21 - x26)^2)^0.5))^2 + (1 - exp(3 - 3*((x1 - x7)^2 + (x11
               - x17)^2 + (x21 - x27)^2)^0.5))^2 + (1 - exp(3 - 3*((x1 - x8)^2
               + (x11 - x18)^2 + (x21 - x28)^2)^0.5))^2 + (1 - exp(3 - 3*((x1
               - x9)^2 + (x11 - x19)^2 + (x21 - x29)^2)^0.5))^2 + (1 - exp(3 - 
              3*((x1 - x10)^2 + (x11 - x20)^2 + (x21 - x30)^2)^0.5))^2 + (1 - 
              exp(3 - 3*((x2 - x3)^2 + (x12 - x13)^2 + (x22 - x23)^2)^0.5))^2
               + (1 - exp(3 - 3*((x2 - x4)^2 + (x12 - x14)^2 + (x22 - x24)^2)^
              0.5))^2 + (1 - exp(3 - 3*((x2 - x5)^2 + (x12 - x15)^2 + (x22 - 
              x25)^2)^0.5))^2 + (1 - exp(3 - 3*((x2 - x6)^2 + (x12 - x16)^2 + (
              x22 - x26)^2)^0.5))^2 + (1 - exp(3 - 3*((x2 - x7)^2 + (x12 - x17)
              ^2 + (x22 - x27)^2)^0.5))^2 + (1 - exp(3 - 3*((x2 - x8)^2 + (x12
               - x18)^2 + (x22 - x28)^2)^0.5))^2 + (1 - exp(3 - 3*((x2 - x9)^2
               + (x12 - x19)^2 + (x22 - x29)^2)^0.5))^2 + (1 - exp(3 - 3*((x2
               - x10)^2 + (x12 - x20)^2 + (x22 - x30)^2)^0.5))^2 + (1 - exp(3
               - 3*((x3 - x4)^2 + (x13 - x14)^2 + (x23 - x24)^2)^0.5))^2 + (1
               - exp(3 - 3*((x3 - x5)^2 + (x13 - x15)^2 + (x23 - x25)^2)^0.5))^
              2 + (1 - exp(3 - 3*((x3 - x6)^2 + (x13 - x16)^2 + (x23 - x26)^2)^
              0.5))^2 + (1 - exp(3 - 3*((x3 - x7)^2 + (x13 - x17)^2 + (x23 - 
              x27)^2)^0.5))^2 + (1 - exp(3 - 3*((x3 - x8)^2 + (x13 - x18)^2 + (
              x23 - x28)^2)^0.5))^2 + (1 - exp(3 - 3*((x3 - x9)^2 + (x13 - x19)
              ^2 + (x23 - x29)^2)^0.5))^2 + (1 - exp(3 - 3*((x3 - x10)^2 + (x13
               - x20)^2 + (x23 - x30)^2)^0.5))^2 + (1 - exp(3 - 3*((x4 - x5)^2
               + (x14 - x15)^2 + (x24 - x25)^2)^0.5))^2 + (1 - exp(3 - 3*((x4
               - x6)^2 + (x14 - x16)^2 + (x24 - x26)^2)^0.5))^2 + (1 - exp(3 - 
              3*((x4 - x7)^2 + (x14 - x17)^2 + (x24 - x27)^2)^0.5))^2 + (1 - 
              exp(3 - 3*((x4 - x8)^2 + (x14 - x18)^2 + (x24 - x28)^2)^0.5))^2
               + (1 - exp(3 - 3*((x4 - x9)^2 + (x14 - x19)^2 + (x24 - x29)^2)^
              0.5))^2 + (1 - exp(3 - 3*((x4 - x10)^2 + (x14 - x20)^2 + (x24 - 
              x30)^2)^0.5))^2 + (1 - exp(3 - 3*((x5 - x6)^2 + (x15 - x16)^2 + (
              x25 - x26)^2)^0.5))^2 + (1 - exp(3 - 3*((x5 - x7)^2 + (x15 - x17)
              ^2 + (x25 - x27)^2)^0.5))^2 + (1 - exp(3 - 3*((x5 - x8)^2 + (x15
               - x18)^2 + (x25 - x28)^2)^0.5))^2 + (1 - exp(3 - 3*((x5 - x9)^2
               + (x15 - x19)^2 + (x25 - x29)^2)^0.5))^2 + (1 - exp(3 - 3*((x5
               - x10)^2 + (x15 - x20)^2 + (x25 - x30)^2)^0.5))^2 + (1 - exp(3
               - 3*((x6 - x7)^2 + (x16 - x17)^2 + (x26 - x27)^2)^0.5))^2 + (1
               - exp(3 - 3*((x6 - x8)^2 + (x16 - x18)^2 + (x26 - x28)^2)^0.5))^
              2 + (1 - exp(3 - 3*((x6 - x9)^2 + (x16 - x19)^2 + (x26 - x29)^2)^
              0.5))^2 + (1 - exp(3 - 3*((x6 - x10)^2 + (x16 - x20)^2 + (x26 - 
              x30)^2)^0.5))^2 + (1 - exp(3 - 3*((x7 - x8)^2 + (x17 - x18)^2 + (
              x27 - x28)^2)^0.5))^2 + (1 - exp(3 - 3*((x7 - x9)^2 + (x17 - x19)
              ^2 + (x27 - x29)^2)^0.5))^2 + (1 - exp(3 - 3*((x7 - x10)^2 + (x17
               - x20)^2 + (x27 - x30)^2)^0.5))^2 + (1 - exp(3 - 3*((x8 - x9)^2
               + (x18 - x19)^2 + (x28 - x29)^2)^0.5))^2 + (1 - exp(3 - 3*((x8
               - x10)^2 + (x18 - x20)^2 + (x28 - x30)^2)^0.5))^2 + (1 - exp(3
               - 3*((x9 - x10)^2 + (x19 - x20)^2 + (x29 - x30)^2)^0.5))^2 - 45;

STARTING_POINT{
x2: 3.43266708;
x3: 0.50375356;
x4: -1.98862096;
x5: -2.07787883;
x6: -2.75947133;
x7: -1.50169496;
x8: 3.56270347;
x9: -4.32886277;
x10: 0.00210668999999974;
x13: 4.91133039;
x14: 2.62250467;
x15: -3.69307517;
x16: 1.39718759;
x17: -3.40482136;
x18: -2.49919467;
x19: 1.68928609;
x20: -0.64643619;
x24: -3.49898212;
x25: 0.8911365;
x26: 3.30892812;
x27: -2.69184262;
x28: 1.6573446;
x29: 2.75857606;
x30: -1.96341523;
}
