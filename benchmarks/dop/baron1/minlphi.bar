//  NLP written by GAMS Convert at 02/19/13 20:49:51
//  
//  Equation counts
//      Total        E        G        L        N        X        C        B
//         80       28        0       52        0        0        0        0
//  
//  Variable counts
//                   x        b        i      s1s      s2s       sc       si
//      Total     cont   binary  integer     sos1     sos2    scont     sint
//         65       65        0        0        0        0        0        0
//  FX      0        0        0        0        0        0        0        0
//  
//  Nonzero counts
//      Total    const       NL      DLL
//        207      171       36        0
//
// Reformulation has removed 1 variable and 1 equation
//


VARIABLES  x2,x3,x4,x5,x6,x7,x8,x9,x10,x11,x12,x13,x14,x15,x16,x17,x18,x19,x20
          ,x21,x22,x23,x24,x25,x26,x27,x28,x29,x30,x31,x32,x33,x34,x35,x36,x37
          ,x38,x39,x40,x41,x42,x43,x44,x45,x46,x47,x48,x49,x50,x51,x52,x53,x54
          ,x55,x56,x57,x58,x59,x60,x61,x62,x63,x64,x65;

POSITIVE_VARIABLES  x2,x3,x4,x5,x6,x7,x8,x9,x10,x11,x12,x13,x14,x15,x16,x17
          ,x18,x19,x20,x21,x22,x23,x24,x25,x26,x27,x28,x29,x31,x33,x34,x35,x36
          ,x37,x38,x39,x40,x41,x42,x43,x44,x45,x46,x47,x48,x49,x50,x51,x52,x53
          ,x54,x55,x56,x57,x58,x59,x60,x61,x62,x63,x64,x65;

LOWER_BOUNDS{
x30: 326;
x32: 326;
}

UPPER_BOUNDS{
x31: 304;
x33: 304;
x34: 1000;
x35: 1000;
x36: 1000;
x37: 1000;
}

EQUATIONS  e2,e3,e4,e5,e6,e7,e8,e9,e10,e11,e12,e13,e14,e15,e16,e17,e18,e19,e20
          ,e21,e22,e23,e24,e25,e26,e27,e28,e29,e30,e31,e32,e33,e34,e35,e36,e37
          ,e38,e39,e40,e41,e42,e43,e44,e45,e46,e47,e48,e49,e50,e51,e52,e53,e54
          ,e55,e56,e57,e58,e59,e60,e61,e62,e63,e64,e65,e66,e67,e68,e69,e70,e71
          ,e72,e73,e74,e75,e76,e77,e78,e79,e80;


e2: (-0.666666666666667*((-305 + x30)*(-325 + x30))^0.5) - 0.333333333333333*
    x30 + x38 - x42 + x46 == -105;

e3: (-0.666666666666667*((-305 + x31)*(-325 + x31))^0.5) - 0.333333333333333*
    x31 + x39 - x43 + x47 == -105;

e4: (-0.666666666666667*((-305 + x32)*(-325 + x32))^0.5) - 0.333333333333333*
    x32 + x40 - x44 + x48 == -105;

e5: (-0.666666666666667*((-305 + x33)*(-325 + x33))^0.5) - 0.333333333333333*
    x33 + x41 - x45 + x49 == -105;

e6:    x42 + x50 + x54 <= 0;

e7:    x43 + x51 + x55 <= 1500;

e8:    x44 + x52 + x56 <= 0;

e9:    x45 + x53 + x57 <= 1500;

e10:    x46 + x58 + x62 <= 0;

e11:    x47 + x59 + x63 <= 1500;

e12:    x48 + x60 + x64 <= 0;

e13:    x49 + x61 + x65 <= 1500;

e14:    x30 + x34 + x38 <= 1500;

e15:    x31 + x35 + x39 <= 0;

e16:    x32 + x36 + x40 <= 1500;

e17:    x33 + x37 + x41 <= 0;

e18:    0.9*x3 - x5 == 0;

e19:    0.2*x2 - x4 == 0;

e20:    x2 + x3 == 396;

e21:    x2 <= 1500;

e22:    x3 <= 0;

e23:    x4 <= 1500;

e24:    x5 <= 0;

e25:    x10 - 0.0225*x30 - x58 + x62 == 24.7068;

e26:    x11 - 0.013*x31 - x59 + x63 == 20.54087;

e27:    x12 - 0.0043*x32 - x60 + x64 == 2.239778;

e28:    x13 - 0.0156*x33 - x61 + x65 == 29.766048;

e29:    x6 - x10 == 0;

e30:    x7 - x11 == 0;

e31:    x8 - x12 == 0;

e32:    x9 - x13 == 0;

e33:    x10 - x14 - x26 == 0;

e34:    x11 - x15 - x27 == 0;

e35:    x12 - x16 - x28 == 0;

e36:    x13 - x17 - x29 == 0;

e37:    x6 - x16 - x18 - x22 == 0;

e38:    x7 - x17 - x19 - x23 == 0;

e39:    x8 - x14 - x20 - x24 == 0;

e40:    x9 - x15 - x21 - x25 == 0;

e41:  - x30 <= -341.92;

e42:  - x31 <= 1156.99;

e43:  - x32 <= -353.54;

e44:  - x33 <= 1158.08;

e45:    x34 <= 411;

e46:    x35 <= 411;

e47:    x36 <= 411;

e48:    x37 <= 411;

e49:  - 1.028*x30 + x34 - x50 + x54 == -341.95276;

e50:  - 1.05*x31 + x35 - x51 + x55 == -347.9205;

e51:  - 1.029*x32 + x36 - x52 + x56 == -355.03666;

e52:  - 1.005*x33 + x37 - x53 + x57 == -334.4486;

e53:  - x30 + x36 <= -10;

e54:  - x31 + x37 <= 1490;

e55:  - x32 + x34 <= 1490;

e56:  - x33 + x35 <= 1490;

e57:    x34 <= 1863;

e58:    x35 <= 1863;

e59:    x36 <= 1863;

e60:    x37 <= 1863;

e61:    x14 <= 1500;

e62:    x15 <= 0;

e63:    x16 <= 0;

e64:    x17 <= 0;

e65:    x18 <= 1500;

e66:    x19 <= 0;

e67:    x20 <= 0;

e68:    x21 <= 0;

e69:    x22 <= 0;

e70:    x23 <= 0;

e71:    x24 <= 0;

e72:    x25 <= 0;

e73:    x26 <= 1500;

e74:    x27 <= 0;

e75:    x28 <= 1500;

e76:    x29 <= 0;

e77:    x6 + x10 <= 1500;

e78:    x7 + x11 <= 0;

e79:    x8 + x12 <= 1500;

e80:    x9 + x13 <= 0;

OBJ: minimize 0.4*((-1.15398 + 0.003375*x30)*x2 + (-0.30630793 + 0.000893*x31)*
              x3 + (-1.57608132 + 0.004458*x32)*x4 + (-1.08593792 + 0.003176*
              x33)*x5 + 31.8928571428571*x14/(x30 - x36) + 31.8928571428571*x15
              /(1 + x31 - x37) + 31.8928571428571*x16/(x32 - x34) + 
              31.8928571428571*x17/(1 + x33 - x35) + 31.8928571428571*x26/x38
               + 31.8928571428571*x27/(1 + x39) + 31.8928571428571*x28/x40 + 
              31.8928571428571*x29/(1 + x41) + 31.8928571428571*x18/(421 - x34)
               + 31.8928571428571*x19/(421 - x35) + 31.8928571428571*x20/(421
               - x36) + 31.8928571428571*x21/(421 - x37) + 31.8928571428571*x22
              /(373 - x34) + 31.8928571428571*x23/(373 - x35) + 
              31.8928571428571*x24/(373 - x36) + 31.8928571428571*x25/(373 - 
              x37)) + 12.95216*x18 + 12.95216*x19 + 12.95216*x20 + 12.95216*x21
               + 4.75228*x22 + 4.75228*x23 + 4.75228*x24 + 4.75228*x25 + 2.418*
              x26 + 2.418*x27 + 2.418*x28 + 2.418*x29 + 67.56864;

STARTING_POINT{
x2: 396;
x30: 390;
x32: 360;
x34: 410;
x36: 380;
x38: 76;
x39: 1;
x40: 26;
x41: 1;
}
