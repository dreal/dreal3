[0, 10] v;
[0, 30] d;
[0, 30] time;
{ mode 1;
  flow: 
        d/dt[v] = 0;
        d/dt[d] = 0;
  jump: 
        true  ==> @2 true;
}
{ mode 2;
  invt:
  flow: 
        d/dt[v] = 0 - (0.1 * (v ^2));
        d/dt[d] = v;
  jump: 
        true ==> @3 true;
        true ==> @6 true;
        true ==> @16 true;
}
{ mode 9;
  invt:
        (v >= 50);
  flow: 
        d/dt[v] = 0 - (0.1 * (v ^2));
        d/dt[d] = v;
  jump: 
        true ==> @10 true;
        true ==> @13 true;
}
{ mode 3;
  invt:
  flow: 
        d/dt[v] = 1 - (0.1 * (v ^2));
        d/dt[d] = v;
  jump: 
        true ==> @4 true;
        true ==> @2 true;
        true ==> @16 true;
}
{ mode 10;
  invt:
        (v >= 50);
  flow: 
        d/dt[v] = 1 - (0.1 * (v ^2));
        d/dt[d] = v;
  jump: 
        true ==> @11 true;
        true ==> @9 true;
}
{ mode 4;
  invt:
  flow: 
        d/dt[v] = 2 - (0.1 * (v ^2));
        d/dt[d] = v;
  jump: 
        true ==> @5 true;
        true ==> @3 true;
        true ==> @16 true;
}
{ mode 11;
  invt:
        (v >= 50);
  flow: 
        d/dt[v] = 2 - (0.1 * (v ^2));
        d/dt[d] = v;
  jump: 
        true ==> @12 true;
        true ==> @10 true;
}
{ mode 5;
  invt:
  flow: 
        d/dt[v] = 3 - (0.1 * (v ^2));
        d/dt[d] = v;
  jump: 
        true ==> @4 true;
        true ==> @16 true;
}
{ mode 12;
  invt:
        (v >= 50);
  flow: 
        d/dt[v] = 3 - (0.1 * (v ^2));
        d/dt[d] = v;
  jump: 
        true ==> @11 true;
}
{ mode 6;
  invt:
  flow: 
        d/dt[v] =-1 - (0.1 * (v ^2));
        d/dt[d] = v;
  jump: 
        true ==> @2 true;
        true ==> @16 true;
}
{ mode 13;
  invt:
        (v >= 50);
  flow: 
        d/dt[v] =-1 - (0.1 * (v ^2));
        d/dt[d] = v;
  jump: 
        true ==> @9 true;
        (and (v <= 50)) ==> @6 true;
}
{ mode 7;
  invt:
  flow: 
        d/dt[v] =-2 - (0.1 * (v ^2));
        d/dt[d] = v;
  jump: 
        true ==> @6 true;
        true ==> @16 true;
}
{ mode 14;
  invt:
        (v >= 50);
  flow: 
        d/dt[v] =-2 - (0.1 * (v ^2));
        d/dt[d] = v;
  jump: 
        true ==> @13 true;
        (and (v <= 50)) ==> @7 true;
}
{ mode 8;
  invt:
  flow: 
        d/dt[v] =-3 - (0.1 * (v ^2));
        d/dt[d] = v;
  jump: 
        true ==> @7 true;
        true ==> @16 true;
}
{ mode 15;
  invt:
        (v >= 50);
  flow: 
        d/dt[v] =-3 - (0.1 * (v ^2));
        d/dt[d] = v;
  jump: 
        true ==> @14 true;
        (and (v <= 50)) ==> @8 true;
}
{ mode 16;
  flow: 
        d/dt[v] = 0;
        d/dt[d] = 0;
  jump: 
}
init:
@1 (and (d = 0)
	      (v = 0) 
   );
goal:
 @16 (and (d = 30) (v = 0));
